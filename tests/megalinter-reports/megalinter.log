----------------------------------------------------------------------------------------------------
------------------------------------ MegaLinter, by OX Security ------------------------------------
----------------------------------------------------------------------------------------------------
 - Image Creation Date: 
 - Image Revision: 0d699a348a2c104040efd78f2d2970e6ae8e5769
 - Image Version: 0d699a348a2c104040efd78f2d2970e6ae8e5769
----------------------------------------------------------------------------------------------------
The MegaLinter documentation can be found at:
 - https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769
----------------------------------------------------------------------------------------------------
MegaLinter initialization

[Activation] EDITORCONFIG_EDITORCONFIG_CHECKER has been set inactive, as none of these files has been found: ['.editorconfig']
[Activation] JAVASCRIPT_ES has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']
[Activation] JSON_NPM_PACKAGE_JSON_LINT has been set inactive, as none of these files has been found: ['package.json']
[Activation] JSX_ESLINT has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']
[Activation] REPOSITORY_GOODCHECK has been set inactive, as none of these files has been found: ['goodcheck.yml']
[SemgrepLinter] Deactivated because no ruleset has been defined
[Activation] SPELL_PROSELINT has been set inactive, as none of these files has been found: ['.proselintrc', 'proselint/config.json']
[Activation] SQL_SQLFLUFF has been set inactive, as none of these files has been found: ['.sqlfluff']
[Activation] SWIFT_SWIFTLINT has been set inactive, as none of these files has been found: ['.swiftlint.yml']
[Activation] TSX_ESLINT has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']
[Activation] TYPESCRIPT_ES has been set inactive, as none of these files has been found: ['.eslintrc.json', '.eslintrc.yml', '.eslintrc.yaml', '.eslintrc.js', '.eslintrc.cjs', 'package.json:eslintConfig']
MARKDOWN_REMARK_LINT has been temporary disabled in MegaLinter, please use a previous MegaLinter version or wait for the next one !
Skipped linters: ACTION_ACTIONLINT, ANSIBLE_ANSIBLE_LINT, EDITORCONFIG_EDITORCONFIG_CHECKER, JAVASCRIPT_ES, JAVASCRIPT_PRETTIER, JSON_NPM_PACKAGE_JSON_LINT, JSX_ESLINT, KUBERNETES_KUBECONFORM, KUBERNETES_KUBEVAL, MARKDOWN_REMARK_LINT, REPOSITORY_GOODCHECK, REPOSITORY_SEMGREP, SALESFORCE_SFDX_SCANNER_APEX, SALESFORCE_SFDX_SCANNER_AURA, SALESFORCE_SFDX_SCANNER_LWC, SPELL_PROSELINT, SQL_SQLFLUFF, SWIFT_SWIFTLINT, TSX_ESLINT, TYPESCRIPT_ES, TYPESCRIPT_PRETTIER
To receive reports as email, please set variable EMAIL_REPORTER_EMAIL

MegaLinter now collects the files to analyse
Listing all files in directory [/tmp/lint], then filter with:
- File extensions: , .R, .RMD, .Rmd, .bash, .bicep, .c, .c++, .cc, .cdxml, .clj, .cljc, .cljs, .coffee, .cpp, .cs, .css, .cu, .cuh, .cxx, .dart, .dash, .edn, .env, .feature, .go, .gradle, .graphql, .groovy, .gvy, .h, .h++, .hcl, .hh, .hpp, .htm, .html, .hxx, .java, .js, .json, .json5, .jsonc, .ksh, .kt, .kts, .lua, .md, .nf, .p6, .php, .pl, .pl6, .pm, .pm6, .pp, .proto, .ps1, .ps1xml, .psd1, .psm1, .psrc, .pssc, .py, .r, .raku, .rakumod, .rakutest, .rb, .rs, .rst, .saas, .scala, .scss, .sh, .smk, .sql, .t, .tex, .tf, .ts, .vb, .xml, .yaml, .yml
- File names (regex): Dockerfile, Jenkinsfile, Makefile, Snakefile
Unable to list git ignored files (/tmp/lint)
Kept [189] files on [189] found files

+----MATCHING LINTERS-----+----------+----------------+------------+
| Descriptor | Linter     | Criteria | Matching files | Format/Fix |
+------------+------------+----------+----------------+------------+
| PYTHON     | pylint     | .py      | 189            | no         |
| PYTHON     | black      | .py      | 189            | no         |
| PYTHON     | flake8     | .py      | 189            | no         |
| PYTHON     | isort      | .py      | 189            | no         |
| PYTHON     | bandit     | .py      | 189            | no         |
| PYTHON     | mypy       | .py      | 189            | no         |
| PYTHON     | pyright    | .py      | 189            | no         |
| COPYPASTE  | jscpd      |          | project        | no         |
| REPOSITORY | checkov    |          | project        | no         |
| REPOSITORY | devskim    |          | project        | no         |
| REPOSITORY | dustilock  |          | project        | no         |
| REPOSITORY | git_diff   |          | project        | no         |
| REPOSITORY | gitleaks   |          | project        | no         |
| REPOSITORY | secretlint |          | project        | no         |
| REPOSITORY | syft       |          | project        | no         |
| REPOSITORY | trivy      |          | project        | no         |
| SPELL      | misspell   |          | 189            | no         |
| SPELL      | cspell     |          | 189            | no         |
+------------+------------+----------+----------------+------------+

[31m‚ùå Linted [REPOSITORY] files with [devskim]: Found 8 error(s) - (0.82s)[0m
- Using [devskim v0.7.104] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_devskim
- MegaLinter key: [REPOSITORY_DEVSKIM]
- Rules config: identified by [devskim]
--Error detail:
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:35:31:35:38 [Moderate] DS137138 Insecure URL
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:31:26:31:33 [Moderate] DS137138 Insecure URL
/tmp/lint/smoke/test_virtwho_smoke.py:64:26:64:33 [Moderate] DS137138 Insecure URL
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:32:30:32:37 [Moderate] DS137138 Insecure URL
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:34:26:34:33 [Moderate] DS137138 Insecure URL
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:35:30:35:37 [Moderate] DS137138 Insecure URL
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:46:26:46:33 [Moderate] DS137138 Insecure URL
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:66:26:66:33 [Moderate] DS137138 Insecure URL
For guidance on reported issues visit the relevant page here: https://github.com/microsoft/DevSkim/tree/main/guidance.


[32m‚úÖ Linted [REPOSITORY] files with [gitleaks] successfully - (0.16s)[0m
- Using [gitleaks v8.16.0] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_gitleaks
- MegaLinter key: [REPOSITORY_GITLEAKS]
- Rules config: [.gitleaks.toml]

[31m‚ùå Linted [PYTHON] files with [mypy]: Found 2 error(s) - (2.49s)[0m
- Using [mypy v1.0.1] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/python_mypy
- MegaLinter key: [PYTHON_MYPY]
- Rules config: [.mypy.ini]
- Number of files analyzed: [189]
--Error detail:
tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:92: error: Name "unittest" is not defined  [name-defined]
tmp/lint/smoke/test_virtwho_smoke.py:108: error: Assertion is always true, perhaps remove parentheses?  [misc]
Found 2 errors in 2 files (checked 189 source files)


[31m‚ùå Linted [COPYPASTE] files with [jscpd]: Found 560 error(s) - (4.06s)[0m
- Using [jscpd v3.5.3] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/copypaste_jscpd
- MegaLinter key: [COPYPASTE_JSCPD]
- Rules config: [.jscpd.json]
--Error detail:
Clone found (python):
 - tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py [9:14 - 16:3] (7 lines, 88 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [9:14 - 16:5]

Clone found (python):
 - tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [9:14 - 22:5] (13 lines, 146 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [9:14 - 22:15]

Clone found (python):
 - tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [17:19 - 27:14] (10 lines, 86 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [15:24 - 25:15]

Clone found (python):
 - tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [34:2 - 45:2] (11 lines, 148 tokens)
   tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py [31:2 - 42:2]

Clone found (python):
 - tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py [9:14 - 27:14] (18 lines, 195 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [9:14 - 27:13]

Clone found (python):
 - tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py [33:2 - 45:2] (12 lines, 168 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:2 - 42:2]

Clone found (python):
 - tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py [9:14 - 31:65] (22 lines, 232 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [9:14 - 31:66]

Clone found (python):
 - tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py [35:2 - 47:2] (12 lines, 165 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 42:2]

Clone found (python):
 - tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py [9:14 - 22:12] (13 lines, 146 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [9:14 - 22:15]

Clone found (python):
 - tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py [29:49 - 34:45] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2069_valide_insecure_option_for_kubevirt.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2067_validate_uniform_mapping_format.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2066_validate_cluster_name_with_special_char.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2063_check_hypervisors_fqdn.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2061_check_fake_mode_is_hypervisor_option.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2060_check_commented_out_line_with_tab_space.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py [10:14 - 25:7] (15 lines, 136 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 28:13]

Clone found (python):
 - tier2/tc_2058_post_large_json_to_rhsm.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2057_validate_subscription_register_clean_together.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2057_validate_subscription_register_clean_together.py [47:16 - 54:8] (7 lines, 89 tokens)
   tier2/tc_2057_validate_subscription_register_clean_together.py [24:42 - 31:8]

Clone found (python):
 - tier2/tc_2056_validate_non_root_to_run_virtwho.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2056_validate_non_root_to_run_virtwho.py [12:16 - 23:9] (11 lines, 89 tokens)
   tier2/tc_2057_validate_subscription_register_clean_together.py [9:14 - 20:16]

Clone found (python):
 - tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py [11:16 - 23:7] (12 lines, 97 tokens)
   tier2/tc_2056_validate_non_root_to_run_virtwho.py [11:2 - 20:16]

Clone found (python):
 - tier2/tc_2054_validate_trigger_event_with_different_interval.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py [90:23 - 96:8] (6 lines, 111 tokens)
   tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py [63:24 - 69:8]

Clone found (python):
 - tier2/tc_2052_validate_hypervisors_connection.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2051_validate_virt_who_password_commandline.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2049_validate_hostname_without_domain.py [1:1 - 10:16] (9 lines, 79 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 10:5]

Clone found (python):
 - tier2/tc_2048_register_system_with_activaiton_key.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2048_register_system_with_activaiton_key.py [12:14 - 23:16] (11 lines, 89 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [15:16 - 26:11]

Clone found (python):
 - tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [14:9 - 25:13] (11 lines, 87 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [16:9 - 26:11]

Clone found (python):
 - tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [26:42 - 31:44] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2046_check_registered_by_item_in_satellite_webui.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2046_check_registered_by_item_in_satellite_webui.py [10:18 - 25:10] (15 lines, 120 tokens)
   tier2/tc_2048_register_system_with_activaiton_key.py [9:14 - 26:11]

Clone found (python):
 - tier2/tc_2046_check_registered_by_item_in_satellite_webui.py [18:9 - 27:11] (9 lines, 89 tokens)
   tier2/tc_2066_validate_cluster_name_with_special_char.py [27:9 - 37:5]

Clone found (python):
 - tier2/tc_2046_check_registered_by_item_in_satellite_webui.py [29:2 - 37:42] (8 lines, 84 tokens)
   tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [23:12 - 38:56]

Clone found (python):
 - tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py [1:1 - 10:16] (9 lines, 79 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 10:14]

Clone found (python):
 - tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py [9:14 - 26:16] (17 lines, 153 tokens)
   tier2/tc_2046_check_registered_by_item_in_satellite_webui.py [9:14 - 37:5]

Clone found (python):
 - tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py [35:9 - 41:73] (6 lines, 80 tokens)
   tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [25:9 - 38:56]

Clone found (python):
 - tier2/tc_2044_subscribe_guest_with_activation_key.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2044_subscribe_guest_with_activation_key.py [10:14 - 25:16] (15 lines, 120 tokens)
   tier2/tc_2048_register_system_with_activaiton_key.py [9:14 - 26:11]

Clone found (python):
 - tier2/tc_2044_subscribe_guest_with_activation_key.py [60:8 - 65:53] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py [43:16 - 56:61] (13 lines, 236 tokens)
   tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [49:10 - 62:43]

Clone found (python):
 - tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py [21:16 - 29:14] (8 lines, 83 tokens)
   tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py [20:8 - 28:8]

Clone found (python):
 - tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [72:12 - 77:8] (5 lines, 80 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [43:13 - 48:8]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [10:14 - 21:23] (11 lines, 89 tokens)
   tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py [9:14 - 20:17]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [13:16 - 28:15] (15 lines, 129 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [14:19 - 29:13]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [35:15 - 42:55] (7 lines, 109 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [35:13 - 42:89]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [48:6 - 53:67] (5 lines, 72 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [46:2 - 51:91]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [68:49 - 74:50] (6 lines, 89 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [63:100 - 69:93]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [78:12 - 84:8] (6 lines, 83 tokens)
   tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [44:13 - 50:8]

Clone found (python):
 - tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [82:6 - 88:5] (6 lines, 71 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [75:2 - 81:6]

Clone found (python):
 - tier2/tc_2038_validate_global_configs_by_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2038_validate_global_configs_by_virtwho_conf.py [9:14 - 21:14] (12 lines, 101 tokens)
   tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py [9:14 - 22:5]

Clone found (python):
 - tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py [9:14 - 22:13] (13 lines, 97 tokens)
   tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py [13:14 - 25:10]

Clone found (python):
 - tier2/tc_2036_validate_global_debug_by_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2034_validate_global_interval_by_virtwho_conf.py [1:1 - 10:3] (9 lines, 79 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 10:16]

Clone found (python):
 - tier2/tc_2034_validate_global_interval_by_virtwho_conf.py [11:19 - 25:57] (14 lines, 104 tokens)
   tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py [13:14 - 23:42]

Clone found (python):
 - tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py [9:14 - 24:16] (15 lines, 135 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 24:17]

Clone found (python):
 - tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py [38:14 - 43:73] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py [9:14 - 23:13] (14 lines, 124 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 26:11]

Clone found (python):
 - tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py [26:60 - 31:62] (5 lines, 69 tokens)
   tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py [27:53 - 32:54]

Clone found (python):
 - tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py [9:14 - 25:42] (16 lines, 132 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 26:42]

Clone found (python):
 - tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 25:13] (16 lines, 136 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 35:10]

Clone found (python):
 - tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py [16:11 - 28:14] (12 lines, 100 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [15:16 - 24:17]

Clone found (python):
 - tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py [9:14 - 28:3] (19 lines, 178 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 33:13]

Clone found (python):
 - tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py [52:15 - 57:5] (5 lines, 86 tokens)
   tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py [62:22 - 67:5]

Clone found (python):
 - tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py [57:12 - 62:15] (5 lines, 68 tokens)
   tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py [66:6 - 71:23]

Clone found (python):
 - tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py [10:14 - 28:16] (18 lines, 165 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 27:14]

Clone found (python):
 - tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py [38:12 - 43:61] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [12:15 - 33:46] (21 lines, 183 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [13:18 - 32:65]

Clone found (python):
 - tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [34:36 - 40:5] (6 lines, 73 tokens)
   tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [34:12 - 40:10]

Clone found (python):
 - tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [39:18 - 44:51] (5 lines, 75 tokens)
   tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py [38:16 - 38:56]

Clone found (python):
 - tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [48:6 - 53:53] (5 lines, 72 tokens)
   tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py [47:6 - 52:27]

Clone found (python):
 - tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [64:6 - 69:55] (5 lines, 72 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [55:6 - 60:83]

Clone found (python):
 - tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [10:14 - 33:57] (23 lines, 207 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [10:14 - 32:65]

Clone found (python):
 - tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [34:25 - 44:51] (10 lines, 142 tokens)
   tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [34:12 - 38:56]

Clone found (python):
 - tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [46:16 - 53:53] (7 lines, 112 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [46:16 - 52:27]

Clone found (python):
 - tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [71:13 - 77:55] (6 lines, 88 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [64:13 - 60:83]

Clone found (python):
 - tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [79:16 - 89:52] (10 lines, 131 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [71:16 - 81:52]

Clone found (python):
 - tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [90:16 - 98:2] (8 lines, 108 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [82:16 - 90:2]

Clone found (python):
 - tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py [10:14 - 30:5] (20 lines, 187 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [12:19 - 31:13]

Clone found (python):
 - tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py [35:13 - 46:47] (11 lines, 150 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [33:9 - 38:56]

Clone found (python):
 - tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py [66:14 - 78:8] (12 lines, 165 tokens)
   tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py [53:4 - 65:7]

Clone found (python):
 - tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py [9:14 - 30:7] (21 lines, 203 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [10:14 - 30:9]

Clone found (python):
 - tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py [34:79 - 44:44] (10 lines, 142 tokens)
   tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [34:12 - 38:56]

Clone found (python):
 - tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py [10:14 - 31:11] (21 lines, 203 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [10:14 - 30:9]

Clone found (python):
 - tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py [35:13 - 46:51] (11 lines, 150 tokens)
   tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py [33:9 - 38:56]

Clone found (python):
 - tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py [47:9 - 53:28] (6 lines, 85 tokens)
   tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py [71:4 - 77:10]

Clone found (python):
 - tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py [13:11 - 25:9] (12 lines, 98 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [14:7 - 26:11]

Clone found (python):
 - tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py [34:2 - 39:4] (5 lines, 70 tokens)
   tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py [38:2 - 43:7]

Clone found (python):
 - tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [35:42 - 40:43] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [48:8 - 53:46] (5 lines, 72 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [46:2 - 51:91]

Clone found (python):
 - tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [68:8 - 73:42] (5 lines, 72 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [55:6 - 60:83]

Clone found (python):
 - tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [81:8 - 86:39] (5 lines, 72 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [64:8 - 69:93]

Clone found (python):
 - tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [119:3 - 124:8] (5 lines, 75 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [104:14 - 109:8]

Clone found (python):
 - tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [36:42 - 41:43] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [61:17 - 67:10] (6 lines, 93 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [65:17 - 69:9]

Clone found (python):
 - tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [71:42 - 81:10] (10 lines, 140 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [73:42 - 82:9]

Clone found (python):
 - tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [85:39 - 94:9] (9 lines, 99 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [86:39 - 94:12]

Clone found (python):
 - tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [100:64 - 112:9] (12 lines, 132 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [100:64 - 111:12]

Clone found (python):
 - tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [118:61 - 128:6] (10 lines, 129 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [117:61 - 126:8]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [19:9 - 27:40] (8 lines, 74 tokens)
   tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [18:9 - 26:42]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [27:40 - 32:41] (5 lines, 73 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [41:2 - 48:44] (7 lines, 93 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [46:5 - 51:91]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [64:13 - 69:40] (5 lines, 87 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [68:17 - 60:83]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [82:2 - 87:37] (5 lines, 67 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [64:2 - 69:93]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [91:95 - 102:8] (11 lines, 132 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [73:91 - 84:8]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [99:62 - 105:62] (6 lines, 90 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [94:47 - 100:64]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [112:8 - 117:59] (5 lines, 73 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [113:6 - 118:61]

Clone found (python):
 - tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [125:9 - 131:6] (6 lines, 85 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [126:13 - 132:5]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [24:9 - 32:37] (8 lines, 74 tokens)
   tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [18:9 - 26:42]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [32:37 - 37:38] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [38:14 - 46:41] (8 lines, 121 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [72:6 - 51:91]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [47:12 - 55:37] (8 lines, 115 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [52:13 - 60:83]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [56:12 - 64:34] (8 lines, 115 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [61:13 - 69:93]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [68:8 - 73:59] (5 lines, 72 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [95:8 - 100:64]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [79:74 - 85:56] (6 lines, 89 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [111:56 - 118:61]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [87:3 - 92:8] (5 lines, 86 tokens)
   tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [77:14 - 82:8]

Clone found (python):
 - tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [89:74 - 97:14] (8 lines, 97 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [124:25 - 132:3]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [19:9 - 27:39] (8 lines, 74 tokens)
   tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [18:9 - 26:42]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [27:39 - 32:40] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [33:14 - 43:58] (10 lines, 128 tokens)
   tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [78:8 - 54:69]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [50:12 - 61:36] (11 lines, 124 tokens)
   tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py [63:13 - 69:93]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [64:9 - 69:61] (5 lines, 86 tokens)
   tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [68:9 - 100:64]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [79:49 - 85:58] (6 lines, 89 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [111:56 - 118:61]

Clone found (python):
 - tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [89:9 - 95:2] (6 lines, 90 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [126:13 - 132:2]

Clone found (python):
 - tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py [19:9 - 27:38] (8 lines, 74 tokens)
   tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [18:9 - 26:42]

Clone found (python):
 - tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py [51:8 - 56:7] (5 lines, 68 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [75:2 - 80:14]

Clone found (python):
 - tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py [51:2 - 56:60] (5 lines, 67 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [95:2 - 100:64]

Clone found (python):
 - tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py [56:60 - 63:22] (7 lines, 77 tokens)
   tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [69:61 - 77:16]

Clone found (python):
 - tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py [63:22 - 69:57] (6 lines, 89 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [111:56 - 118:61]

Clone found (python):
 - tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py [31:40 - 36:41] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py [51:13 - 56:40] (5 lines, 72 tokens)
   tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py [55:4 - 60:48]

Clone found (python):
 - tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py [70:14 - 76:65] (6 lines, 75 tokens)
   tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py [57:5 - 63:72]

Clone found (python):
 - tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py [96:5 - 101:8] (5 lines, 81 tokens)
   tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py [86:14 - 91:8]

Clone found (python):
 - tier2/tc_2013_validate_unreachable_proxy_by_config.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [29:9 - 36:8] (7 lines, 91 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [34:9 - 41:9]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [44:13 - 50:15] (6 lines, 100 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [48:13 - 54:12]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [50:11 - 60:8] (10 lines, 149 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [36:8 - 46:8]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [57:125 - 64:15] (7 lines, 103 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [63:18 - 74:12]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [71:47 - 78:15] (7 lines, 100 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [81:62 - 87:12]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [83:8 - 88:8] (5 lines, 76 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [69:8 - 74:8]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [85:47 - 91:64] (6 lines, 89 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [94:47 - 100:64]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [102:21 - 108:61] (6 lines, 89 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [111:56 - 118:61]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [110:3 - 115:8] (5 lines, 75 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [95:14 - 100:8]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [115:8 - 120:8] (5 lines, 76 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [100:8 - 105:8]

Clone found (python):
 - tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [117:21 - 125:8] (8 lines, 99 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [124:25 - 132:6]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [9:14 - 26:23] (17 lines, 171 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [9:14 - 26:23]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [29:9 - 36:8] (7 lines, 91 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [35:9 - 42:9]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [38:9 - 44:46] (6 lines, 95 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [43:13 - 51:91]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [45:11 - 50:8] (5 lines, 83 tokens)
   tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [36:8 - 41:8]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [47:9 - 53:42] (6 lines, 95 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [57:13 - 60:83]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [53:42 - 61:47] (8 lines, 105 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [63:42 - 71:47]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [59:8 - 64:8] (5 lines, 76 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [92:8 - 97:8]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [61:47 - 67:39] (6 lines, 89 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [81:62 - 69:93]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [67:39 - 75:47] (8 lines, 102 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [77:39 - 85:47]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [70:2 - 82:12] (12 lines, 161 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [88:2 - 101:15]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [81:64 - 92:21] (11 lines, 135 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [91:64 - 102:21]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [87:2 - 93:8] (6 lines, 84 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [106:2 - 113:6]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [92:21 - 99:15] (7 lines, 100 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [111:56 - 119:12]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [98:61 - 107:21] (9 lines, 119 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [108:61 - 117:21]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [105:8 - 110:8] (5 lines, 76 tokens)
   tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [90:8 - 95:8]

Clone found (python):
 - tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [107:21 - 115:10] (8 lines, 99 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [124:25 - 132:6]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [9:14 - 26:21] (17 lines, 171 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [9:14 - 26:23]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [27:2 - 36:8] (9 lines, 95 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [24:12 - 33:9]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [38:87 - 45:15] (7 lines, 103 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [43:125 - 49:12]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [47:105 - 54:15] (7 lines, 103 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [63:18 - 70:12]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [58:87 - 69:15] (11 lines, 160 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [77:22 - 88:12]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [72:95 - 84:12] (12 lines, 162 tokens)
   tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [57:91 - 106:15]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [87:15 - 96:15] (9 lines, 129 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [109:12 - 118:12]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [97:3 - 102:8] (5 lines, 86 tokens)
   tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [87:14 - 114:8]

Clone found (python):
 - tier2/tc_2010_validate_server_option_in_etc_sysconfig.py [99:56 - 109:59] (10 lines, 121 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [124:25 - 117:59]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [11:7 - 26:18] (15 lines, 142 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [11:11 - 26:23]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [27:2 - 36:8] (9 lines, 96 tokens)
   tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [29:12 - 38:9]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [36:15 - 45:15] (9 lines, 129 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [43:13 - 47:12]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [45:15 - 54:15] (9 lines, 129 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [52:13 - 56:12]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [54:15 - 59:8] (5 lines, 80 tokens)
   tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [65:12 - 70:8]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [57:8 - 63:15] (6 lines, 83 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [82:8 - 65:12]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [63:14 - 72:12] (9 lines, 122 tokens)
   tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [54:3 - 74:15]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [75:15 - 84:15] (9 lines, 129 tokens)
   tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [77:12 - 86:12]

Clone found (python):
 - tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [85:3 - 97:97] (12 lines, 155 tokens)
   tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [75:14 - 99:116]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [9:14 - 26:20] (17 lines, 168 tokens)
   tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [9:14 - 26:23]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [27:2 - 36:8] (9 lines, 95 tokens)
   tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py [24:12 - 33:9]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [38:70 - 44:43] (6 lines, 89 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [45:81 - 51:91]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [47:108 - 53:39] (6 lines, 89 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [54:81 - 60:83]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [56:104 - 63:15] (7 lines, 100 tokens)
   tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [56:100 - 62:12]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [63:14 - 68:8] (5 lines, 83 tokens)
   tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [54:3 - 59:8]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [65:104 - 72:12] (7 lines, 93 tokens)
   tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py [67:100 - 70:7]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [77:78 - 84:15] (7 lines, 100 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [111:56 - 86:12]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [85:3 - 90:8] (5 lines, 86 tokens)
   tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [75:14 - 80:8]

Clone found (python):
 - tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py [87:78 - 97:59] (10 lines, 121 tokens)
   tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py [124:25 - 117:59]

Clone found (python):
 - tier2/tc_2007_validate_parameters_consistency_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2006_validate_config_function_by_cli.py [1:1 - 11:3] (10 lines, 91 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 12:11]

Clone found (python):
 - tier2/tc_2006_validate_config_function_by_cli.py [45:9 - 50:59] (5 lines, 64 tokens)
   tier2/tc_2038_validate_global_configs_by_virtwho_conf.py [48:9 - 53:37]

Clone found (python):
 - tier2/tc_2005_validate_password_option_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2005_validate_password_option_by_cli.py [33:42 - 38:43] (5 lines, 75 tokens)
   tier2/tc_2007_validate_parameters_consistency_by_cli.py [29:58 - 34:61]

Clone found (python):
 - tier2/tc_2005_validate_password_option_by_cli.py [45:34 - 55:4] (10 lines, 141 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [44:76 - 54:5]

Clone found (python):
 - tier2/tc_2005_validate_password_option_by_cli.py [78:28 - 84:11] (6 lines, 95 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [67:70 - 73:12]

Clone found (python):
 - tier2/tc_2005_validate_password_option_by_cli.py [95:28 - 101:11] (6 lines, 95 tokens)
   tier2/tc_2012_validate_password_option_in_etc_sysconfig.py [81:70 - 87:12]

Clone found (python):
 - tier2/tc_2005_validate_password_option_by_cli.py [97:8 - 102:8] (5 lines, 76 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [80:8 - 85:8]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [10:14 - 33:42] (23 lines, 160 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [10:14 - 33:42]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [33:42 - 38:43] (5 lines, 75 tokens)
   tier2/tc_2007_validate_parameters_consistency_by_cli.py [29:58 - 34:61]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [43:9 - 49:4] (6 lines, 90 tokens)
   tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py [48:13 - 45:5]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [59:13 - 64:42] (5 lines, 86 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [66:13 - 71:42]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [67:19 - 75:47] (8 lines, 100 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [74:19 - 82:47]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [71:28 - 77:11] (6 lines, 95 tokens)
   tier2/tc_2011_validate_username_option_in_etc_sysconfig.py [57:70 - 63:12]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [75:47 - 81:39] (6 lines, 89 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [82:47 - 88:39]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [83:20 - 92:47] (9 lines, 104 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [90:20 - 99:47]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [88:28 - 94:11] (6 lines, 95 tokens)
   tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py [90:70 - 96:12]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [90:8 - 95:8] (5 lines, 76 tokens)
   tier2/tc_2004_validate_username_option_by_cli.py [73:8 - 78:8]

Clone found (python):
 - tier2/tc_2004_validate_username_option_by_cli.py [92:47 - 99:2] (7 lines, 93 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [99:47 - 106:2]

Clone found (python):
 - tier2/tc_2003_validate_server_option_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2003_validate_server_option_by_cli.py [10:14 - 24:29] (14 lines, 130 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [10:14 - 24:19]

Clone found (python):
 - tier2/tc_2003_validate_server_option_by_cli.py [30:40 - 35:41] (5 lines, 75 tokens)
   tier2/tc_2007_validate_parameters_consistency_by_cli.py [29:58 - 34:61]

Clone found (python):
 - tier2/tc_2003_validate_server_option_by_cli.py [38:21 - 46:4] (8 lines, 116 tokens)
   tier2/tc_2004_validate_username_option_by_cli.py [41:23 - 49:5]

Clone found (python):
 - tier2/tc_2003_validate_server_option_by_cli.py [72:62 - 78:37] (6 lines, 89 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [82:47 - 88:39]

Clone found (python):
 - tier2/tc_2003_validate_server_option_by_cli.py [85:52 - 92:8] (7 lines, 114 tokens)
   tier2/tc_2003_validate_server_option_by_cli.py [68:48 - 75:8]

Clone found (python):
 - tier2/tc_2003_validate_server_option_by_cli.py [89:62 - 96:2] (7 lines, 93 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [99:47 - 106:2]

Clone found (python):
 - tier2/tc_2002_validate_env_option_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2002_validate_env_option_by_cli.py [28:37 - 33:38] (5 lines, 75 tokens)
   tier2/tc_2007_validate_parameters_consistency_by_cli.py [29:58 - 34:61]

Clone found (python):
 - tier2/tc_2002_validate_env_option_by_cli.py [39:49 - 46:4] (7 lines, 93 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [45:81 - 47:5]

Clone found (python):
 - tier2/tc_2002_validate_env_option_by_cli.py [52:15 - 59:4] (7 lines, 93 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [54:81 - 56:5]

Clone found (python):
 - tier2/tc_2002_validate_env_option_by_cli.py [64:28 - 70:34] (6 lines, 89 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [82:47 - 88:39]

Clone found (python):
 - tier2/tc_2002_validate_env_option_by_cli.py [75:53 - 82:6] (7 lines, 88 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [99:47 - 106:5]

Clone found (python):
 - tier2/tc_2002_validate_env_option_by_cli.py [77:11 - 85:55] (8 lines, 84 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [76:12 - 84:116]

Clone found (python):
 - tier2/tc_2001_validate_owner_option_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier2/tc_2001_validate_owner_option_by_cli.py [29:39 - 34:40] (5 lines, 76 tokens)
   tier2/tc_2007_validate_parameters_consistency_by_cli.py [29:58 - 34:61]

Clone found (python):
 - tier2/tc_2001_validate_owner_option_by_cli.py [65:9 - 70:36] (5 lines, 86 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [83:13 - 88:39]

Clone found (python):
 - tier2/tc_2001_validate_owner_option_by_cli.py [75:9 - 82:3] (7 lines, 94 tokens)
   tier2/tc_2005_validate_password_option_by_cli.py [100:13 - 83:14]

Clone found (python):
 - tier1/tc_1113_check_virtwho_status.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1112_check_http_proxy_option_by_etc_conf.py [1:1 - 10:5] (9 lines, 79 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 11:11]

Clone found (python):
 - tier1/tc_1112_check_http_proxy_option_by_etc_conf.py [26:23 - 31:4] (5 lines, 71 tokens)
   tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py [33:11 - 37:3]

Clone found (python):
 - tier1/tc_1111_template_conf_validation.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [17:9 - 24:5] (7 lines, 75 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [19:9 - 26:11]

Clone found (python):
 - tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [29:12 - 34:56] (5 lines, 73 tokens)
   tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py [35:2 - 38:56]

Clone found (python):
 - tier1/tc_1108_check_hypervisor_facts.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1108_check_hypervisor_facts.py [15:9 - 27:14] (12 lines, 111 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [14:9 - 24:23]

Clone found (python):
 - tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py [9:14 - 21:16] (12 lines, 100 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [13:16 - 24:17]

Clone found (python):
 - tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py [23:40 - 28:62] (5 lines, 72 tokens)
   tier2/tc_2060_check_commented_out_line_with_tab_space.py [29:54 - 34:57]

Clone found (python):
 - tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [18:9 - 26:16] (8 lines, 82 tokens)
   tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py [17:9 - 25:10]

Clone found (python):
 - tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py [56:18 - 61:8] (5 lines, 90 tokens)
   tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py [33:17 - 38:8]

Clone found (python):
 - tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [10:15 - 23:13] (13 lines, 107 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 27:16]

Clone found (python):
 - tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [47:2 - 52:8] (5 lines, 83 tokens)
   tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [34:17 - 39:8]

Clone found (python):
 - tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [51:43 - 56:58] (5 lines, 64 tokens)
   tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [74:10 - 79:53]

Clone found (python):
 - tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py [9:14 - 26:48] (17 lines, 133 tokens)
   tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [9:14 - 26:48]

Clone found (python):
 - tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py [27:4 - 68:5] (41 lines, 621 tokens)
   tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [27:4 - 69:7]

Clone found (python):
 - tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [17:13 - 30:14] (13 lines, 107 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 27:16]

Clone found (python):
 - tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [40:67 - 45:58] (5 lines, 69 tokens)
   tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py [33:12 - 38:57]

Clone found (python):
 - tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [14:16 - 28:10] (14 lines, 117 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 25:13]

Clone found (python):
 - tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [38:43 - 61:8] (23 lines, 319 tokens)
   tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py [33:12 - 63:8]

Clone found (python):
 - tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [65:13 - 71:8] (6 lines, 105 tokens)
   tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [72:13 - 78:3]

Clone found (python):
 - tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [82:5 - 88:8] (6 lines, 72 tokens)
   tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [95:43 - 100:7]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [9:14 - 29:47] (20 lines, 170 tokens)
   tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [10:14 - 26:48]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [30:4 - 40:10] (10 lines, 113 tokens)
   tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [37:4 - 47:5]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [45:20 - 51:57] (6 lines, 84 tokens)
   tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [50:20 - 79:53]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [46:5 - 53:10] (7 lines, 75 tokens)
   tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [51:43 - 58:4]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [55:17 - 60:5] (5 lines, 74 tokens)
   tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [59:2 - 65:7]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [63:9 - 68:5] (5 lines, 82 tokens)
   tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [69:13 - 74:4]

Clone found (python):
 - tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [66:2 - 71:8] (5 lines, 83 tokens)
   tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [42:17 - 47:8]

Clone found (python):
 - tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py [9:14 - 22:10] (13 lines, 104 tokens)
   tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [9:14 - 25:10]

Clone found (python):
 - tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py [28:67 - 33:52] (5 lines, 69 tokens)
   tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py [27:53 - 32:54]

Clone found (python):
 - tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [10:14 - 25:19] (15 lines, 129 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 25:13]

Clone found (python):
 - tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [26:8 - 35:5] (9 lines, 85 tokens)
   tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py [25:11 - 34:10]

Clone found (python):
 - tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py [9:14 - 28:13] (19 lines, 158 tokens)
   tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 28:13]

Clone found (python):
 - tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py [29:9 - 50:78] (21 lines, 288 tokens)
   tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py [28:9 - 50:77]

Clone found (python):
 - tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py [51:16 - 57:2] (6 lines, 75 tokens)
   tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [51:19 - 57:2]

Clone found (python):
 - tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py [9:14 - 25:14] (16 lines, 137 tokens)
   tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 25:13]

Clone found (python):
 - tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py [26:9 - 38:8] (12 lines, 135 tokens)
   tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [25:9 - 37:17]

Clone found (python):
 - tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py [9:14 - 51:7] (42 lines, 428 tokens)
   tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 51:4]

Clone found (python):
 - tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py [53:8 - 60:7] (7 lines, 94 tokens)
   tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py [54:2 - 60:7]

Clone found (python):
 - tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py [9:14 - 40:57] (31 lines, 301 tokens)
   tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 41:45]

Clone found (python):
 - tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py [9:14 - 25:17] (16 lines, 139 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 26:19]

Clone found (python):
 - tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py [26:12 - 35:17] (9 lines, 100 tokens)
   tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py [25:11 - 34:13]

Clone found (python):
 - tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py [55:2 - 74:14] (19 lines, 229 tokens)
   tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py [58:5 - 77:7]

Clone found (python):
 - tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py [9:14 - 24:17] (15 lines, 129 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 25:13]

Clone found (python):
 - tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py [29:4 - 37:52] (8 lines, 95 tokens)
   tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py [37:4 - 38:57]

Clone found (python):
 - tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py [49:20 - 55:57] (6 lines, 84 tokens)
   tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py [63:20 - 69:58]

Clone found (python):
 - tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py [9:14 - 25:17] (16 lines, 144 tokens)
   tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [11:15 - 27:16]

Clone found (python):
 - tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py [30:9 - 38:69] (8 lines, 103 tokens)
   tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py [29:10 - 38:57]

Clone found (python):
 - tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py [44:17 - 51:68] (7 lines, 104 tokens)
   tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py [44:13 - 79:53]

Clone found (python):
 - tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 28:67] (19 lines, 157 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 28:48]

Clone found (python):
 - tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py [24:9 - 46:77] (22 lines, 264 tokens)
   tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py [25:9 - 47:38]

Clone found (python):
 - tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py [9:14 - 46:78] (37 lines, 393 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 47:38]

Clone found (python):
 - tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py [47:16 - 53:2] (6 lines, 75 tokens)
   tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py [47:19 - 53:2]

Clone found (python):
 - tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py [9:14 - 36:8] (27 lines, 263 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 36:17]

Clone found (python):
 - tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py [9:14 - 38:7] (29 lines, 278 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 39:4]

Clone found (python):
 - tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py [9:14 - 38:57] (29 lines, 283 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 38:51]

Clone found (python):
 - tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [10:16 - 25:14] (15 lines, 129 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 25:13]

Clone found (python):
 - tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [25:10 - 34:14] (9 lines, 100 tokens)
   tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py [25:11 - 34:13]

Clone found (python):
 - tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [43:14 - 49:14] (6 lines, 77 tokens)
   tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py [43:16 - 49:16]

Clone found (python):
 - tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py [9:14 - 46:78] (37 lines, 391 tokens)
   tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 46:77]

Clone found (python):
 - tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py [43:14 - 49:14] (6 lines, 77 tokens)
   tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py [43:16 - 49:16]

Clone found (python):
 - tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py [47:16 - 53:2] (6 lines, 75 tokens)
   tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [47:19 - 53:2]

Clone found (python):
 - tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py [9:14 - 26:14] (17 lines, 147 tokens)
   tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 26:19]

Clone found (python):
 - tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py [26:9 - 36:8] (10 lines, 114 tokens)
   tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [25:9 - 35:17]

Clone found (python):
 - tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py [42:14 - 55:2] (13 lines, 126 tokens)
   tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py [42:16 - 55:2]

Clone found (python):
 - tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py [9:14 - 39:7] (30 lines, 286 tokens)
   tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 39:4]

Clone found (python):
 - tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py [47:39 - 54:8] (7 lines, 92 tokens)
   tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py [60:39 - 67:8]

Clone found (python):
 - tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py [9:14 - 38:57] (29 lines, 280 tokens)
   tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py [9:14 - 39:51]

Clone found (python):
 - tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py [9:14 - 23:15] (14 lines, 117 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 31:13]

Clone found (python):
 - tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py [9:14 - 23:11] (14 lines, 118 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 24:16]

Clone found (python):
 - tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py [27:33 - 36:7] (9 lines, 112 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:14]

Clone found (python):
 - tier1/tc_1076_check_guest_facts_by_subscription_manager.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1076_check_guest_facts_by_subscription_manager.py [9:14 - 21:11] (12 lines, 96 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 25:10]

Clone found (python):
 - tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py [9:14 - 22:13] (13 lines, 97 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 25:10]

Clone found (python):
 - tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py [18:14 - 32:13] (14 lines, 108 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 26:10]

Clone found (python):
 - tier1/tc_1073_check_mapping_info_point_to_specified_owner.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1073_check_mapping_info_point_to_specified_owner.py [12:2 - 26:16] (14 lines, 123 tokens)
   tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [13:2 - 22:10]

Clone found (python):
 - tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py [9:14 - 24:13] (15 lines, 118 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 31:13]

Clone found (python):
 - tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py [54:13 - 59:14] (5 lines, 83 tokens)
   tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py [50:13 - 55:3]

Clone found (python):
 - tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py [9:14 - 55:14] (46 lines, 494 tokens)
   tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py [9:14 - 55:7]

Clone found (python):
 - tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py [18:2 - 40:14] (22 lines, 228 tokens)
   tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py [20:2 - 42:7]

Clone found (python):
 - tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py [9:14 - 20:17] (11 lines, 89 tokens)
   tier1/tc_1073_check_mapping_info_point_to_specified_owner.py [10:14 - 21:23]

Clone found (python):
 - tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py [16:9 - 27:12] (11 lines, 115 tokens)
   tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py [16:9 - 27:10]

Clone found (python):
 - tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py [32:9 - 39:68] (7 lines, 98 tokens)
   tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py [28:9 - 35:70]

Clone found (python):
 - tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [10:9 - 26:13] (16 lines, 136 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [13:9 - 29:13]

Clone found (python):
 - tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [33:2 - 39:74] (6 lines, 89 tokens)
   tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py [36:2 - 42:89]

Clone found (python):
 - tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [41:15 - 46:8] (5 lines, 91 tokens)
   tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [31:6 - 36:8]

Clone found (python):
 - tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py [9:14 - 26:66] (17 lines, 136 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 30:55]

Clone found (python):
 - tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py [29:15 - 36:14] (7 lines, 108 tokens)
   tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [32:13 - 42:7]

Clone found (python):
 - tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py [9:14 - 23:13] (14 lines, 108 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 22:10]

Clone found (python):
 - tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py [25:13 - 33:2] (8 lines, 116 tokens)
   tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [32:13 - 37:2]

Clone found (python):
 - tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py [11:16 - 22:16] (11 lines, 86 tokens)
   tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py [13:7 - 24:27]

Clone found (python):
 - tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py [29:12 - 37:2] (8 lines, 116 tokens)
   tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py [32:13 - 37:2]

Clone found (python):
 - tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py [9:14 - 22:8] (13 lines, 107 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 22:10]

Clone found (python):
 - tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py [9:14 - 26:68] (17 lines, 129 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 26:64]

Clone found (python):
 - tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py [28:8 - 45:2] (17 lines, 265 tokens)
   tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py [30:9 - 47:2]

Clone found (python):
 - tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py [9:14 - 24:73] (15 lines, 115 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 24:59]

Clone found (python):
 - tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py [9:14 - 23:45] (14 lines, 104 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 23:57]

Clone found (python):
 - tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py [9:14 - 21:20] (12 lines, 96 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 25:10]

Clone found (python):
 - tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py [29:17 - 34:3] (5 lines, 89 tokens)
   tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py [42:13 - 47:5]

Clone found (python):
 - tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py [9:14 - 23:64] (14 lines, 104 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [14:19 - 23:57]

Clone found (python):
 - tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py [25:5 - 30:64] (5 lines, 80 tokens)
   tier2/tc_2034_validate_global_interval_by_virtwho_conf.py [27:3 - 32:75]

Clone found (python):
 - tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py [31:13 - 36:7] (5 lines, 88 tokens)
   tier2/tc_2034_validate_global_interval_by_virtwho_conf.py [35:26 - 40:14]

Clone found (python):
 - tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py [23:2 - 30:14] (7 lines, 110 tokens)
   tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py [23:2 - 30:7]

Clone found (python):
 - tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [11:2 - 24:12] (13 lines, 108 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [12:6 - 35:10]

Clone found (python):
 - tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [19:21 - 34:13] (15 lines, 157 tokens)
   tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py [22:13 - 37:13]

Clone found (python):
 - tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py [9:14 - 36:70] (27 lines, 286 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 36:71]

Clone found (python):
 - tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py [9:14 - 36:46] (27 lines, 286 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 36:71]

Clone found (python):
 - tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py [49:2 - 56:3] (7 lines, 86 tokens)
   tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py [49:2 - 56:5]

Clone found (python):
 - tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py [69:19 - 77:2] (8 lines, 79 tokens)
   tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py [54:13 - 62:2]

Clone found (python):
 - tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [1:1 - 11:6] (10 lines, 93 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 11:16]

Clone found (python):
 - tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [11:16 - 26:13] (15 lines, 120 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [12:6 - 25:10]

Clone found (python):
 - tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py [9:14 - 25:13] (16 lines, 136 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 35:10]

Clone found (python):
 - tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py [26:64 - 31:85] (5 lines, 69 tokens)
   tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [27:60 - 32:50]

Clone found (python):
 - tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py [33:2 - 39:5] (6 lines, 105 tokens)
   tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py [35:2 - 42:7]

Clone found (python):
 - tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py [55:2 - 61:16] (6 lines, 109 tokens)
   tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py [51:2 - 57:15]

Clone found (python):
 - tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py [9:14 - 27:69] (18 lines, 151 tokens)
   tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [9:14 - 27:60]

Clone found (python):
 - tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py [28:2 - 34:10] (6 lines, 105 tokens)
   tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py [27:2 - 34:7]

Clone found (python):
 - tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py [39:10 - 46:52] (7 lines, 114 tokens)
   tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [33:7 - 42:55]

Clone found (python):
 - tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py [47:3 - 54:14] (7 lines, 110 tokens)
   tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py [55:10 - 57:5]

Clone found (python):
 - tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py [9:14 - 27:70] (18 lines, 151 tokens)
   tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [9:14 - 27:60]

Clone found (python):
 - tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py [28:3 - 37:7] (9 lines, 154 tokens)
   tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py [28:4 - 36:5]

Clone found (python):
 - tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 24:9] (15 lines, 135 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 35:10]

Clone found (python):
 - tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py [27:47 - 32:56] (5 lines, 69 tokens)
   tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [27:60 - 32:50]

Clone found (python):
 - tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py [32:56 - 37:12] (5 lines, 88 tokens)
   tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py [32:12 - 39:4]

Clone found (python):
 - tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py [9:14 - 27:46] (18 lines, 155 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 27:47]

Clone found (python):
 - tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py [27:46 - 32:55] (5 lines, 69 tokens)
   tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [27:60 - 32:50]

Clone found (python):
 - tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py [11:18 - 24:3] (13 lines, 110 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [13:16 - 25:18]

Clone found (python):
 - tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py [57:66 - 70:70] (13 lines, 181 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [60:66 - 73:70]

Clone found (python):
 - tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py [70:70 - 86:65] (16 lines, 213 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [73:70 - 89:7]

Clone found (python):
 - tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py [88:74 - 94:5] (6 lines, 79 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [89:74 - 95:7]

Clone found (python):
 - tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py [94:3 - 108:17] (14 lines, 147 tokens)
   tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py [93:3 - 108:11]

Clone found (python):
 - tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py [9:14 - 25:16] (16 lines, 145 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 29:10]

Clone found (python):
 - tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py [31:9 - 41:52] (10 lines, 147 tokens)
   tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py [34:13 - 38:56]

Clone found (python):
 - tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py [9:14 - 31:73] (22 lines, 193 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 31:79]

Clone found (python):
 - tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py [31:73 - 41:83] (10 lines, 142 tokens)
   tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [34:12 - 38:56]

Clone found (python):
 - tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py [44:16 - 49:14] (5 lines, 71 tokens)
   tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py [42:16 - 46:5]

Clone found (python):
 - tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py [9:14 - 31:65] (22 lines, 193 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [9:14 - 31:79]

Clone found (python):
 - tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py [31:65 - 36:73] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py [36:73 - 44:8] (8 lines, 124 tokens)
   tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py [34:12 - 42:8]

Clone found (python):
 - tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py [41:18 - 46:7] (5 lines, 71 tokens)
   tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py [42:16 - 46:5]

Clone found (python):
 - tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py [48:3 - 53:70] (5 lines, 75 tokens)
   tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py [49:12 - 45:62]

Clone found (python):
 - tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py [55:16 - 60:14] (5 lines, 71 tokens)
   tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py [56:14 - 60:5]

Clone found (python):
 - tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py [12:11 - 25:13] (13 lines, 100 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [11:7 - 26:11]

Clone found (python):
 - tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py [26:52 - 31:49] (5 lines, 72 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 38:56]

Clone found (python):
 - tier1/tc_1040_check_virt_who_password_function.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py [28:9 - 37:14] (9 lines, 130 tokens)
   tier1/tc_1112_check_http_proxy_option_by_etc_conf.py [31:9 - 40:17]

Clone found (python):
 - tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py [37:14 - 54:47] (17 lines, 293 tokens)
   tier1/tc_1112_check_http_proxy_option_by_etc_conf.py [41:23 - 58:50]

Clone found (python):
 - tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1037_check_sam_satellite_options_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py [11:16 - 22:10] (11 lines, 87 tokens)
   tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py [11:7 - 23:5]

Clone found (python):
 - tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py [32:3 - 44:2] (12 lines, 114 tokens)
   tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py [32:4 - 44:2]

Clone found (python):
 - tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py [9:14 - 17:14] (8 lines, 81 tokens)
   tier2/tc_2009_validate_env_option_in_etc_sysconfig.py [9:14 - 17:14]

Clone found (python):
 - tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py [29:12 - 34:49] (5 lines, 75 tokens)
   tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py [38:16 - 38:56]

Clone found (python):
 - tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py [11:2 - 25:74] (14 lines, 108 tokens)
   tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py [11:2 - 26:52]

Clone found (python):
 - tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py [9:14 - 22:62] (13 lines, 97 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [13:16 - 26:52]

Clone found (python):
 - tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py [37:78 - 43:2] (6 lines, 76 tokens)
   tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py [54:16 - 60:2]

Clone found (python):
 - tier1/tc_1028_check_guest_attr_by_curl.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1028_check_guest_attr_by_curl.py [22:61 - 28:43] (6 lines, 83 tokens)
   tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py [28:2 - 38:56]

Clone found (python):
 - tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1025_start_virtwho_service_by_ssh.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py [33:9 - 38:8] (5 lines, 80 tokens)
   tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py [20:12 - 25:8]

Clone found (python):
 - tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1021_check_reporter_id_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1020_check_log_file_function_by_cli.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1020_check_log_file_function_by_cli.py [38:9 - 47:2] (9 lines, 80 tokens)
   tier1/tc_1021_check_reporter_id_function_by_cli.py [35:12 - 44:2]

Clone found (python):
 - tier1/tc_1019_check_log_dir_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1019_check_log_dir_function_by_cli.py [27:44 - 48:2] (21 lines, 307 tokens)
   tier1/tc_1021_check_reporter_id_function_by_cli.py [25:48 - 44:2]

Clone found (python):
 - tier1/tc_1018_check_log_per_config_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1018_check_log_per_config_function_by_cli.py [51:13 - 59:5] (8 lines, 128 tokens)
   tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py [63:9 - 71:8]

Clone found (python):
 - tier1/tc_1018_check_log_per_config_function_by_cli.py [59:5 - 65:5] (6 lines, 92 tokens)
   tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py [71:8 - 77:8]

Clone found (python):
 - tier1/tc_1018_check_log_per_config_function_by_cli.py [65:5 - 71:5] (6 lines, 92 tokens)
   tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py [77:8 - 83:8]

Clone found (python):
 - tier1/tc_1018_check_log_per_config_function_by_cli.py [70:43 - 78:2] (8 lines, 78 tokens)
   tier1/tc_1021_check_reporter_id_function_by_cli.py [35:2 - 44:2]

Clone found (python):
 - tier1/tc_1017_check_config_function_by_cli.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1016_check_print_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1015_check_interval_function_by_etc_sysconfig.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1015_check_interval_function_by_etc_sysconfig.py [27:13 - 33:50] (6 lines, 79 tokens)
   tier2/tc_2034_validate_global_interval_by_virtwho_conf.py [27:13 - 32:75]

Clone found (python):
 - tier1/tc_1015_check_interval_function_by_etc_sysconfig.py [42:13 - 47:8] (5 lines, 77 tokens)
   tier2/tc_2034_validate_global_interval_by_virtwho_conf.py [35:26 - 38:8]

Clone found (python):
 - tier1/tc_1015_check_interval_function_by_etc_sysconfig.py [50:13 - 55:8] (5 lines, 77 tokens)
   tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py [37:13 - 40:8]

Clone found (python):
 - tier1/tc_1014_check_interval_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1014_check_interval_function_by_cli.py [48:2 - 53:44] (5 lines, 76 tokens)
   tier1/tc_1015_check_interval_function_by_etc_sysconfig.py [43:2 - 49:51]

Clone found (python):
 - tier1/tc_1014_check_interval_function_by_cli.py [54:2 - 61:6] (7 lines, 76 tokens)
   tier1/tc_1015_check_interval_function_by_etc_sysconfig.py [51:2 - 58:5]

Clone found (python):
 - tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py [25:13 - 30:51] (5 lines, 77 tokens)
   tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py [25:13 - 30:46]

Clone found (python):
 - tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py [31:13 - 36:58] (5 lines, 77 tokens)
   tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py [31:13 - 36:49]

Clone found (python):
 - tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py [37:13 - 43:2] (6 lines, 81 tokens)
   tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py [37:13 - 43:2]

Clone found (python):
 - tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py [10:14 - 23:48] (13 lines, 103 tokens)
   tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py [10:14 - 23:51]

Clone found (python):
 - tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py [25:13 - 32:48] (7 lines, 113 tokens)
   tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py [23:13 - 30:44]

Clone found (python):
 - tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py [33:4 - 40:55] (7 lines, 118 tokens)
   tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py [25:4 - 38:52]

Clone found (python):
 - tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py [41:16 - 49:2] (8 lines, 122 tokens)
   tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py [25:4 - 47:2]

Clone found (python):
 - tier1/tc_1010_check_virtwho_debug_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1010_check_virtwho_debug_function_by_cli.py [29:2 - 34:50] (5 lines, 66 tokens)
   tier2/tc_2006_validate_config_function_by_cli.py [39:3 - 44:52]

Clone found (python):
 - tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py [27:32 - 32:56] (5 lines, 75 tokens)
   tier1/tc_1017_check_config_function_by_cli.py [23:12 - 35:56]

Clone found (python):
 - tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py [28:2 - 37:2] (9 lines, 103 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [30:2 - 39:2]

Clone found (python):
 - tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py [9:14 - 21:11] (12 lines, 100 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [13:16 - 35:10]

Clone found (python):
 - tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py [19:12 - 34:2] (15 lines, 162 tokens)
   tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py [24:23 - 39:2]

Clone found (python):
 - tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py [24:52 - 34:2] (10 lines, 120 tokens)
   tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py [33:5 - 39:2]

Clone found (python):
 - tier1/tc_1006_run_virtwho_with_default_config.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1005_check_virtwho_service_function.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1003_check_virtwho_package_info.py [1:1 - 10:14] (9 lines, 76 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py [1:1 - 9:14] (8 lines, 75 tokens)
   tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py [1:1 - 9:14]

Clone found (python):
 - smoke/test_virtwho_smoke.py [60:12 - 65:3] (5 lines, 72 tokens)
   tier1/tc_1112_check_http_proxy_option_by_etc_conf.py [29:5 - 35:10]

Clone found (python):
 - smoke/test_virtwho_smoke.py [197:2 - 202:61] (5 lines, 68 tokens)
   smoke/test_virtwho_smoke.py [189:2 - 194:61]

Clone found (python):
 - sca/test_virtwho_sca.py [58:5 - 66:39] (8 lines, 114 tokens)
   smoke/test_virtwho_smoke.py [34:2 - 42:21]

Clone found (python):
 - gating/test_virtwho_gating.py [16:13 - 35:19] (19 lines, 202 tokens)
   smoke/test_virtwho_smoke.py [17:20 - 36:34]

Clone found (python):
 - gating/test_virtwho_gating.py [101:2 - 109:3] (8 lines, 146 tokens)
   smoke/test_virtwho_smoke.py [120:2 - 128:7]

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ Format ‚îÇ Files analyzed ‚îÇ Total lines ‚îÇ Total tokens ‚îÇ Clones found ‚îÇ Duplicated lines ‚îÇ Duplicated tokens ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ python ‚îÇ 182            ‚îÇ 11581       ‚îÇ 130511       ‚îÇ 560          ‚îÇ 5350 (46.2%)     ‚îÇ 58147 (44.55%)    ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ Total: ‚îÇ 182            ‚îÇ 11581       ‚îÇ 130511       ‚îÇ 560          ‚îÇ 5350 (46.2%)     ‚îÇ 58147 (44.55%)    ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
Found 560 clones.
HTML report saved to /tmp/lint/megalinter-reports/copy-paste/html/
ERROR: jscpd found too many duplicates (46.2%) over threshold (0%)
Error: ERROR: jscpd found too many duplicates (46.2%) over threshold (0%)
    at ThresholdReporter.report (/node-deps/node_modules/@jscpd/finder/dist/reporters/threshold.js:12:19)
    at /node-deps/node_modules/@jscpd/finder/dist/in-files-detector.js:82:26
    at Array.forEach (<anonymous>)
    at /node-deps/node_modules/@jscpd/finder/dist/in-files-detector.js:81:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)


[31m‚ùå Linted [PYTHON] files with [pylint]: Found 1815 error(s) - (13.08s)[0m
- Using [pylint v2.16.3] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/python_pylint
- MegaLinter key: [PYTHON_PYLINT]
- Rules config: [.pylintrc]
- Number of files analyzed: [189]
--Error detail:
pylint: Command line or configuration file:1: UserWarning: Specifying exception names in the overgeneral-exceptions option without module name is deprecated and support for it will be removed in pylint 3.0. Use fully qualified name (maybe 'builtins.Exception' ?) instead.
************* Module lint.gating.test_virtwho_gating
/tmp/lint/gating/test_virtwho_gating.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/gating/test_virtwho_gating.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/gating/test_virtwho_gating.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/gating/test_virtwho_gating.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
************* Module lint.sca.test_virtwho_sca
/tmp/lint/sca/test_virtwho_sca.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/sca/test_virtwho_sca.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/sca/test_virtwho_sca.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/sca/test_virtwho_sca.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/sca/test_virtwho_sca.py:45:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.smoke.test_virtwho_smoke
/tmp/lint/smoke/test_virtwho_smoke.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/smoke/test_virtwho_smoke.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/smoke/test_virtwho_smoke.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/smoke/test_virtwho_smoke.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/smoke/test_virtwho_smoke.py:58:40: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:58:61: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:62:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:96:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:101:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:119:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:132:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:141:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:154:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:157:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:166:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:174:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:177:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:184:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:186:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:194:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:202:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:210:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:221:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/smoke/test_virtwho_smoke.py:225:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1001_check_virtwho_is_shipped_by_different_arch
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:19:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:21:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:45:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:48:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1002_check_virtwho_can_be_installed_and_uninstalled
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:21:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:25:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:30:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:33:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1003_check_virtwho_package_info
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:16:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:20:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:16:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1005_check_virtwho_service_function
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:29:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:37:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1006_run_virtwho_with_default_config
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:24:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1009_check_virtwho_fetch_and_send_function_by_cli
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1010_check_virtwho_debug_function_by_cli
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1011_check_virtwho_debug_function_by_sysconfig
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1012_check_virtwho_oneshot_function_by_cli
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1013_check_virtwho_oneshot_function_by_sysconfig
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1014_check_interval_function_by_cli
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1015_check_interval_function_by_etc_sysconfig
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:49:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1016_check_print_function_by_cli
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:36:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1017_check_config_function_by_cli
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:22:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1018_check_log_per_config_function_by_cli
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:25:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:31:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:36:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:38:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:41:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:43:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:46:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:48:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:58:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:64:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:70:24: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1019_check_log_dir_function_by_cli
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:27:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:39:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1020_check_log_file_function_by_cli
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:26:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:38:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1021_check_reporter_id_function_by_cli
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:25:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:30:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:34:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:20:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:22:13: E0602: Undefined variable 'threading' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:24:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:26:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:29:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:36:12: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:42:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:44:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:47:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1023_run_virtwho_in_cli_when_it_is_running
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:19:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:24:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:31:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:34:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1024_check_virtwho_sysconfig_and_pid_files_permission
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:17:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:22:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:27:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1025_start_virtwho_service_by_ssh
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:30:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:33:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:43:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:24:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:44:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:47:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1028_check_guest_attr_by_curl
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:22:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:41:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:44:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:53:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:56:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1029_check_virtwho_status_after_restart_rhsmcertd_service
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:22:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:25:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:43:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1036_check_ignore_swp_file_in_etc_virtwho_d
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:35:16: E0602: Undefined variable 're' (undefined-variable)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:37:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1037_check_sam_satellite_options_by_cli
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:24:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1038_check_sam_satellite_options_by_etc_sysconfig
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:24:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1039_check_http_proxy_option_by_etc_sysconfig
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:22:40: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:22:61: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:29:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:36:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:46:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:54:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:61:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1040_check_virt_who_password_function
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
************* Module lint.tier1.tc_1041_check_encrypted_password_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:1:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:8:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:55:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1045_check_rhsm_proxy_function_in_rhsm_conf
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:29:23: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:30:21: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:37:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:48:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:57:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:63:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:70:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:78:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:87:16: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:88:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:94:16: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:95:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:102:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1046_check_filter_hosts_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1047_check_exclude_hosts_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1048_check_filter_host_parents_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:34:20: E0602: Undefined variable 're' (undefined-variable)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:45:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:34:20: E0602: Undefined variable 're' (undefined-variable)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1051_check_simplified_vim_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1052_check_hypervisor_id_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:36:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:51:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:54:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:66:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:69:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:36:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:50:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:53:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:36:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1055_check_global_section_header_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:20:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1056_check_global_interval_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:27:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:35:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:38:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1058_check_global_debug_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:21:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1059_check_global_oneshot_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:32:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:35:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:45:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:49:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:51:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:54:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:56:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:59:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:61:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:70:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:76:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:82:20: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1061_check_global_log_dir_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:34:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:41:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1062_check_global_log_file_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:36:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:43:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1063_check_global_configs_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1064_check_defaults_section_header_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1065_check_defaults_owner_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1066_check_defaults_env_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:39:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:39:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:51:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:54:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:55:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1072_check_rhsm_log_and_thread_after_reregister_host
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:25:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:28:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:39:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:40:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:52:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1073_check_mapping_info_point_to_specified_owner
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:35:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:39:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1074_check_mapping_info_for_hypervisor_facts
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1075_check_rhsm_connection_info_in_rhsm_log
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1076_check_guest_facts_by_subscription_manager
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:54:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:57:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1077_check_associated_info_by_rhsmlog_and_webui
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:43:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1079_check_unlimited_virtual_pool_created_in_guest
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:39:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:56:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:60:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:63:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1084_check_vdc_virtual_pool_created_in_guest
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:51:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:55:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:39:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:55:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:57:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:66:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1092_check_limited_virtual_pool_created_in_guest
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:45:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:48:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:51:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:60:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:77:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:45:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:48:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:52:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1097_check_instance_no_virtual_pool_created_in_guest
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:41:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:44:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:51:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:62:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:33:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:38:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:43:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:54:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:63:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:75:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:45:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:56:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:65:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:81:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:83:12: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:89:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:56:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:56:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1103_check_virtwho_threads_number_after_reconfig_libvirt
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:37:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:46:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:49:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:52:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:60:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:63:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1104_check_virtwho_config_exist_after_reboot_system
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:25:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:45:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:32:23: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:33:21: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:51:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:60:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:66:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:73:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:81:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:89:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:95:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:102:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1106_check_global_print_option_in_etc_virtwho_conf
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:58:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:66:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1107_temporary_sku_can_be_changed_to_stable_by_auto
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:45:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1108_check_hypervisor_facts
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:43:40: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:47:19: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:48:21: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:49:19: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:59:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:62:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:64:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:67:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:71:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:74:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:77:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:80:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:83:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:90:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:93:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:97:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:100:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:104:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1109_connect_to_hypervisor_by_read_only_account
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1110_send_virt-who_version_in_the_User-Agent_header
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:22:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1111_template_conf_validation
/tmp/lint/tier1/tc_1111_template_conf_validation.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1111_template_conf_validation.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1111_template_conf_validation.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1111_template_conf_validation.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1111_template_conf_validation.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1111_template_conf_validation.py:40:19: E0602: Undefined variable 're' (undefined-variable)
/tmp/lint/tier1/tc_1111_template_conf_validation.py:41:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1111_template_conf_validation.py:44:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1112_check_http_proxy_option_by_etc_conf
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:19:40: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:19:61: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:25:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:32:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:39:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:50:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:58:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier1.tc_1113_check_virtwho_status
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:49:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:60:26: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:75:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:89:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2001_validate_owner_option_by_cli
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:60:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:70:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2002_validate_env_option_by_cli
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:45:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:58:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:70:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2003_validate_server_option_by_cli
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:45:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:61:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:67:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:78:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:84:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2004_validate_username_option_by_cli
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:64:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:70:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:81:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:87:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2005_validate_password_option_by_cli
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:44:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:54:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:59:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:71:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:77:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:88:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:94:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2006_validate_config_function_by_cli
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:60:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:71:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:74:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:77:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2007_validate_parameters_consistency_by_cli
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:35:14: E0602: Undefined variable 're' (undefined-variable)
************* Module lint.tier2.tc_2008_validate_owner_option_in_etc_sysconfig
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:62:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:71:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:83:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2009_validate_env_option_in_etc_sysconfig
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:62:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:71:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:83:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2010_validate_server_option_in_etc_sysconfig
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:57:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:68:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:72:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:83:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:95:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2011_validate_username_option_in_etc_sysconfig
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:57:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:67:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:71:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:81:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:88:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:98:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:103:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2012_validate_password_option_in_etc_sysconfig
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:39:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:49:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:53:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:63:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:67:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:77:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:81:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:91:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:98:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:108:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:113:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2013_validate_unreachable_proxy_by_config
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:36:45: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:36:66: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:44:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:61:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:63:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:64:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:79:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2014_validate_header_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:45:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:49:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:56:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:62:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:75:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:82:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:94:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2015_validate_type_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:34:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:56:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:57:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:70:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2016_validate_owner_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:49:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:61:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:70:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:85:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2017_validate_env_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:55:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:64:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:73:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:85:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2018_validate_server_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:73:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:87:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:91:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:105:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:117:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2019_validate_username_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:49:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:71:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:75:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:85:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:89:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:100:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:107:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:118:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:123:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2020_validate_password_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:44:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:58:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:73:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:77:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:86:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:90:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:100:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:107:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:117:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:122:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2021_validate_encryped_password_option_by_virtwho_d
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:50:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:35:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:46:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:57:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:67:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2023_validate_rhsm_port_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:34:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:44:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:54:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:60:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:35:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:46:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:52:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:65:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2025_validate_rhsm_username_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:77:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:89:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2026_validate_rhsm_password_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:81:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:52:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:61:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:35:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:47:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:51:20: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:39:20: E0602: Undefined variable 're' (undefined-variable)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:45:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:57:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:61:20: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:59:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:67:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:75:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:83:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2031_validate_unsupported_options_in_etc_virtwho_d
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:25:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2032_validate_file_extension_name_in_etc_virtwho_d
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2033_validate_options_quoted_in_etc_virtwho_d
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2034_validate_global_interval_by_virtwho_conf
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:25:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2035_validate_global_report_id_by_virtwho_conf
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:51:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:55:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2036_validate_global_debug_by_virtwho_conf
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:21:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2037_validate_global_oneshot_by_virtwho_conf
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2038_validate_global_configs_by_virtwho_conf
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:39:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:49:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2039_validate_defaults_owner_option_by_virtwho_conf
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:61:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:74:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:92:4: E0602: Undefined variable 'unittest' (undefined-variable)
************* Module lint.tier2.tc_2040_validate_defaults_env_option_by_virtwho_conf
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:51:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:60:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:69:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2041_validate_default_hypervisor_id_by_virtwho_conf
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:43:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2042_check_virtwho_send_mapping_to_multi_org
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:34:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:56:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:45:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:62:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:79:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2044_subscribe_guest_with_activation_key
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:56:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:65:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:78:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:96:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:112:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:126:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2045_check_content_subscriptions_in_satellite_webui
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:36:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:64:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:67:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:70:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:73:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:76:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:79:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:81:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:87:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:90:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:91:16: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:93:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2046_check_registered_by_item_in_satellite_webui
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:49:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:50:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:62:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:65:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:70:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:73:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:48:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:56:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2048_register_system_with_activaiton_key
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:47:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:55:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:66:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2049_validate_hostname_without_domain
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:35:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:50:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:59:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:62:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2051_validate_virt_who_password_commandline
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:15:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2052_validate_hypervisors_connection
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:30:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:42:20: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:44:16: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:45:22: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:49:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:52:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:56:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:60:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:67:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:69:12: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:71:12: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:75:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:77:16: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2053_validate_guest_state_when_suspend_resume_stop_start
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:48:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:62:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:74:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:89:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:116:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:119:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2054_validate_trigger_event_with_different_interval
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:29:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:38:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2055_validate_rhevm_url_without_ovirt_engine
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2056_validate_non_root_to_run_virtwho
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:27:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:36:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:39:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:46:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2057_validate_subscription_register_clean_together
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:24:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:27:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:38:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:40:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:46:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:50:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:53:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:57:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:60:8: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:63:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2058_post_large_json_to_rhsm
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:30:12: E0602: Undefined variable 'json' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:33:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:41:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:44:22: E0602: Undefined variable 're' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:45:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:49:22: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:52:20: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:53:24: E0602: Undefined variable 'time' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:56:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:57:20: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:60:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:63:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:64:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:65:24: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:69:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:70:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2059_check_redundant_options_in_etc_virtwho_d
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:41:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2060_check_commented_out_line_with_tab_space
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:44:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2061_check_fake_mode_is_hypervisor_option
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:23:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2063_check_hypervisors_fqdn
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:37:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:43:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:48:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:51:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:55:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:56:31: E0602: Undefined variable 'random' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:62:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:65:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2065_deprecation_warning_for_etc_sysconfig
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:25:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:32:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2066_validate_cluster_name_with_special_char
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:38:23: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:39:53: E0602: Undefined variable 'random' (undefined-variable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:39:67: E0602: Undefined variable 'string' (undefined-variable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:43:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:46:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:53:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:67:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2067_validate_uniform_mapping_format
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:26:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:30:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2068_validate_options_migration_during_virt_who_upgrade
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:27:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:31:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:39:44: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:39:65: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:42:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:46:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:64:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:73:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier2.tc_2069_valide_insecure_option_for_kubevirt
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:10:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:31:26: E0602: Undefined variable 'deploy' (undefined-variable)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:38:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:41:16: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:50:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:52:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier3.tc_1027_check_two_modes_enabled_in_etc_sysconfig
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:13:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:29:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:34:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:35:16: E0602: Undefined variable 're' (undefined-variable)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:37:12: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:40:12: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier3.tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:13:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:40:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier3.tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:13:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier3.tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:13:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:31:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:38:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier3.tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:13:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:28:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
************* Module lint.tier3.tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:2:0: E0401: Unable to import 'virt_who' (import-error)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:3:0: E0401: Unable to import 'virt_who.base' (import-error)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:4:0: E0401: Unable to import 'virt_who.register' (import-error)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:5:0: E0401: Unable to import 'virt_who.testing' (import-error)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:9:26: E0602: Undefined variable 'os' (undefined-variable)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:13:18: E0602: Undefined variable 'FailException' (undefined-variable)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:35:8: E0602: Undefined variable 'logger' (undefined-variable)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:42:8: E0602: Undefined variable 'logger' (undefined-variable)


[32m‚úÖ Linted [REPOSITORY] files with [checkov] successfully - (14.04s)[0m
- Using [checkov v2.3.59] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_checkov
- MegaLinter key: [REPOSITORY_CHECKOV]
- Rules config: [.checkov.yml]

[31m‚ùå Linted [PYTHON] files with [flake8]: Found 2452 error(s) - (2.44s)[0m
- Using [flake8 v6.0.0] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/python_flake8
- MegaLinter key: [PYTHON_FLAKE8]
- Rules config: [.flake8]
- Number of files analyzed: [189]
--Error detail:
/tmp/lint/gating/test_virtwho_gating.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/gating/test_virtwho_gating.py:2:1: F401 'virt_who.*' imported but unused
/tmp/lint/gating/test_virtwho_gating.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/gating/test_virtwho_gating.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/gating/test_virtwho_gating.py:38:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:39:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:39:53: W605 invalid escape sequence '\['
/tmp/lint/gating/test_virtwho_gating.py:39:62: W605 invalid escape sequence '\]'
/tmp/lint/gating/test_virtwho_gating.py:42:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:43:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:43:53: W605 invalid escape sequence '\['
/tmp/lint/gating/test_virtwho_gating.py:43:62: W605 invalid escape sequence '\]'
/tmp/lint/gating/test_virtwho_gating.py:48:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:51:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:57:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:63:9: F841 local variable 'register_type' is assigned to but never used
/tmp/lint/gating/test_virtwho_gating.py:66:25: E231 missing whitespace after ':'
/tmp/lint/gating/test_virtwho_gating.py:66:41: E231 missing whitespace after ':'
/tmp/lint/gating/test_virtwho_gating.py:69:49: E231 missing whitespace after ','
/tmp/lint/gating/test_virtwho_gating.py:69:65: E231 missing whitespace after ':'
/tmp/lint/gating/test_virtwho_gating.py:72:19: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:79:19: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:89:89: E501 line too long (90 > 88 characters)
/tmp/lint/gating/test_virtwho_gating.py:90:89: E501 line too long (90 > 88 characters)
/tmp/lint/gating/test_virtwho_gating.py:92:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:101:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:107:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:110:19: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:110:89: E501 line too long (89 > 88 characters)
/tmp/lint/gating/test_virtwho_gating.py:112:19: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:112:89: E501 line too long (92 > 88 characters)
/tmp/lint/gating/test_virtwho_gating.py:114:15: E275 missing whitespace after keyword
/tmp/lint/gating/test_virtwho_gating.py:115:15: E275 missing whitespace after keyword
/tmp/lint/sca/test_virtwho_sca.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/sca/test_virtwho_sca.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/sca/test_virtwho_sca.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/sca/test_virtwho_sca.py:15:89: E501 line too long (91 > 88 characters)
/tmp/lint/sca/test_virtwho_sca.py:23:89: E501 line too long (92 > 88 characters)
/tmp/lint/sca/test_virtwho_sca.py:36:89: E501 line too long (92 > 88 characters)
/tmp/lint/sca/test_virtwho_sca.py:45:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/sca/test_virtwho_sca.py:64:89: E501 line too long (104 > 88 characters)
/tmp/lint/sca/test_virtwho_sca.py:67:89: E501 line too long (90 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/smoke/test_virtwho_smoke.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/smoke/test_virtwho_smoke.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/smoke/test_virtwho_smoke.py:40:89: E501 line too long (104 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:48:89: E501 line too long (93 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:50:89: E501 line too long (91 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:51:89: E501 line too long (95 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:52:89: E501 line too long (95 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:54:15: E275 missing whitespace after keyword
/tmp/lint/smoke/test_virtwho_smoke.py:58:41: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:58:62: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:59:25: E231 missing whitespace after ':'
/tmp/lint/smoke/test_virtwho_smoke.py:59:47: E231 missing whitespace after ':'
/tmp/lint/smoke/test_virtwho_smoke.py:61:49: E231 missing whitespace after ','
/tmp/lint/smoke/test_virtwho_smoke.py:61:65: E231 missing whitespace after ':'
/tmp/lint/smoke/test_virtwho_smoke.py:62:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:71:89: E501 line too long (93 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:96:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:101:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:108:13: F631 assertion is always true, perhaps remove parentheses?
/tmp/lint/smoke/test_virtwho_smoke.py:118:15: E275 missing whitespace after keyword
/tmp/lint/smoke/test_virtwho_smoke.py:119:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:126:15: E275 missing whitespace after keyword
/tmp/lint/smoke/test_virtwho_smoke.py:128:15: E275 missing whitespace after keyword
/tmp/lint/smoke/test_virtwho_smoke.py:130:15: E275 missing whitespace after keyword
/tmp/lint/smoke/test_virtwho_smoke.py:131:15: E275 missing whitespace after keyword
/tmp/lint/smoke/test_virtwho_smoke.py:132:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:141:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:154:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:155:89: E501 line too long (96 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:157:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:166:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:174:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:177:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:184:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:185:89: E501 line too long (92 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:186:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:194:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:202:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:210:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:221:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:224:89: E501 line too long (93 > 88 characters)
/tmp/lint/smoke/test_virtwho_smoke.py:225:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/smoke/test_virtwho_smoke.py:230:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:19:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:21:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:36:38: W291 trailing whitespace
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:37:36: W291 trailing whitespace
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:45:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:48:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:21:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:21:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:25:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:25:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:30:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:30:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:33:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:33:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:16:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:20:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:39:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:45:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:16:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:19:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:20:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:27:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:31:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:33:89: E501 line too long (96 > 88 characters)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:18:24: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:19:24: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:20:24: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:21:24: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:22:24: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:28:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:28:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:29:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:33:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:35:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:37:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:20:25: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:20:44: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:23:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:23:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:24:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:31:89: E501 line too long (99 > 88 characters)
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:34:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:30:59: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:30:68: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:37:59: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:37:68: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:28:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:28:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:36:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:36:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:36:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:44:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:44:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:44:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:48:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:49:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:36:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:22:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:25:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:31:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:33:39: W291 trailing whitespace
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:36:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:37:18: W291 trailing whitespace
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:38:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:41:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:42:18: W291 trailing whitespace
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:43:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:46:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:48:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:58:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:64:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:67:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:70:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:27:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:39:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:20:70: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:21:85: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:21:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:22:25: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:22:39: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:25:46: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:25:62: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:26:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:38:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:25:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:30:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:34:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:20:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:22:14: F405 'threading' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:24:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:26:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:29:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:34:89: E501 line too long (104 > 88 characters)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:36:13: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:42:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:44:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:47:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:19:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:24:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:31:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:34:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:17:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:22:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:27:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:30:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:33:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:43:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:19:25: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:19:54: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:23:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:23:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:24:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:24:89: E501 line too long (96 > 88 characters)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:27:25: E127 continuation line over-indented for visual indent
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:30:23: E124 closing bracket does not match visual indentation
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:36:25: E127 continuation line over-indented for visual indent
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:39:23: E124 closing bracket does not match visual indentation
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:44:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:47:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:22:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:33:9: F841 local variable 'owner' is assigned to but never used
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:36:89: E501 line too long (108 > 88 characters)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:41:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:44:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:47:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:53:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:56:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:22:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:30:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:37:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:25:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:25:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:27:89: E501 line too long (112 > 88 characters)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:43:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:35:17: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:37:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:37:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:40:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:24:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:20:25: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:20:48: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:23:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:23:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:24:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:34:89: E501 line too long (111 > 88 characters)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:20:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:22:41: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:22:62: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:24:25: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:24:47: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:25:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:28:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:28:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:29:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:36:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:40:89: E501 line too long (110 > 88 characters)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:41:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:46:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:54:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:61:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:1:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:2:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:6:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:8:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:24:1: W293 blank line contains whitespace
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:24:9: F841 local variable 'register_type' is assigned to but never used
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:36:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:46:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:53:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:24:9: F841 local variable 'register_type' is assigned to but never used
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:31:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:41:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:24:9: F841 local variable 'register_type' is assigned to but never used
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:31:89: E501 line too long (99 > 88 characters)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:55:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:29:24: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:30:22: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:33:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:37:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:37:89: E501 line too long (100 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:38:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:43:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:45:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:48:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:49:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:50:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:57:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:57:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:58:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:63:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:70:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:70:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:73:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:78:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:87:17: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:88:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:88:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:94:17: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:95:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:102:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:103:9: E722 do not use bare 'except'
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:27:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:34:21: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:34:89: E501 line too long (118 > 88 characters)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:35:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:38:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:45:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:27:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:34:21: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:34:89: E501 line too long (118 > 88 characters)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:35:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:31:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:42:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:53:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:23:9: F841 local variable 'host_uuid' is assigned to but never used
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:24:9: F841 local variable 'host_hwuuid' is assigned to but never used
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:30:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:30:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:30:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:32:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:32:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:35:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:35:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:36:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:36:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:51:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:54:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:57:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:58:41: E128 continuation line under-indented for visual indent
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:58:89: E501 line too long (104 > 88 characters)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:63:41: E128 continuation line under-indented for visual indent
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:66:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:66:89: E501 line too long (99 > 88 characters)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:69:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:69:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:30:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:30:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:30:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:32:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:32:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:35:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:35:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:36:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:36:89: E501 line too long (115 > 88 characters)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:50:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:50:89: E501 line too long (116 > 88 characters)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:53:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:53:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:28:9: F841 local variable 'register_owner' is assigned to but never used
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:30:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:30:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:30:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:32:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:32:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:35:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:35:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:36:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:36:89: E501 line too long (116 > 88 characters)
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:20:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:26:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:26:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:27:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:33:89: E501 line too long (128 > 88 characters)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:39:89: E501 line too long (130 > 88 characters)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:23:25: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:23:54: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:26:48: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:26:64: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:27:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:27:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:35:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:35:89: E501 line too long (107 > 88 characters)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:38:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:38:89: E501 line too long (108 > 88 characters)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:21:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:26:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:26:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:34:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:34:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:34:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:42:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:42:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:42:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:24:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:32:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:32:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:35:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:35:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:38:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:45:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:49:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:51:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:54:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:56:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:59:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:61:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:70:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:76:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:82:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:34:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:41:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:36:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:43:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:39:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:39:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:33:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:33:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:33:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:35:29: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:35:45: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:38:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:38:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:39:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:39:89: E501 line too long (113 > 88 characters)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:51:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:54:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:20:9: F841 local variable 'guest_name' is assigned to but never used
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:20:9: F841 local variable 'guest_name' is assigned to but never used
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:55:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:55:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:25:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:28:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:35:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:39:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:40:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:47:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:49:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:52:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:53:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:35:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:39:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:23:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:24:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:25:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:26:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:27:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:28:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:29:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:30:37: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:41:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:45:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:54:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:54:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:57:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:23:9: F841 local variable 'register_owner' is assigned to but never used
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:24:9: F841 local variable 'vdc_physical_sku' is assigned to but never used
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:30:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:43:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:51:89: E501 line too long (106 > 88 characters)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:39:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:53:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:56:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:60:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:60:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:63:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:46:9: E722 do not use bare 'except'
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:46:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:46:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:25:55: W291 trailing whitespace
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:40:39: W291 trailing whitespace
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:47:89: E501 line too long (100 > 88 characters)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:55:89: E501 line too long (108 > 88 characters)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:41:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:42:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:46:9: E722 do not use bare 'except'
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:46:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:46:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:26:9: F841 local variable 'vdc_virtual_sku' is assigned to but never used
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:38:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:46:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:51:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:59:89: E501 line too long (106 > 88 characters)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:29:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:50:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:55:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:59:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:60:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:39:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:52:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:55:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:55:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:57:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:63:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:66:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:36:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:37:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:45:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:45:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:48:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:48:89: E501 line too long (112 > 88 characters)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:51:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:60:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:66:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:77:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:78:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:37:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:45:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:45:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:48:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:48:89: E501 line too long (112 > 88 characters)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:52:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:60:9: E722 do not use bare 'except'
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:36:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:50:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:36:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:50:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:39:89: E501 line too long (100 > 88 characters)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:41:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:44:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:32:1: W293 blank line contains whitespace
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:37:1: W293 blank line contains whitespace
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:46:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:51:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:62:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:70:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:33:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:38:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:43:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:49:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:54:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:63:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:65:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:75:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:76:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:30:9: F841 local variable 'register_type' is assigned to but never used
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:45:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:56:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:65:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:72:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:81:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:83:13: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:89:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:95:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:100:9: E722 do not use bare 'except'
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:27:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:38:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:51:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:56:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:64:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:27:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:38:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:51:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:56:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:64:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:77:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:27:89: E501 line too long (106 > 88 characters)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:37:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:46:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:46:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:49:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:49:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:52:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:60:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:63:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:25:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:34:1: W293 blank line contains whitespace
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:37:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:38:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:38:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:45:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:47:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:48:60: W605 invalid escape sequence '\['
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:48:69: W605 invalid escape sequence '\]'
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:54:1: W391 blank line at end of file
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:32:24: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:33:22: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:36:89: E501 line too long (114 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:46:89: E501 line too long (110 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:48:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:51:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:52:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:60:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:60:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:61:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:66:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:73:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:73:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:76:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:81:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:89:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:89:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:95:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:102:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:103:9: E722 do not use bare 'except'
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:58:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:66:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:36:89: E501 line too long (107 > 88 characters)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:37:89: E501 line too long (124 > 88 characters)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:38:89: E501 line too long (149 > 88 characters)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:45:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:48:89: E501 line too long (104 > 88 characters)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:49:89: E501 line too long (125 > 88 characters)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:50:89: E501 line too long (135 > 88 characters)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:43:41: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:47:20: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:48:22: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:49:20: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:59:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:62:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:64:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:67:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:71:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:74:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:77:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:80:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:83:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:90:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:93:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:97:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:100:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:104:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:22:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:22:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1111_template_conf_validation.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1111_template_conf_validation.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1111_template_conf_validation.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1111_template_conf_validation.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1111_template_conf_validation.py:35:34: W291 trailing whitespace
/tmp/lint/tier1/tc_1111_template_conf_validation.py:40:20: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1111_template_conf_validation.py:41:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1111_template_conf_validation.py:44:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:18:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:19:41: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:19:62: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:21:25: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:21:47: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:22:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:25:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:31:49: E231 missing whitespace after ','
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:31:65: E231 missing whitespace after ':'
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:32:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:39:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:44:89: E501 line too long (110 > 88 characters)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:45:89: E501 line too long (105 > 88 characters)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:50:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:58:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:49:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:60:27: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:75:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:89:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:89:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:25:23: E127 continuation line over-indented for visual indent
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:33:1: W293 blank line contains whitespace
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:60:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:70:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:45:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:58:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:70:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:45:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:61:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:67:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:73:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:78:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:84:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:90:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:55:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:59:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:64:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:70:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:76:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:81:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:87:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:93:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:44:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:49:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:54:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:59:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:66:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:71:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:77:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:83:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:88:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:94:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:100:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:107:1: W391 blank line at end of file
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:30:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:39:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:40:59: W605 invalid escape sequence '\['
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:40:68: W605 invalid escape sequence '\]'
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:60:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:66:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:71:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:74:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:77:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:81:9: E303 too many blank lines (2)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:82:37: W292 no newline at end of file
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:35:15: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:25:9: F841 local variable 'guest_uuid' is assigned to but never used
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:38:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:47:89: E501 line too long (128 > 88 characters)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:56:89: E501 line too long (124 > 88 characters)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:62:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:65:89: E501 line too long (124 > 88 characters)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:71:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:77:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:83:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:87:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:96:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:98:44: W292 no newline at end of file
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:25:9: F841 local variable 'guest_uuid' is assigned to but never used
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:34:1: W293 blank line contains whitespace
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:38:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:47:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:56:89: E501 line too long (120 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:62:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:65:89: E501 line too long (120 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:71:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:77:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:83:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:87:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:97:89: E501 line too long (122 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:100:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:102:44: W292 no newline at end of file
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:25:9: F841 local variable 'guest_uuid' is assigned to but never used
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:38:89: E501 line too long (107 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:47:89: E501 line too long (125 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:57:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:57:89: E501 line too long (118 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:58:89: E501 line too long (111 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:63:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:68:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:72:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:72:89: E501 line too long (122 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:73:89: E501 line too long (111 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:78:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:83:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:95:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:108:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:25:9: F841 local variable 'guest_uuid' is assigned to but never used
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:38:89: E501 line too long (145 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:47:89: E501 line too long (145 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:57:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:57:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:62:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:67:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:71:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:71:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:76:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:81:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:88:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:88:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:93:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:98:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:103:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:103:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:108:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:116:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:25:9: F841 local variable 'guest_uuid' is assigned to but never used
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:39:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:39:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:43:89: E501 line too long (149 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:44:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:49:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:53:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:53:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:57:89: E501 line too long (149 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:58:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:63:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:67:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:67:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:72:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:77:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:81:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:81:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:86:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:91:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:98:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:98:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:103:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:108:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:113:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:113:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:118:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:126:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:17:89: E501 line too long (106 > 88 characters)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:36:46: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:36:67: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:44:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:61:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:63:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:64:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:79:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:98:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:98:90: W291 trailing whitespace
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:45:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:49:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:56:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:62:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:64:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:75:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:77:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:82:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:94:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:34:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:43:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:47:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:56:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:57:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:57:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:70:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:70:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:49:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:61:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:70:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:85:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:95:37: W292 no newline at end of file
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:40:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:49:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:55:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:58:89: E501 line too long (120 > 88 characters)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:64:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:67:89: E501 line too long (120 > 88 characters)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:73:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:79:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:85:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:89:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:99:89: E501 line too long (141 > 88 characters)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:102:89: E501 line too long (115 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:10:9: F841 local variable 'compose_id' is assigned to but never used
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:31:1: W293 blank line contains whitespace
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:41:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:43:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:55:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:64:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:68:1: W293 blank line contains whitespace
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:73:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:73:89: E501 line too long (118 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:82:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:87:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:91:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:91:89: E501 line too long (122 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:100:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:104:1: W293 blank line contains whitespace
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:105:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:116:1: W293 blank line contains whitespace
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:117:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:136:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:49:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:71:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:75:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:80:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:85:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:89:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:95:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:100:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:107:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:118:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:123:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:44:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:44:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:48:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:58:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:65:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:68:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:73:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:77:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:77:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:81:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:86:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:90:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:90:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:95:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:100:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:107:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:107:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:112:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:117:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:122:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:122:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:126:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:38:1: W293 blank line contains whitespace
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:39:65: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:40:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:47:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:48:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:50:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:59:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:35:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:46:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:52:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:57:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:67:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:75:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:83:37: W292 no newline at end of file
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:11:9: F841 local variable 'compose_id' is assigned to but never used
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:34:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:34:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:44:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:54:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:60:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:66:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:35:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:46:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:52:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:65:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:77:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:89:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:81:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:52:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:54:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:61:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:29:29: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:29:45: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:29:65: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:31:29: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:31:45: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:34:49: E231 missing whitespace after ','
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:34:65: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:35:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:35:89: E501 line too long (115 > 88 characters)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:44:33: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:44:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:45:55: E231 missing whitespace after ','
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:45:71: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:47:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:47:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:51:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:34:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:39:21: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:39:89: E501 line too long (118 > 88 characters)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:43:25: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:43:41: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:43:61: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:44:49: E231 missing whitespace after ','
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:44:65: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:45:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:45:89: E501 line too long (122 > 88 characters)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:54:33: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:54:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:55:55: E231 missing whitespace after ','
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:55:71: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:57:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:57:89: E501 line too long (113 > 88 characters)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:61:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:59:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:67:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:75:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:83:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:25:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:29:89: E501 line too long (112 > 88 characters)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:32:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:38:89: E501 line too long (110 > 88 characters)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:31:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:37:14: E222 multiple spaces after operator
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:43:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:44:14: E222 multiple spaces after operator
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:25:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:29:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:32:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:37:89: E501 line too long (128 > 88 characters)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:42:89: E501 line too long (100 > 88 characters)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:51:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:55:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:21:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:26:53: W605 invalid escape sequence '\['
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:26:62: W605 invalid escape sequence '\]'
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:39:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:49:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:61:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:74:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:92:5: F405 'unittest' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:32:89: E501 line too long (110 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:42:89: E501 line too long (109 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:45:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:51:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:51:89: E501 line too long (111 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:54:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:60:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:60:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:63:89: E501 line too long (120 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:69:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:69:89: E501 line too long (113 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:74:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:84:89: E501 line too long (141 > 88 characters)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:87:89: E501 line too long (109 > 88 characters)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:33:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:43:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:51:37: W292 no newline at end of file
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:31:28: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:31:49: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:33:66: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:34:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:35:89: E501 line too long (100 > 88 characters)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:47:89: E501 line too long (127 > 88 characters)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:48:89: E501 line too long (126 > 88 characters)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:50:89: E501 line too long (128 > 88 characters)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:51:89: E501 line too long (125 > 88 characters)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:56:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:57:89: E501 line too long (96 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:43:28: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:43:49: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:44:66: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:45:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:47:89: E501 line too long (100 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:53:89: E501 line too long (127 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:54:89: E501 line too long (126 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:56:89: E501 line too long (128 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:57:89: E501 line too long (125 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:62:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:62:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:73:89: E501 line too long (119 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:74:89: E501 line too long (117 > 88 characters)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:79:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:80:89: E501 line too long (96 > 88 characters)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:36:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:56:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:65:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:78:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:83:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:96:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:112:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:126:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:29:9: F841 local variable 'server' is assigned to but never used
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:36:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:41:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:42:89: E501 line too long (96 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:45:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:47:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:48:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:57:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:58:17: E127 continuation line over-indented for visual indent
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:58:55: E231 missing whitespace after ','
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:64:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:67:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:69:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:70:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:70:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:73:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:76:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:79:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:81:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:86:89: E501 line too long (131 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:87:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:87:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:90:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:91:17: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:93:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:39:37: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:39:54: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:42:89: E501 line too long (99 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:44:89: E501 line too long (116 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:45:37: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:45:53: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:48:72: E231 missing whitespace after ':'
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:49:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:50:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:53:89: E501 line too long (99 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:56:89: E501 line too long (96 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:62:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:62:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:65:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:65:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:65:98: E502 the backslash is redundant between brackets
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:66:33: E128 continuation line under-indented for visual indent
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:70:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:70:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:73:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:79:89: E501 line too long (104 > 88 characters)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:83:1: W391 blank line at end of file
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:34:25: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:44:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:48:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:56:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:44:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:47:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:47:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:51:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:55:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:66:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:72:37: W292 no newline at end of file
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:35:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:36:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:46:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:50:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:55:89: E501 line too long (94 > 88 characters)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:59:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:62:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:15:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:21:54: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:21:62: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:21:70: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:21:78: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:30:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:34:89: E501 line too long (109 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:42:21: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:44:17: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:45:23: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:49:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:49:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:50:89: E501 line too long (116 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:52:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:55:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:56:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:60:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:63:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:67:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:69:13: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:70:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:71:13: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:72:89: E501 line too long (112 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:75:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:76:89: E501 line too long (118 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:77:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:84:89: E501 line too long (107 > 88 characters)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:87:1: W391 blank line at end of file
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:48:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:55:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:58:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:62:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:74:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:75:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:80:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:82:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:85:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:89:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:116:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:116:89: E501 line too long (118 > 88 characters)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:119:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:119:89: E501 line too long (123 > 88 characters)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:20:46: E231 missing whitespace after ','
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:29:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:29:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:31:89: E501 line too long (92 > 88 characters)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:32:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:34:9: E722 do not use bare 'except'
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:38:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:38:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:39:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:40:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:41:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:39:89: E501 line too long (101 > 88 characters)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:23:19: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:27:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:36:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:39:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:46:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:50:89: E501 line too long (110 > 88 characters)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:51:57: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:52:58: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:53:56: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:24:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:27:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:38:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:40:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:46:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:50:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:53:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:57:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:60:9: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:63:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:30:13: F405 'json' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:33:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:34:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:38:89: E501 line too long (103 > 88 characters)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:41:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:44:23: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:44:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:45:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:47:89: E501 line too long (100 > 88 characters)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:48:88: W291 trailing whitespace
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:49:22: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:49:23: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:52:21: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:53:24: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:53:25: F405 'time' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:56:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:57:21: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:60:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:63:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:64:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:65:25: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:65:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:69:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:70:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:41:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:44:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:48:13: F841 local variable 'war_msg' is assigned to but never used
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:48:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:23:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:37:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:43:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:48:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:49:89: E501 line too long (107 > 88 characters)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:51:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:55:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:56:32: F405 'random' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:62:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:63:89: E501 line too long (107 > 88 characters)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:65:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:22:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:25:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:27:38: E231 missing whitespace after ','
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:32:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:36:15: E225 missing whitespace around operator
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:43:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:37:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:38:24: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:39:54: F405 'random' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:39:68: F405 'string' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:43:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:44:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:46:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:49:89: E501 line too long (106 > 88 characters)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:53:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:56:89: E501 line too long (99 > 88 characters)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:61:89: E501 line too long (98 > 88 characters)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:67:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:68:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:26:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:30:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:30:89: E501 line too long (89 > 88 characters)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:27:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:29:89: E501 line too long (90 > 88 characters)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:31:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:39:45: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:39:66: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:42:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:43:89: E501 line too long (109 > 88 characters)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:46:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:64:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:64:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:66:89: E501 line too long (102 > 88 characters)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:67:57: W605 invalid escape sequence '\['
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:67:66: W605 invalid escape sequence '\]'
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:72:9: E303 too many blank lines (2)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:73:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:10:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:31:27: F405 'deploy' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:32:89: E501 line too long (93 > 88 characters)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:38:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:41:17: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:50:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:52:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:13:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:14:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:29:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:34:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:35:17: F405 're' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:37:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:37:89: E501 line too long (91 > 88 characters)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:40:13: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:40:89: E501 line too long (95 > 88 characters)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:13:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:14:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:29:1: W293 blank line contains whitespace
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:40:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:13:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:14:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:13:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:14:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:31:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:31:89: E501 line too long (115 > 88 characters)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:38:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:13:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:14:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:28:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:2:1: F403 'from virt_who import *' used; unable to detect undefined names
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:3:1: F401 'virt_who.base.Base' imported but unused
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:4:1: F401 'virt_who.register.Register' imported but unused
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:7:1: E302 expected 2 blank lines, found 1
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:9:27: F405 'os' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:13:19: F405 'FailException' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:14:89: E501 line too long (97 > 88 characters)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:35:9: F405 'logger' may be undefined, or defined from star imports: virt_who
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:42:9: F405 'logger' may be undefined, or defined from star imports: virt_who


[33m‚úÖ Linted [PYTHON] files with [black]: Found 1 non blocking error(s) - (6.81s)[0m
- Using [black v23.1.0] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/python_black
- MegaLinter key: [PYTHON_BLACK]
- Rules config: [pyproject.toml]
- Number of files analyzed: [189]
--Error detail:
--- /tmp/lint/sca/test_virtwho_sca.py	2023-03-06 05:02:18.572378 +0000
+++ /tmp/lint/sca/test_virtwho_sca.py	2023-03-06 06:16:06.932449 +0000
@@ -4,68 +4,77 @@
 from virt_who.register import Register
 from virt_who.testing import Testing
 
 
 class VirtWhoSCATestCase(Testing):
-
     @classmethod
     def setUpClass(cls):
         super(VirtWhoSCATestCase, cls).setUpClass()
         register_config = cls.get_register_config(cls())
-        if 'satellite' in register_config['type']:
-            cls.satellite_sca_set(cls(), cls.ssh_host(cls()), register_config, enable=True)
+        if "satellite" in register_config["type"]:
+            cls.satellite_sca_set(
+                cls(), cls.ssh_host(cls()), register_config, enable=True
+            )
         else:
             cls.stage_sca_set(cls(), cls.ssh_host(cls()), register_config, enable=True)
-        cls.register_owner = register_config['owner']
+        cls.register_owner = register_config["owner"]
         cls.vw_case_init(cls())
         cls.vw_etc_conf_disable_all(cls())
         cls.vw_etc_sys_disable_all(cls())
         cls.vw_etc_d_delete_all(cls())
-        cls.vw_etc_d_mode_create(cls(), 'virtwho-config', '/etc/virt-who.d/virtwo_sca.conf')
-        cls.vw_option_enable(cls(), '[global]', '/etc/virt-who.conf')
-        cls.vw_option_enable(cls(), 'debug', '/etc/virt-who.conf')
-        cls.vw_option_update_value(cls(), 'debug', 'True', '/etc/virt-who.conf')
+        cls.vw_etc_d_mode_create(
+            cls(), "virtwho-config", "/etc/virt-who.d/virtwo_sca.conf"
+        )
+        cls.vw_option_enable(cls(), "[global]", "/etc/virt-who.conf")
+        cls.vw_option_enable(cls(), "debug", "/etc/virt-who.conf")
+        cls.vw_option_update_value(cls(), "debug", "True", "/etc/virt-who.conf")
         cls.host_uuid = cls.get_hypervisor_hostuuid(cls())
         cls.host_name = cls.get_hypervisor_hostname(cls())
         cls.guest_name = cls.get_guest_name(cls())
         cls.guest_uuid = cls.get_hypervisor_guestuuid(cls())
 
     @classmethod
     def tearDownClass(cls):
         register_config = cls.get_register_config(cls())
-        if 'satellite' in register_config['type']:
-            cls.satellite_sca_set(cls(), cls.ssh_host(cls()), register_config, enable=False)
+        if "satellite" in register_config["type"]:
+            cls.satellite_sca_set(
+                cls(), cls.ssh_host(cls()), register_config, enable=False
+            )
         else:
             cls.stage_sca_set(cls(), cls.ssh_host(cls()), register_config, enable=False)
 
     def get_guest_name(self):
         return self.get_hostname(self.ssh_guest())
 
     def test_vw_report_mapping_with_sca_enabled(self):
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         logger.info(f"---data is: {data}---")
-        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
-        assert (self.register_owner in data.keys())
-        assert (self.host_uuid in data[self.register_owner].keys())
-        assert (self.guest_uuid in data[self.register_owner].keys())
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
+        assert self.register_owner in data.keys()
+        assert self.host_uuid in data[self.register_owner].keys()
+        assert self.guest_uuid in data[self.register_owner].keys()
 
         # test hypervisor facts
-        facts_items = ['socket', 'type', 'dmi', 'version']
-        if self.get_config('hypervisor_type') in ('esx', 'rhevm', 'ahv'):
-            facts_items.append('cluster')
+        facts_items = ["socket", "type", "dmi", "version"]
+        if self.get_config("hypervisor_type") in ("esx", "rhevm", "ahv"):
+            facts_items.append("cluster")
         facts_dic = data[self.register_owner][self.host_uuid]
         for item in facts_items:
-            assert (item in facts_dic.keys())
-            assert (facts_dic[item] is not None)
+            assert item in facts_dic.keys()
+            assert facts_dic[item] is not None
 
     def test_vw_host_to_guest_association(self):
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
-        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))
-        assert (self.vw_web_associate(self.host_name, self.host_uuid, self.guest_name, self.guest_uuid))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
+        assert self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid)
+        assert self.vw_web_associate(
+            self.host_name, self.host_uuid, self.guest_name, self.guest_uuid
+        )
 
     def test_guest_entilement_with_sca_enabled(self):
-        ret, output = self.runcmd(cmd='subscription-manager status', ssh=self.ssh_guest())
-        assert ('Content Access Mode is set to Simple Content Access' in output)
+        ret, output = self.runcmd(
+            cmd="subscription-manager status", ssh=self.ssh_guest()
+        )
+        assert "Content Access Mode is set to Simple Content Access" in output
 
     def test_hypervisor_in_web(self):
         pass
would reformat /tmp/lint/sca/test_virtwho_sca.py
--- /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py	2023-03-06 05:02:18.572378 +0000
+++ /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py	2023-03-06 06:16:06.959838 +0000
@@ -2,50 +2,48 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133652')
-        trigger_type = self.get_config('trigger_type')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133652")
+        trigger_type = self.get_config("trigger_type")
+        compose_id = self.get_config("rhel_compose")
         if "trigger-rhel" not in trigger_type:
             self.vw_case_skip(trigger_type)
 
         # case config
         results = dict()
-        pkg = self.pkg_check(self.ssh_host(), 'virt-who')
+        pkg = self.pkg_check(self.ssh_host(), "virt-who")
         if pkg is False:
             raise FailException("virt-who pkg is not found")
         if compose_id is None or compose_id == "":
             raise FailException("compose_id is not defined")
         repo_base, repo_extra = self.rhel_compose_url(compose_id)
 
         baseurl = repo_extra.split("/x86_64/")[0]
-        arch_list = [
-                'x86_64',
-                'ppc64le',
-                'aarch64',
-                's390x']
+        arch_list = ["x86_64", "ppc64le", "aarch64", "s390x"]
         if "RHEL-7" in compose_id:
             baseurl = repo_base.split("/Server/x86_64/")[0]
             arch_list = [
-                    'Client/x86_64',
-                    'Server/x86_64',
-                    'Server/ppc64',
-                    'Server/ppc64le', 
-                    'Server/s390x', 
-                    'Workstation/x86_64']
+                "Client/x86_64",
+                "Server/x86_64",
+                "Server/ppc64",
+                "Server/ppc64le",
+                "Server/s390x",
+                "Workstation/x86_64",
+            ]
 
         # case steps
         for arch in arch_list:
             pkg_url = f"{baseurl}/{arch}/os/Packages/{pkg}"
             if self.url_validation(pkg_url):
-                results.setdefault('step1', []).append(True)
+                results.setdefault("step1", []).append(True)
                 logger.info("{0} is exist in arch: {1}".format(pkg, arch))
             else:
-                results.setdefault('step1', []).append(False)
+                results.setdefault("step1", []).append(False)
                 logger.info("{0} is not exist in arch: {1}".format(pkg, arch))
 
         # case results
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py
--- /tmp/lint/gating/test_virtwho_gating.py	2023-03-06 05:02:18.572378 +0000
+++ /tmp/lint/gating/test_virtwho_gating.py	2023-03-06 06:16:07.026306 +0000
@@ -4,17 +4,16 @@
 from virt_who.register import Register
 from virt_who.testing import Testing
 
 
 class VirtWhoGatingTestCase(Testing):
-
     @classmethod
     def setUpClass(cls):
         super(VirtWhoGatingTestCase, cls).setUpClass()
         cls.config_name = "virtwho-config"
         cls.config_file = "/etc/virt-who.d/virtwo_gating.conf"
-        cls.global_file = '/etc/virt-who.conf'
+        cls.global_file = "/etc/virt-who.conf"
         cls.vw_case_init(cls())
         cls.host_name = cls.get_hypervisor_hostname(cls())
         cls.host_uuid = cls.get_hypervisor_hostuuid(cls())
         cls.host_hwuuid = cls.get_hypervisor_hwuuid(cls())
         cls.guest_name = cls.get_guest_name(cls())
@@ -23,93 +22,107 @@
     def setUp(self):
         self.vw_etc_conf_disable_all()
         self.vw_etc_sys_disable_all()
         self.vw_etc_d_delete_all()
         self.vw_etc_d_mode_create(self.config_name, self.config_file)
-        self.vw_option_enable('[global]', self.global_file)
-        self.vw_option_enable('debug', self.global_file)
-        self.vw_option_update_value('debug', 'True', self.global_file)
+        self.vw_option_enable("[global]", self.global_file)
+        self.vw_option_enable("debug", self.global_file)
+        self.vw_option_update_value("debug", "True", self.global_file)
 
     def get_guest_name(self):
         return self.get_hostname(self.ssh_guest())
 
     def test_virtwho_debug(self):
-        self.vw_option_update_value('debug', 'False', self.global_file)
+        self.vw_option_update_value("debug", "False", self.global_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
-        assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=False))
-        self.vw_option_update_value('debug', 'True', self.global_file)
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
+        assert self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=False)
+        self.vw_option_update_value("debug", "True", self.global_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
-        assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=True))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
+        assert self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=True)
 
     def test_virtwho_oneshot(self):
         data, tty_output, rhsm_output = self.vw_start(
-            'virt-who -o', exp_send=1, oneshot=True)
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1))
+            "virt-who -o", exp_send=1, oneshot=True
+        )
+        assert self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1)
         data, tty_output, rhsm_output = self.vw_start(
-            'virt-who', exp_send=1, oneshot=False)
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+            "virt-who", exp_send=1, oneshot=False
+        )
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
 
     def test_virtwho_interval(self):
         self.vw_option_enable("interval", self.global_file)
-        self.vw_option_update_value("interval", '60', self.global_file)
+        self.vw_option_update_value("interval", "60", self.global_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
-        assert(self.op_normal_value(
-            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60,
-            exp_loopnum=1, exp_looptime=60))
+        assert self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=60,
+            exp_loopnum=1,
+            exp_looptime=60,
+        )
 
     def test_virtwho_hypervisor_id(self):
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
-        hypervisor_type = self.get_config('hypervisor_type')
-        steps = {'step1':'uuid', 'step2':'hostname'}
-        if hypervisor_type in ('esx', 'rhevm'):
-            steps['step3'] = 'hwuuid'
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
+        hypervisor_type = self.get_config("hypervisor_type")
+        steps = {"step1": "uuid", "step2": "hostname"}
+        if hypervisor_type in ("esx", "rhevm"):
+            steps["step3"] = "hwuuid"
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
             self.vw_option_add("hypervisor_id", option, self.config_file)
             data, tty_output, rhsm_output = self.vw_start()
-            assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+            assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             if option == "hwuuid":
                 hypervisorId = self.host_hwuuid
             elif option == "hostname":
                 hypervisorId = self.host_name
             else:
                 hypervisorId = self.host_uuid
-            assert(hypervisorId in data[register_owner].keys())
+            assert hypervisorId in data[register_owner].keys()
             self.vw_option_del("hypervisor_id", self.config_file)
 
     def test_virtwho_rhsm_options(self):
         self.system_unregister(self.ssh_host())
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        self.vw_option_add("rhsm_hostname", register_config['server'], self.config_file)
+        register_type = register_config["type"]
+        self.vw_option_add("rhsm_hostname", register_config["server"], self.config_file)
         self.vw_option_add("rhsm_port", "443", self.config_file)
-        self.vw_option_add("rhsm_prefix", register_config['prefix'], self.config_file)
-        self.vw_option_add("rhsm_username", register_config['username'], self.config_file)
-        self.vw_option_add("rhsm_password", register_config['password'], self.config_file)
+        self.vw_option_add("rhsm_prefix", register_config["prefix"], self.config_file)
+        self.vw_option_add(
+            "rhsm_username", register_config["username"], self.config_file
+        )
+        self.vw_option_add(
+            "rhsm_password", register_config["password"], self.config_file
+        )
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         self.system_register(self.ssh_host(), register_type, register_config)
 
     def test_virtwho_vdc_subscription(self):
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        register_type = register_config["type"]
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
         data, tty_output, rhsm_output = self.vw_start()
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs['pool_id'])
+        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs["pool_id"])
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs['pool_id'])
+        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs["pool_id"])
         output = self.system_sku_consumed(self.ssh_guest())
-        assert(self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True))
-        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())
+        assert self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
+        ret, output = self.runcmd("subscription-manager repos --list", self.ssh_guest())
         if "stage" in register_type:
-            assert(self.vw_msg_search(output, "Available Repositories" , exp_exist=True))
+            assert self.vw_msg_search(output, "Available Repositories", exp_exist=True)
         else:
-            assert(self.vw_msg_search(output, "no repositories available" , exp_exist=True))
-        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())
-        assert(self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True))
-        assert(self.vw_msg_search(output, "Invalid" , exp_exist=False))
+            assert self.vw_msg_search(
+                output, "no repositories available", exp_exist=True
+            )
+        ret, output = self.runcmd("subscription-manager status", self.ssh_guest())
+        assert self.vw_msg_search(output, "Overall Status: Current", exp_exist=True)
+        assert self.vw_msg_search(output, "Invalid", exp_exist=False)
would reformat /tmp/lint/gating/test_virtwho_gating.py
--- /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py	2023-03-06 05:02:18.573378 +0000
+++ /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py	2023-03-06 06:16:07.031127 +0000
@@ -2,42 +2,51 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133654')
-        trigger_type = self.get_config('trigger_type')
-        if trigger_type in ('trigger-rhev', 'trigger-brew', 'trigger-multiarch'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133654")
+        trigger_type = self.get_config("trigger_type")
+        if trigger_type in ("trigger-rhev", "trigger-brew", "trigger-multiarch"):
             self.vw_case_skip(trigger_type)
 
         # case config
         results = dict()
-        pkg = self.pkg_check(self.ssh_host(), 'virt-who')
+        pkg = self.pkg_check(self.ssh_host(), "virt-who")
 
         # case steps
         # If the virt-who package is installed
         if pkg:
-            logger.info(">>>step1: uninstall virt-who package and verify it was removed")
-            res = self.pkg_uninstall(self.ssh_host(), 'virt-who')
-            results.setdefault('step1', []).append(res)
+            logger.info(
+                ">>>step1: uninstall virt-who package and verify it was removed"
+            )
+            res = self.pkg_uninstall(self.ssh_host(), "virt-who")
+            results.setdefault("step1", []).append(res)
 
-            logger.info(">>>step2: install virt-who package and verify it was installed")
-            res = self.pkg_install(self.ssh_host(), 'virt-who')
-            results.setdefault('step2', []).append(res)
+            logger.info(
+                ">>>step2: install virt-who package and verify it was installed"
+            )
+            res = self.pkg_install(self.ssh_host(), "virt-who")
+            results.setdefault("step2", []).append(res)
         # The virt-who package is not installed
         else:
-            logger.info(">>>step1: install virt-who package and verify it was installed")
-            res = self.pkg_install(self.ssh_host(), 'virt-who')
-            results.setdefault('step1', []).append(res)
-            logger.info(">>>step2: uninstall virt-who package and verify it was removed")
-            res = self.pkg_uninstall(self.ssh_host(), 'virt-who')
-            results.setdefault('step2', []).append(res)
+            logger.info(
+                ">>>step1: install virt-who package and verify it was installed"
+            )
+            res = self.pkg_install(self.ssh_host(), "virt-who")
+            results.setdefault("step1", []).append(res)
+            logger.info(
+                ">>>step2: uninstall virt-who package and verify it was removed"
+            )
+            res = self.pkg_uninstall(self.ssh_host(), "virt-who")
+            results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: at last, make sure virt-who package is installed")
-        if self.pkg_check(self.ssh_host(), 'virt-who') is False:
-            res = self.pkg_install(self.ssh_host(), 'virt-who')
-            results.setdefault('step3', []).append(res)
+        if self.pkg_check(self.ssh_host(), "virt-who") is False:
+            res = self.pkg_install(self.ssh_host(), "virt-who")
+            results.setdefault("step3", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py
--- /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py	2023-03-06 05:02:18.573378 +0000
+++ /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py	2023-03-06 06:16:07.069078 +0000
@@ -5,53 +5,61 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133656')
-        pkg_info = self.pkg_info(self.ssh_host(), 'virt-who')
-        compose_id = self.get_config('rhel_compose')
-        trigger_type = self.get_config('trigger_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133656")
+        pkg_info = self.pkg_info(self.ssh_host(), "virt-who")
+        compose_id = self.get_config("rhel_compose")
+        trigger_type = self.get_config("trigger_type")
         results = dict()
 
         logger.info(">>>step1: 'rpm -qi virt-who' contains valid 'Group' info")
-        results.setdefault('step1', []).append(
-            pkg_info.get("Group") == "System Environment/Base")
+        results.setdefault("step1", []).append(
+            pkg_info.get("Group") == "System Environment/Base"
+        )
 
         logger.info(">>>step2: 'rpm -qi virt-who' contains valid 'License' info")
         if "RHEL-9" in compose_id:
-            results.setdefault('step2', []).append(
-                pkg_info.get("License") == "GPLv2+ and LGPLv3+")
+            results.setdefault("step2", []).append(
+                pkg_info.get("License") == "GPLv2+ and LGPLv3+"
+            )
         else:
-            results.setdefault('step2', []).append(
-                pkg_info.get("License") == "GPLv2+")
+            results.setdefault("step2", []).append(pkg_info.get("License") == "GPLv2+")
 
         logger.info(">>>step3: 'rpm -qi virt-who' contains valid 'URL' info")
-        urls = ['https://github.com/virt-who/virt-who',
-                'https://github.com/candlepin/virt-who']
-        results.setdefault('step3', []).append(
-            any(url in pkg_info.get("URL") for url in urls))
+        urls = [
+            "https://github.com/virt-who/virt-who",
+            "https://github.com/candlepin/virt-who",
+        ]
+        results.setdefault("step3", []).append(
+            any(url in pkg_info.get("URL") for url in urls)
+        )
 
         logger.info(">>>step4: 'rpm -qi virt-who' contains valid 'Packager' info")
         msg = "Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>"
-        results.setdefault('step4', []).append(pkg_info.get("Packager") == msg)
+        results.setdefault("step4", []).append(pkg_info.get("Packager") == msg)
 
         logger.info(">>>step5: 'rpm -qi virt-who' contains valid 'Vendor' info")
-        results.setdefault('step5', []).append(pkg_info.get("Vendor") == "Red Hat, Inc.")
+        results.setdefault("step5", []).append(
+            pkg_info.get("Vendor") == "Red Hat, Inc."
+        )
 
         logger.info(">>>step6: 'rpm -qi virt-who' contains Signature info")
-        if trigger_type in ('trigger-brew'):
-            results.setdefault('step6', []).append("none" in pkg_info.get("Signature"))
+        if trigger_type in ("trigger-brew"):
+            results.setdefault("step6", []).append("none" in pkg_info.get("Signature"))
         else:
-            results.setdefault('step6', []).append("Key ID" in pkg_info.get("Signature"))
+            results.setdefault("step6", []).append(
+                "Key ID" in pkg_info.get("Signature")
+            )
         logger.info(">>>step7: 'virt-who --version' to check version")
-        vw_pkg = self.pkg_check(self.ssh_host(), 'virt-who')[9:15]
+        vw_pkg = self.pkg_check(self.ssh_host(), "virt-who")[9:15]
         logger.info("virt-who version should be {0}".format(vw_pkg))
-        ret, output = self.runcmd('virt-who --version', self.ssh_host())
+        ret, output = self.runcmd("virt-who --version", self.ssh_host())
         logger.info("'virt-who --version' output is {0}".format(output))
         if ret == 0 and vw_pkg in output:
-            results.setdefault('step7', []).append(True)
+            results.setdefault("step7", []).append(True)
         else:
-            results.setdefault('step7', []).append(False)
+            results.setdefault("step7", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py
--- /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py	2023-03-06 05:02:18.573378 +0000
+++ /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py	2023-03-06 06:16:07.120478 +0000
@@ -2,39 +2,44 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133659')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133659")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         steps = {
-                'step1':'restart',
-                'step2':'stop',
-                'step3':'start',
-                'step4':'try-restart',
-                'step5':'force-reload'
-                }
+            "step1": "restart",
+            "step2": "stop",
+            "step3": "start",
+            "step4": "try-restart",
+            "step5": "force-reload",
+        }
         if self.rhel_version(self.ssh_host()) == 6:
-            steps['step6'] = "condrestart"
+            steps["step6"] = "condrestart"
 
         # case steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: {1} virt-who service".format(step, option))
             ret, output = self.run_service(self.ssh_host(), "virt-who", option)
             if ret == 0:
                 if option == "stop":
-                    results.setdefault(step, []).append("running" != self.vw_service_status())
+                    results.setdefault(step, []).append(
+                        "running" != self.vw_service_status()
+                    )
                 else:
-                    results.setdefault(step, []).append("running" == self.vw_service_status())
+                    results.setdefault(step, []).append(
+                        "running" == self.vw_service_status()
+                    )
             else:
                 logger.error("failed to run '{0}' option".format(option))
                 results.setdefault(step, []).append(False)
 
         # case result
would reformat /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py
--- /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py	2023-03-06 05:02:18.573378 +0000
+++ /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py	2023-03-06 06:16:07.113289 +0000
@@ -2,40 +2,45 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133657')
-        trigger_type = self.get_config('trigger_type')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133657")
+        trigger_type = self.get_config("trigger_type")
+        compose_id = self.get_config("rhel_compose")
         if "trigger-rhev" in trigger_type:
             self.vw_case_skip(trigger_type)
 
         results = dict()
         logger.info(">>>step1: virt-who have correct man page")
         msg = "Agent for reporting virtual guest IDs to Subscription"
         if "RHEL-9" in compose_id:
-            msg = "Agent  for  reporting  virtual guest IDs to an entitlement.*\n.*server"
-        ret, output = self.runcmd("man virt-who", self.ssh_host(), desc="run man virt-who")
-        results.setdefault('step1', []).append(self.vw_msg_search(output, msg))
+            msg = (
+                "Agent  for  reporting  virtual guest IDs to an entitlement.*\n.*server"
+            )
+        ret, output = self.runcmd(
+            "man virt-who", self.ssh_host(), desc="run man virt-who"
+        )
+        results.setdefault("step1", []).append(self.vw_msg_search(output, msg))
 
         logger.info(">>>step2: virt-who-config have correct man page")
         ret, output = self.runcmd("man virt-who-config", self.ssh_host())
-        results.setdefault('step2', []).append("configuration for virt-who" in output)
+        results.setdefault("step2", []).append("configuration for virt-who" in output)
         if "RHEL-8.4" in compose_id:
             msg = "backend names: libvirt, esx, rhevm, hyperv, fake, xen, or kube.*\n.*virt."
         elif "RHEL-9" in compose_id:
             msg = "backend names: ahv, libvirt, esx, hyperv, fake, or kubevirt."
             if "RHEL-9.0" in compose_id or "RHEL-9.1" in compose_id:
                 msg = "backend names: ahv, libvirt, esx, rhevm, hyperv, fake, or kube.*\n.*virt."
         else:
             msg = "backend names: ahv, libvirt, esx, rhevm, hyperv, fake, xen, or.*\n.*kubevirt"
-        results.setdefault('step2', []).append(self.vw_msg_search(output, msg))
+        results.setdefault("step2", []).append(self.vw_msg_search(output, msg))
 
         logger.info(">>>step3: virt-who have correct help page")
         ret, output = self.runcmd("virt-who --help", self.ssh_host())
-        results.setdefault('step3', []).append("optional arguments:" in output)
+        results.setdefault("step3", []).append("optional arguments:" in output)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py
--- /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py	2023-03-06 05:02:18.574378 +0000
+++ /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py	2023-03-06 06:16:07.154693 +0000
@@ -2,33 +2,34 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133789')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133789")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
         host_uuid = self.get_hypervisor_hostuuid()
         guest_uuid = self.get_hypervisor_guestuuid()
         config_file = "/etc/sysconfig/virt-who"
         self.vw_etc_sys_mode_enable()
         self.vw_option_enable("VIRTWHO_DEBUG", filename=config_file)
-        self.vw_option_update_value("VIRTWHO_DEBUG", '1', filename=config_file)
+        self.vw_option_update_value("VIRTWHO_DEBUG", "1", filename=config_file)
 
         # case steps
         logger.info(">>>step1: run virt-who by /etc/sysconfig/virt-who")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check host-to-guest association in rhsm.log")
         res = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py
--- /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py	2023-03-06 05:02:18.573378 +0000
+++ /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py	2023-03-06 06:16:07.158973 +0000
@@ -2,38 +2,43 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133660')
-        trigger_type = self.get_config('trigger_type')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if trigger_type in ('trigger-rhev', 'trigger-brew', 'trigger-multiarch'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133660")
+        trigger_type = self.get_config("trigger_type")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if trigger_type in ("trigger-rhev", "trigger-brew", "trigger-multiarch"):
             self.vw_case_skip(trigger_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.pkg_uninstall(self.ssh_host(), 'virt-who')
-        self.pkg_install(self.ssh_host(), 'virt-who')
-        steps = {'step1':'service', 'step2':'cli'}
+        self.pkg_uninstall(self.ssh_host(), "virt-who")
+        self.pkg_install(self.ssh_host(), "virt-who")
+        steps = {"step1": "service", "step2": "cli"}
 
         # case steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who {1} by default".format(step, option))
             if option == "service":
                 data, tty_output, rhsm_output = self.vw_start()
             else:
                 data, tty_output, rhsm_output = self.vw_start(cli="virt-who")
-            if hypervisor_type in ('libvirt-local', 'vdsm'):
+            if hypervisor_type in ("libvirt-local", "vdsm"):
                 res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                res2 = self.vw_msg_search(rhsm_output, 'Error in libvirt backend', exp_exist=False)
+                res2 = self.vw_msg_search(
+                    rhsm_output, "Error in libvirt backend", exp_exist=False
+                )
             else:
                 res1 = self.op_normal_value(data, exp_error=2, exp_thread=1, exp_send=0)
-                res2 = self.vw_msg_search(rhsm_output, 'Error in libvirt backend', exp_exist=True)
+                res2 = self.vw_msg_search(
+                    rhsm_output, "Error in libvirt backend", exp_exist=True
+                )
             results.setdefault(step, []).append(res1)
             results.setdefault(step, []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py
--- /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py	2023-03-06 05:02:18.574378 +0000
+++ /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py	2023-03-06 06:16:07.190066 +0000
@@ -2,33 +2,34 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134107')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134107")
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         guest_uuid = self.get_hypervisor_guestuuid()
 
         # case steps
         logger.info(">>>step1: run virt-who for {0}".format(config_file))
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check host-to-guest association in rhsm.log")
         res = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py
--- /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py	2023-03-06 05:02:18.574378 +0000
+++ /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py	2023-03-06 06:16:07.209535 +0000
@@ -5,33 +5,33 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134108')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134108")
         self.vw_case_init()
 
         # case config
         results = dict()
         host_uuid = self.get_hypervisor_hostuuid()
         guest_uuid = self.get_hypervisor_guestuuid()
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" in compose_id:
-            cmd = self.vw_cli_base() + '-d'
+            cmd = self.vw_cli_base() + "-d"
         else:
             config_name = "virtwho-config"
             config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
             self.vw_etc_d_mode_create(config_name, config_file)
             cmd = "virt-who -d"
 
         # case steps
         logger.info(">>>step1: run virt-who by cli")
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check host-to-guest association in rhsm.log")
         res = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py
--- /tmp/lint/smoke/test_virtwho_smoke.py	2023-03-06 05:02:18.572378 +0000
+++ /tmp/lint/smoke/test_virtwho_smoke.py	2023-03-06 06:16:07.238669 +0000
@@ -4,17 +4,16 @@
 from virt_who.register import Register
 from virt_who.testing import Testing
 
 
 class VirtWhoSmokeTestCase(Testing):
-
     @classmethod
     def setUpClass(cls):
         super(VirtWhoSmokeTestCase, cls).setUpClass()
         cls.config_name = "virtwho-config"
         cls.config_file = "/etc/virt-who.d/virtwo_smoke.conf"
-        cls.global_file = '/etc/virt-who.conf'
+        cls.global_file = "/etc/virt-who.conf"
         cls.vw_case_init(cls())
         cls.register_config = cls.get_register_config(cls())
         cls.host_name = cls.get_hypervisor_hostname(cls())
         cls.host_uuid = cls.get_hypervisor_hostuuid(cls())
         cls.host_hwuuid = cls.get_hypervisor_hwuuid(cls())
@@ -24,66 +23,78 @@
     def setUp(self):
         self.vw_etc_conf_disable_all()
         self.vw_etc_sys_disable_all()
         self.vw_etc_d_delete_all()
         self.vw_etc_d_mode_create(self.config_name, self.config_file)
-        self.vw_option_enable('[global]', self.global_file)
-        self.vw_option_enable('debug', self.global_file)
-        self.vw_option_update_value('debug', 'True', self.global_file)
+        self.vw_option_enable("[global]", self.global_file)
+        self.vw_option_enable("debug", self.global_file)
+        self.vw_option_update_value("debug", "True", self.global_file)
 
     def get_guest_name(self):
         return self.get_hostname(self.ssh_guest())
 
     def test_vw_host_to_guest_association(self):
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
-        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))
-        assert (self.vw_web_associate(self.host_name, self.host_uuid, self.guest_name, self.guest_uuid))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
+        assert self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid)
+        assert self.vw_web_associate(
+            self.host_name, self.host_uuid, self.guest_name, self.guest_uuid
+        )
 
     def test_vw_rhsm_options(self):
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.system_unregister(self.ssh_host())
-        register_type = self.register_config['type']
-        self.vw_option_add("rhsm_hostname", self.register_config['server'], self.config_file)
+        register_type = self.register_config["type"]
+        self.vw_option_add(
+            "rhsm_hostname", self.register_config["server"], self.config_file
+        )
         self.vw_option_add("rhsm_port", "443", self.config_file)
-        self.vw_option_add("rhsm_prefix", self.register_config['prefix'], self.config_file)
-        self.vw_option_add("rhsm_username", self.register_config['username'], self.config_file)
-        self.vw_option_add("rhsm_password", self.register_config['password'], self.config_file)
+        self.vw_option_add(
+            "rhsm_prefix", self.register_config["prefix"], self.config_file
+        )
+        self.vw_option_add(
+            "rhsm_username", self.register_config["username"], self.config_file
+        )
+        self.vw_option_add(
+            "rhsm_password", self.register_config["password"], self.config_file
+        )
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         self.system_register(self.ssh_host(), register_type, self.register_config)
 
     def test_vw_http_proxy(self):
         proxy_server = "{0}:{1}".format(deploy.proxy.server, deploy.proxy.port)
-        steps = {'step1':'http_proxy', 'step2':'https_proxy'}
+        steps = {"step1": "http_proxy", "step2": "https_proxy"}
         self.vw_option_enable("[system_environment]", self.global_file)
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who to check {1}".format(step, option))
             if option == "http_proxy":
                 value = "http://{0}".format(proxy_server)
             if option == "https_proxy":
                 value = "https://{0}".format(proxy_server)
             self.vw_option_enable(option, self.global_file)
             self.vw_option_update_value(option, value, self.global_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-            assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
-            assert (self.vw_msg_search(rhsm_output, "Using proxy.*{0}".format(proxy_server)))
+            assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
+            assert self.vw_msg_search(
+                rhsm_output, "Using proxy.*{0}".format(proxy_server)
+            )
             self.vw_option_disable(option, self.global_file)
 
     def test_vw_hypervisor_id(self):
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        register_owner = self.register_config['owner']
-        if hypervisor_type in ('esx', 'rhevm'):
-            hypervisor_ids = ['uuid', 'hostname', 'hwuuid']
+        register_owner = self.register_config["owner"]
+        if hypervisor_type in ("esx", "rhevm"):
+            hypervisor_ids = ["uuid", "hostname", "hwuuid"]
         else:
-            hypervisor_ids = ['uuid', 'hostname']
+            hypervisor_ids = ["uuid", "hostname"]
         for hypervisor_id in hypervisor_ids:
-            if 'hwuuid' in hypervisor_ids:
+            if "hwuuid" in hypervisor_ids:
                 if hypervisor_id == "uuid":
                     ids = [self.host_uuid, self.host_name, self.host_hwuuid]
                 elif hypervisor_id == "hostname":
                     ids = [self.host_name, self.host_uuid, self.host_hwuuid]
                 else:
@@ -94,137 +105,146 @@
                 else:
                     ids = [self.host_name, self.host_uuid]
             logger.info(">>> check hypervisor_id in rhsm.log")
             self.vw_option_add("hypervisor_id", hypervisor_id, self.config_file)
             data, tty_output, rhsm_output = self.vw_start()
-            assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
-            assert (ids[0] in data[register_owner].keys())
+            assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
+            assert ids[0] in data[register_owner].keys()
             logger.info(">>> check only single hypervisor name on Satellite WebUI")
             ssh_sat = self.register_config["ssh_sat"]
-            admin_user = self.register_config['username']
-            admin_passwd = self.register_config['password']
+            admin_user = self.register_config["username"]
+            admin_passwd = self.register_config["password"]
             cmd = "hammer -u {0} -p {1} host list --search 'name ~ virt-who*'".format(
-                admin_user, admin_passwd)
+                admin_user, admin_passwd
+            )
             ret, result = self.runcmd(cmd, ssh_sat)
             assert (self.vw_msg_search(result, "virt-who-" + ids[0]), True)
-            assert (self.vw_msg_search(result, "virt-who-" + ids[1], False))
-            if 'hwuuid' in hypervisor_ids:
-                assert (self.vw_msg_search(result, "virt-who-" + ids[2], False))
+            assert self.vw_msg_search(result, "virt-who-" + ids[1], False)
+            if "hwuuid" in hypervisor_ids:
+                assert self.vw_msg_search(result, "virt-who-" + ids[2], False)
             self.vw_option_del("hypervisor_id", self.config_file)
 
     def test_vw_vdc_subscription(self):
-        vdc_physical_sku = self.register_config['vdc']
-        vdc_virtual_sku = self.register_config['vdc_bonus']
+        vdc_physical_sku = self.register_config["vdc"]
+        vdc_virtual_sku = self.register_config["vdc_bonus"]
         data, tty_output, rhsm_output = self.vw_start()
-        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         logger.info(">>> attach virtual vdc pool for guest")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs['pool_id'])
+        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs["pool_id"])
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs['pool_id'])
-        output = self.system_sku_consumed(self.ssh_guest())
-        assert(self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True))
-        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())
-        assert(self.vw_msg_search(output, "no repositories available" , exp_exist=True))
-        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())
-        assert(self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True))
-        assert(self.vw_msg_search(output, "Invalid" , exp_exist=False))
+        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs["pool_id"])
+        output = self.system_sku_consumed(self.ssh_guest())
+        assert self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
+        ret, output = self.runcmd("subscription-manager repos --list", self.ssh_guest())
+        assert self.vw_msg_search(output, "no repositories available", exp_exist=True)
+        ret, output = self.runcmd("subscription-manager status", self.ssh_guest())
+        assert self.vw_msg_search(output, "Overall Status: Current", exp_exist=True)
+        assert self.vw_msg_search(output, "Invalid", exp_exist=False)
         logger.info(">>> virtual vdc pool is revoked after unattach physical sku")
         self.vw_web_unattach(self.host_name, self.host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
-        assert (self.vw_msg_search(output, vdc_virtual_sku, exp_exist=False))
+        assert self.vw_msg_search(output, vdc_virtual_sku, exp_exist=False)
 
     def test_virtwho_limited_subscription(self):
-        limited_sku = self.register_config['limit']
+        limited_sku = self.register_config["limit"]
         data, tty_output, rhsm_output = self.vw_start()
-        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         logger.info(">>> attach virtual limited pool for guest")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_host(), limited_sku, "physical")
-        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs['pool_id'])
+        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs["pool_id"])
         sku_attrs = self.system_sku_attr(self.ssh_guest(), limited_sku, "virtual")
-        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs['pool_id'])
-        output = self.system_sku_consumed(self.ssh_guest())
-        assert (self.vw_msg_search(output, limited_sku))
-        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())
-        assert (self.vw_msg_search(output, "no repositories available"))
-        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())
-        assert (self.vw_msg_search(output, "Overall Status: Current"))
-        assert (self.vw_msg_search(output, "Invalid", exp_exist=False))
+        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs["pool_id"])
+        output = self.system_sku_consumed(self.ssh_guest())
+        assert self.vw_msg_search(output, limited_sku)
+        ret, output = self.runcmd("subscription-manager repos --list", self.ssh_guest())
+        assert self.vw_msg_search(output, "no repositories available")
+        ret, output = self.runcmd("subscription-manager status", self.ssh_guest())
+        assert self.vw_msg_search(output, "Overall Status: Current")
+        assert self.vw_msg_search(output, "Invalid", exp_exist=False)
         logger.info(">>> no virtual limit pool for guest any more")
-        output = self.system_sku_attr(self.ssh_guest(), limited_sku, "virtual", exp_exist=False)
-        assert (self.vw_msg_search(str(output), limited_sku, exp_exist=False))
+        output = self.system_sku_attr(
+            self.ssh_guest(), limited_sku, "virtual", exp_exist=False
+        )
+        assert self.vw_msg_search(str(output), limited_sku, exp_exist=False)
         logger.info(">>> limit bonus pool is revoked after unattach physical sku")
         self.vw_web_unattach(self.host_name, self.host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
-        assert (self.vw_msg_search(output, limited_sku, exp_exist=False))
+        assert self.vw_msg_search(output, limited_sku, exp_exist=False)
 
     def test_virtwho_unlimited_subscription(self):
-        unlimited_sku = self.register_config['unlimit']
+        unlimited_sku = self.register_config["unlimit"]
         data, tty_output, rhsm_output = self.vw_start()
-        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         logger.info(">>> attach virtual unlimit pool for guest")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_host(), unlimited_sku, "physical")
-        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs['pool_id'])
+        self.vw_web_attach(self.host_name, self.host_uuid, sku_attrs["pool_id"])
         sku_attrs = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
-        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs['pool_id'])
-        output = self.system_sku_consumed(self.ssh_guest())
-        assert (self.vw_msg_search(output, unlimited_sku))
+        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs["pool_id"])
+        output = self.system_sku_consumed(self.ssh_guest())
+        assert self.vw_msg_search(output, unlimited_sku)
         logger.info(">>>  virtual unlimit sku can be listed in guest ")
         output = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
-        assert (self.vw_msg_search(str(output), unlimited_sku))
+        assert self.vw_msg_search(str(output), unlimited_sku)
         logger.info(">>> virtual unlimit pool is revoked after unattach physical sku")
         self.vw_web_unattach(self.host_name, self.host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
-        assert (self.vw_msg_search(output, unlimited_sku, exp_exist=False))
+        assert self.vw_msg_search(output, unlimited_sku, exp_exist=False)
 
     def test_virtwho_instance_subscription(self):
-        instance_sku = self.register_config['instance']
+        instance_sku = self.register_config["instance"]
         logger.info(">>> set cpu.cpu_socket(s) to 8 in guest")
-        assert (self.system_custom_facts_create(self.ssh_guest(), 'cpu.cpu_socket(s)', '8'))
+        assert self.system_custom_facts_create(
+            self.ssh_guest(), "cpu.cpu_socket(s)", "8"
+        )
         logger.info(">>> attach physical instance sku for guest without quantity")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        self.system_sku_attach(self.ssh_guest(), sku_attrs['pool_id'])
-        output = self.system_sku_consumed(self.ssh_guest())
-        assert (self.vw_msg_search(output, instance_sku))
-        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))
-        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
+        self.system_sku_attach(self.ssh_guest(), sku_attrs["pool_id"])
+        output = self.system_sku_consumed(self.ssh_guest())
+        assert self.vw_msg_search(output, instance_sku)
+        assert self.vw_msg_search(output, "Quantity Used:.*1")
+        assert self.vw_msg_search(output, "Status Details:.*Subscription is current")
         logger.info(">>> attach physical instance sku for guest with quantity=1")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        self.system_sku_attach(self.ssh_guest(), sku_attrs['pool_id'], quantity=1)
-        output = self.system_sku_consumed(self.ssh_guest())
-        assert (self.vw_msg_search(output, instance_sku))
-        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))
-        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
+        self.system_sku_attach(self.ssh_guest(), sku_attrs["pool_id"], quantity=1)
+        output = self.system_sku_consumed(self.ssh_guest())
+        assert self.vw_msg_search(output, instance_sku)
+        assert self.vw_msg_search(output, "Quantity Used:.*1")
+        assert self.vw_msg_search(output, "Status Details:.*Subscription is current")
         logger.info(">>> attach physical instance sku for guest with quantity=2")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        self.system_sku_attach(self.ssh_guest(), sku_attrs['pool_id'], quantity=2)
-        output = self.system_sku_consumed(self.ssh_guest())
-        assert (self.vw_msg_search(output, instance_sku))
-        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))
-        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
+        self.system_sku_attach(self.ssh_guest(), sku_attrs["pool_id"], quantity=2)
+        output = self.system_sku_consumed(self.ssh_guest())
+        assert self.vw_msg_search(output, instance_sku)
+        assert self.vw_msg_search(output, "Quantity Used:.*2")
+        assert self.vw_msg_search(output, "Status Details:.*Subscription is current")
         logger.info(">>> attach physical instance sku for guest with quantity=6")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        self.system_sku_attach(self.ssh_guest(), sku_attrs['pool_id'], quantity=6)
-        output = self.system_sku_consumed(self.ssh_guest())
-        assert (self.vw_msg_search(output, instance_sku, exp_exist=True))
-        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))
-        assert (self.vw_msg_search(output, 'Quantity Used:.*6'))
-        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
+        self.system_sku_attach(self.ssh_guest(), sku_attrs["pool_id"], quantity=6)
+        output = self.system_sku_consumed(self.ssh_guest())
+        assert self.vw_msg_search(output, instance_sku, exp_exist=True)
+        assert self.vw_msg_search(output, "Quantity Used:.*2")
+        assert self.vw_msg_search(output, "Quantity Used:.*6")
+        assert self.vw_msg_search(output, "Status Details:.*Subscription is current")
         self.system_custom_facts_remove(self.ssh_guest())
 
     def test_temporary_sku(self):
         logger.info(">>> check virtual temporary sku exist in guest")
         self.system_sku_refresh(self.ssh_guest())
         ret, output = self.runcmd("subscription-manager list --av", self.ssh_guest())
-        assert (self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=True))
+        assert self.vw_msg_search(
+            output, "Subscription Type: .*Temporary", exp_exist=True
+        )
         logger.info(">>> run virt-who service and check temporary sku disappear")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
+        assert self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         self.system_sku_refresh(self.ssh_guest())
         ret, output = self.runcmd("subscription-manager list --av", self.ssh_guest())
-        assert (self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=False))
+        assert self.vw_msg_search(
+            output, "Subscription Type: .*Temporary", exp_exist=False
+        )
would reformat /tmp/lint/smoke/test_virtwho_smoke.py
--- /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py	2023-03-06 05:02:18.574378 +0000
+++ /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py	2023-03-06 06:16:07.228730 +0000
@@ -5,19 +5,19 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133661')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133661")
         self.vw_case_init()
 
         # case config
         results = dict()
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" in compose_id:
             cmd = self.vw_cli_base()
-            cmd_debug = self.vw_cli_base() + '-d'
+            cmd_debug = self.vw_cli_base() + "-d"
         else:
             config_name = "virtwho-config"
             config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
             self.vw_etc_d_mode_create(config_name, config_file)
             cmd = "virt-who"
@@ -26,22 +26,22 @@
         # case steps
         logger.info(">>>step1: Run virt-who by cli with -d option")
         data, tty_output, rhsm_output = self.vw_start(cmd_debug, exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(output=tty_output, msg="\[.*DEBUG\]", exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         logger.info(">>>step2: Run virt-who by cli without -d option")
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(output=tty_output, msg="\[.*DEBUG\]", exp_exist=False)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py
--- /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py	2023-03-06 06:16:07.279434 +0000
@@ -5,16 +5,16 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133649')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133649")
         self.vw_case_init()
 
         # case config
         results = dict()
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" in compose_id:
             cmd = self.vw_cli_base()
             cmd_oneshot = self.vw_cli_base() + "-o"
         else:
             config_name = "virtwho-config"
@@ -23,22 +23,23 @@
             cmd = "virt-who"
             cmd_oneshot = "virt-who -o"
 
         # case step
         logger.info(">>>step1: Run virt-who by cli with -o option")
-        data, tty_output, rhsm_output = self.vw_start(cmd_oneshot, exp_send=1,
-                                                      oneshot=True)
+        data, tty_output, rhsm_output = self.vw_start(
+            cmd_oneshot, exp_send=1, oneshot=True
+        )
         res = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: Run virt-who by cli without -o option")
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1, oneshot=False)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py
--- /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py	2023-03-06 06:16:07.292029 +0000
@@ -5,12 +5,12 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133662')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '1.31.0':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133662")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "1.31.0":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
@@ -24,26 +24,30 @@
         self.vw_option_enable("VIRTWHO_DEBUG", filename=sysconf_file)
         self.vw_option_update_value("VIRTWHO_DEBUG", "1", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         logger.info('>>>step2: Run virt-who with "VIRTWHO_DEBUG=0"')
         self.vw_option_update_value("VIRTWHO_DEBUG", "0", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        res2 = self.vw_msg_search(
+            output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False
+        )
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info('>>>step3: Run virt-who with "VIRTWHO_DEBUG" disabled')
         self.vw_option_disable("VIRTWHO_DEBUG", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        res2 = self.vw_msg_search(
+            output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py
--- /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py	2023-03-06 06:16:07.320268 +0000
@@ -5,12 +5,12 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133651')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '1.31.0':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133651")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "1.31.0":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
@@ -23,21 +23,21 @@
         logger.info('>>>step1: Run virt-who with "VIRTWHO_ONE_SHOT=1"')
         self.vw_option_enable("VIRTWHO_ONE_SHOT", filename=sysconf_file)
         self.vw_option_update_value("VIRTWHO_ONE_SHOT", "1", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, oneshot=True)
         res = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info('>>>step2: Run virt-who with "VIRTWHO_ONE_SHOT=0"')
         self.vw_option_update_value("VIRTWHO_ONE_SHOT", "0", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, oneshot=False)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         logger.info('>>>step3: Run virt-who with "VIRTWHO_ONE_SHOT" disabled')
         self.vw_option_disable("VIRTWHO_ONE_SHOT", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, oneshot=False)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py
--- /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py	2023-03-06 06:16:07.364321 +0000
@@ -5,51 +5,48 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133653')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133653")
         self.vw_case_init()
 
         # case config
         results = dict()
         json_file = "/tmp/file.json"
         host_uuid = self.get_hypervisor_hostuuid()
         guest_uuid = self.get_hypervisor_guestuuid()
-        compose_id = self.get_config('rhel_compose')
-        hypervisor_type = self.get_config('hypervisor_type')
+        compose_id = self.get_config("rhel_compose")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "RHEL-7" in compose_id:
             cmd = self.vw_cli_base() + "-p > {0}".format(json_file)
             cmd_debug = self.vw_cli_base() + "-d -p > {0}".format(json_file)
         else:
             config_name = "virtwho-config"
             config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
             self.vw_etc_d_mode_create(config_name, config_file)
             cmd = "virt-who -p > {0}".format(json_file)
             cmd_debug = "virt-who -d -p > {0}".format(json_file)
-        steps = {
-            'step1': cmd,
-            'step2': cmd_debug
-        }
+        steps = {"step1": cmd, "step2": cmd_debug}
 
         # case steps
         for step, cmd in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who cli to check print option".format(step))
-            data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=0,
-                                                          web_check=False)
+            data, tty_output, rhsm_output = self.vw_start(
+                cmd, exp_send=0, web_check=False
+            )
             res = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=0)
             results.setdefault(step, []).append(res)
-            ret, output = self.runcmd("cat {0}".format(json_file),
-                                      self.ssh_host())
+            ret, output = self.runcmd("cat {0}".format(json_file), self.ssh_host())
             res = self.vw_msg_search(output, guest_uuid, exp_exist=True)
             results.setdefault(step, []).append(res)
-            if hypervisor_type not in ('libvirt-local', 'vdsm'):
+            if hypervisor_type not in ("libvirt-local", "vdsm"):
                 res = self.vw_msg_search(output, host_uuid, exp_exist=True)
                 results.setdefault(step, []).append(res)
 
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py
--- /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py	2023-03-06 06:16:07.376293 +0000
@@ -5,16 +5,16 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133650')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133650")
         self.vw_case_init()
 
         # case config
         results = dict()
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" in compose_id:
             cmd = self.vw_cli_base() + "-d"
             cmd_i_10 = self.vw_cli_base() + "-d -i 10"
             cmd_i_60 = self.vw_cli_base() + "-d -i 60"
             cmd_i_120 = self.vw_cli_base() + "-d -i 120"
@@ -28,39 +28,60 @@
             cmd_i_120 = "virt-who -d -i 120"
 
         # case steps
         logger.info(">>>step1: run virt-who without -i option")
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1,
-                                   exp_send=1, exp_interval=3600)
-        results.setdefault('step1', []).append(res)
+        res = self.op_normal_value(
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600
+        )
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with -i 10 option")
-        msg = "Interval value can't be lower than 60 seconds. " \
-              "Default value of 3600 seconds will be used"
+        msg = (
+            "Interval value can't be lower than 60 seconds. "
+            "Default value of 3600 seconds will be used"
+        )
         data, tty_output, rhsm_output = self.vw_start(cmd_i_10, exp_send=1)
-        res1 = self.op_normal_value(data, exp_error=0, exp_thread=1,
-                                    exp_send=1, exp_interval=3600)
+        res1 = self.op_normal_value(
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600
+        )
         res2 = self.vw_msg_search(tty_output, msg, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: run virt-who with -i 60 option")
-        data, tty_output, rhsm_output = self.vw_start(cmd_i_60, exp_send=1, exp_loopnum=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1,
-                                   exp_interval=60, exp_loopnum=1, exp_looptime=60)
-        results.setdefault('step3', []).append(res)
+        data, tty_output, rhsm_output = self.vw_start(
+            cmd_i_60, exp_send=1, exp_loopnum=1
+        )
+        res = self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=60,
+            exp_loopnum=1,
+            exp_looptime=60,
+        )
+        results.setdefault("step3", []).append(res)
 
         logger.info(">>>step4: run virt-who with -i 120 option")
-        data, tty_output, rhsm_output = self.vw_start(cmd_i_120, exp_send=1,
-                                                      exp_loopnum=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1,
-                                   exp_interval=120, exp_loopnum=1, exp_looptime=120)
-        results.setdefault('step4', []).append(res)
+        data, tty_output, rhsm_output = self.vw_start(
+            cmd_i_120, exp_send=1, exp_loopnum=1
+        )
+        res = self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=120,
+            exp_loopnum=1,
+            exp_looptime=120,
+        )
+        results.setdefault("step4", []).append(res)
 
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2,3,4) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py
--- /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py	2023-03-06 06:16:07.375590 +0000
@@ -5,54 +5,68 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133655')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '1.31.0':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133655")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "1.31.0":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
         option_tested = "VIRTWHO_INTERVAL"
         sysconf_file = "/etc/sysconfig/virt-who"
         self.vw_option_enable("VIRTWHO_DEBUG", filename=sysconf_file)
-        self.vw_option_update_value("VIRTWHO_DEBUG", '1', filename=sysconf_file)
+        self.vw_option_update_value("VIRTWHO_DEBUG", "1", filename=sysconf_file)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: disable VIRTWHO_INTERVAL option")
         self.vw_option_disable(option_tested, filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(
-            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600)
-        results.setdefault('step1', []).append(res)
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600
+        )
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: enable VIRTWHO_INTERVAL and set to 10")
         self.vw_option_enable(option_tested, filename=sysconf_file)
-        self.vw_option_update_value(option_tested, '10', filename=sysconf_file)
+        self.vw_option_update_value(option_tested, "10", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(
-            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600)
-        results.setdefault('step2', []).append(res)
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600
+        )
+        results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: enable VIRTWHO_INTERVAL and set to 60")
-        self.vw_option_update_value(option_tested, '60', filename=sysconf_file)
+        self.vw_option_update_value(option_tested, "60", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
         res = self.op_normal_value(
-            data, exp_error=0, exp_thread=1, exp_send=1,
-            exp_interval=60, exp_loopnum=1, exp_looptime=60)
-        results.setdefault('step3', []).append(res)
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=60,
+            exp_loopnum=1,
+            exp_looptime=60,
+        )
+        results.setdefault("step3", []).append(res)
 
         logger.info(">>>step4: enable VIRTWHO_INTERVAL and set to 120")
-        self.vw_option_update_value(option_tested, '120', filename=sysconf_file)
+        self.vw_option_update_value(option_tested, "120", filename=sysconf_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
         res = self.op_normal_value(
-            data, exp_error=0, exp_thread=1, exp_send=1,
-            exp_interval=120, exp_loopnum=1, exp_looptime=120)
-        results.setdefault('step4', []).append(res)
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=120,
+            exp_loopnum=1,
+            exp_looptime=120,
+        )
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py
--- /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py	2023-03-06 06:16:07.384320 +0000
@@ -2,14 +2,15 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133658')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133658")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "libvirt-local" in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
@@ -21,15 +22,15 @@
         # case steps
         logger.info(">>>step1: run virt-who with -c option")
         cmd = "virt-who -c {0} -d".format(config_file)
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with --config option")
         cmd = "virt-who --config {0} -d".format(config_file)
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py
--- /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py	2023-03-06 06:16:07.436645 +0000
@@ -5,12 +5,12 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134121')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134121")
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # case config
@@ -18,11 +18,11 @@
         log_dir = "/var/log/rhsm/virtwho/"
         log_file = "/var/log/rhsm/virtwho/rhsm.log"
         guest_uuid = self.get_hypervisor_guestuuid()
         cmd1 = self.vw_cli_base() + "-d -l {0}".format(log_dir)
         cmd2 = self.vw_cli_base() + "-d --log-dir {0}".format(log_dir)
-        steps = {'step1': cmd1, 'step2': cmd2}
+        steps = {"step1": cmd1, "step2": cmd2}
 
         # case steps
         for step, cmd in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who cli to check log-dir".format(step))
             data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
@@ -39,10 +39,10 @@
                 logger.error("{0} is not exist".format(log_file))
                 results.setdefault(step, []).append(False)
 
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py
--- /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py	2023-03-06 06:16:07.469266 +0000
@@ -2,29 +2,32 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134122')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134122")
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # case config
         results = dict()
         log_dir = "/var/log/rhsm/virtwho"
         log_file = "/var/log/rhsm/virtwho/virtwho.log"
         guest_uuid = self.get_hypervisor_guestuuid()
-        cmd1 = self.vw_cli_base() + "-d -l {0} -f {1}".format(log_dir,log_file)
-        cmd2 = self.vw_cli_base() + "-d --log-dir {0} --log-file {1}".format(log_dir,log_file)
-        steps = {'step1':cmd1, 'step2':cmd2}
+        cmd1 = self.vw_cli_base() + "-d -l {0} -f {1}".format(log_dir, log_file)
+        cmd2 = self.vw_cli_base() + "-d --log-dir {0} --log-file {1}".format(
+            log_dir, log_file
+        )
+        steps = {"step1": cmd1, "step2": cmd2}
 
         # case steps
-        for step, cmd in sorted(steps.items(),key=lambda item:item[0]):
+        for step, cmd in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who cli to check log-file".format(step))
             data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(res)
             ret, output = self.runcmd("ls {0}".format(log_file), self.ssh_host())
@@ -38,10 +41,10 @@
                 logger.error("{0} is not exist".format(log_file))
                 results.setdefault(step, []).append(False)
 
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py
--- /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py	2023-03-06 06:16:07.474421 +0000
@@ -5,51 +5,51 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133696')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133696")
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         guest_uuid = self.get_hypervisor_guestuuid()
         cmd1 = self.vw_cli_base() + "-d -m"
         cmd2 = self.vw_cli_base() + "-d --log-per-config"
-        steps = {'step1': cmd1, 'step2': cmd2}
+        steps = {"step1": cmd1, "step2": cmd2}
 
         # Case Steps
         for step, cmd in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who cli to check log-per-config".format(step))
             data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(res)
-            ret, output = self.runcmd('ls /var/log/rhsm/virtwho*', self.ssh_host())
+            ret, output = self.runcmd("ls /var/log/rhsm/virtwho*", self.ssh_host())
             if ret != 0 or output is None:
                 logger.error("Failed to find /var/log/rhsm/virtwho* files")
                 results.setdefault(step, []).append(False)
-            files = output.split('\n') 
-            ''' check files exist or not'''
+            files = output.split("\n")
+            """ check files exist or not"""
             if any("destination" in fd for fd in files):
                 logger.info("Succeeded to find virtwho.destination file")
-            else: 
+            else:
                 logger.error("Failed to find virtwho.destination file")
                 results.setdefault(step, []).append(False)
             if any("main" in fd for fd in files):
                 logger.info("Succeeded to find virtwho.main file")
-            else: 
+            else:
                 logger.error("Failed to find virtwho.main file")
                 results.setdefault(step, []).append(False)
             if any("rhsm_log" in fd for fd in files):
                 logger.info("Succeeded to find virtwho.rhsm_log file")
             else:
                 logger.error("Failed to find virtwho.rhsm_log file")
                 results.setdefault(step, []).append(False)
-            ''' check message is expected or not'''
+            """ check message is expected or not"""
             for fd in files:
                 fd = fd.strip()
                 ret, output = self.runcmd("cat {0}".format(fd), self.ssh_host())
                 if "destination" in fd:
                     d1 = self.vw_msg_search(output, guest_uuid, exp_exist=True)
@@ -62,17 +62,19 @@
                     m2 = self.vw_msg_search(output, "ERROR", exp_exist=False)
                     if m1 is False or m2 is False:
                         logger.error("Failed to validate virtwho.main file")
                         results.setdefault(step, []).append(False)
                 if "rhsm_log" in fd:
-                    r1 = self.vw_msg_search(output, "Using reporter_id=", exp_exist=True)
+                    r1 = self.vw_msg_search(
+                        output, "Using reporter_id=", exp_exist=True
+                    )
                     r2 = self.vw_msg_search(output, "ERROR", exp_exist=False)
                     if r1 is False or r2 is False:
                         logger.error("Failed to validate virtwho.rhsm_log file")
                         results.setdefault(step, []).append(False)
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
--- /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py	2023-03-06 06:16:07.486833 +0000
@@ -5,40 +5,44 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134123')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134123")
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # case config
         results = dict()
         reporter_id = "virtwho_reporter_id_tc1021"
         cmd1 = self.vw_cli_base() + "-d -r {0}".format(reporter_id)
         cmd2 = self.vw_cli_base() + "-d --reporter-id {0}".format(reporter_id)
-        steps = {'step1': cmd1, 'step2': cmd2}
+        steps = {"step1": cmd1, "step2": cmd2}
 
         # case steps
         for step, cmd in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who cli to check reporter_id".format(step))
             data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(res)
-            if data['reporter_id'] == reporter_id:
-                logger.info("Succeeded to find the expected reporter_id: {0}"
-                            .format(reporter_id))
+            if data["reporter_id"] == reporter_id:
+                logger.info(
+                    "Succeeded to find the expected reporter_id: {0}".format(
+                        reporter_id
+                    )
+                )
                 results.setdefault(step, []).append(True)
             else:
-                logger.error("Failed to find the expected reporter_id: {0}"
-                             .format(reporter_id))
+                logger.error(
+                    "Failed to find the expected reporter_id: {0}".format(reporter_id)
+                )
                 results.setdefault(step, []).append(False)
 
         # case result
         notes = list()
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py
would reformat /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py
--- /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py	2023-03-06 05:02:18.575378 +0000
+++ /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py	2023-03-06 06:16:07.515887 +0000
@@ -2,13 +2,14 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133732')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133732")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
@@ -22,14 +23,14 @@
         t1 = threading.Thread(target=self.runcmd, args=(cmd, self.ssh_host()))
         t1.start()
         time.sleep(15)
         if self.vw_callback_thread_num() == 1:
             logger.info("Succeeded to start virt-who by cli")
-            results.setdefault('step1', []).append(True)
+            results.setdefault("step1", []).append(True)
         else:
             logger.error("Failed to start virt-who by cli")
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
 
         logger.info(">>>step2: kill virt-who by 'kill -2'")
         for i in range(5):
             cmd = "ps -ef | grep virt-who -i | grep -v grep | awk '{print $2}' | xargs -I {} kill -2 {}"
             ret, output = self.runcmd(cmd, self.ssh_host())
@@ -40,12 +41,12 @@
             else:
                 is_killed = "No"
                 logger.warning("Failed to kill virt-who, try again ...")
         if is_killed == "Yes":
             logger.info("Succeeded to kill virt-who")
-            results.setdefault('step2', []).append(True)
+            results.setdefault("step2", []).append(True)
         else:
             logger.info("Failed to kill virt-who")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py
--- /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py	2023-03-06 06:16:07.538165 +0000
@@ -2,13 +2,14 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133734')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133734")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
@@ -17,22 +18,22 @@
 
         # case steps
         logger.info(">>>step1: restart virt-who service to keep it running")
         self.run_service(self.ssh_host(), "virt-who", "restart")
         if self.vw_service_status() == "running":
-            results.setdefault('step1', []).append(True)
+            results.setdefault("step1", []).append(True)
         else:
             logger.error("Failed to start virt-who")
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
 
         logger.info(">>>step2: run virt-who by cli, will failed as 'already running'")
         cmd = "virt-who"
         ret, output = self.runcmd(cmd, self.ssh_host())
         if "already running" in output:
             logger.info("Succeeded to check, return 'already running' as expected")
-            results.setdefault('step2', []).append(True)
+            results.setdefault("step2", []).append(True)
         else:
             logger.error("Failed to check, not return 'already running'")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py
--- /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py	2023-03-06 06:16:07.559298 +0000
@@ -2,43 +2,44 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133736')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133736")
         self.vw_case_init()
 
         # case config
         results = dict()
 
         # case steps
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] < '1.31.0':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] < "1.31.0":
             logger.info(">>>step1: stop virt-who to check virt-who file permission")
             config_file = "/etc/sysconfig/virt-who"
             self.run_service(self.ssh_host(), "virt-who", "stop")
             cmd = "ls -l {0}".format(config_file)
             ret, output = self.runcmd(cmd, self.ssh_host())
             logger.info(output)
             if ret == 0 and output is not None and output != "":
                 res = self.vw_msg_search(output, "-rw-------")
-                results.setdefault('step1', []).append(res)
+                results.setdefault("step1", []).append(res)
             else:
                 logger.error("Failed to get virt-who file properties")
-                results.setdefault('step1', []).append(False)
+                results.setdefault("step1", []).append(False)
 
         logger.info(">>>step2: start virt-who to check virt-who.pid file permission")
         pid_file = "/var/run/virt-who.pid"
         self.run_service(self.ssh_host(), "virt-who", "start")
         cmd = "ls -l {0}".format(pid_file)
         ret, output = self.runcmd(cmd, self.ssh_host())
         logger.info(output)
         if ret == 0 and output is not None and output != "":
             res = self.vw_msg_search(output, "-rw-------")
-            results.setdefault('step2', []).append(res)
+            results.setdefault("step2", []).append(res)
         else:
             logger.error("Failed to get virt-who.pid properties")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py
--- /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py	2023-03-06 06:16:07.562625 +0000
@@ -2,46 +2,47 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133738')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133738")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.ssh_no_passwd_access(self.ssh_guest(), self.ssh_host())
-        host = self.ssh_host()['host']
+        host = self.ssh_host()["host"]
         port = 22
         if ":" in host:
-            var = host.split(':')
+            var = host.split(":")
             host = var[0]
             port = int(var[1])
 
         # case steps
         logger.info(">>>step1: ssh restart virt-who and check status")
         cmd = "ssh {0} -p {1} 'service virt-who restart'".format(host, port)
         ret, output = self.runcmd(cmd, self.ssh_guest())
         if self.vw_service_status() == "running":
             logger.info("Succeeded to restart virt-who by ssh")
-            results.setdefault('step1', []).append(True)
+            results.setdefault("step1", []).append(True)
         else:
             logger.error("Failed to restart virt-who by ssh")
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
 
         logger.info(">>>step2: ssh stop virt-who and check status")
         cmd = "ssh {0} -p {1} 'service virt-who stop'".format(host, port)
         ret, output = self.runcmd(cmd, self.ssh_guest())
         if self.vw_service_status() != "running":
             logger.info("Succeeded to stop virt-who by ssh")
-            results.setdefault('step2', []).append(True)
+            results.setdefault("step2", []).append(True)
         else:
             logger.error("Failed to stop virt-who by ssh")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py
--- /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py	2023-03-06 06:16:07.612063 +0000
@@ -2,30 +2,33 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133730')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133730")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "libvirt-local" in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
-        logger.info(">>>step1: run virt-who service with one config file in /etc/virt-who.d/")
+        logger.info(
+            ">>>step1: run virt-who service with one config file in /etc/virt-who.d/"
+        )
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py	2023-03-06 06:16:07.619859 +0000
@@ -2,43 +2,45 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133741')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133741")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         keywords = "test virt-who instead or not"
-        steps = {'step1':'/root/virt-who.py', 'step2':'/root/virt-who'}
+        steps = {"step1": "/root/virt-who.py", "step2": "/root/virt-who"}
         self.vw_thread_clean()
 
         # Case Steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: run virt-who to check {1} instead or not".format(step, option))
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: run virt-who to check {1} instead or not".format(step, option)
+            )
             if "RHEL-7" in compose_id:
-                cmd = ('cat <<EOF > %s\n'
-                        '#!/usr/bin/python\n'
-                        'print "%s"\n'
-                        'EOF'
-                      ) % (option, keywords)
+                cmd = (
+                    "cat <<EOF > %s\n" "#!/usr/bin/python\n" 'print "%s"\n' "EOF"
+                ) % (option, keywords)
                 ret, output = self.runcmd(cmd, self.ssh_host())
                 cmd = "python {0}".format(option)
                 ret, output = self.runcmd(cmd, self.ssh_host())
             else:
-                cmd = ('cat <<EOF > %s\n'
-                        '#!/usr/libexec/platform-python\n'
-                        'print("%s")\n'
-                        'EOF'
-                      ) % (option, keywords)
+                cmd = (
+                    "cat <<EOF > %s\n"
+                    "#!/usr/libexec/platform-python\n"
+                    'print("%s")\n'
+                    "EOF"
+                ) % (option, keywords)
                 ret, output = self.runcmd(cmd, self.ssh_host())
                 cmd = "/usr/libexec/platform-python {0}".format(option)
                 ret, output = self.runcmd(cmd, self.ssh_host())
             if ret == 0 and keywords in output:
                 logger.info("Succeeded to run {0}".format(option))
--- /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py	2023-03-06 06:16:07.613889 +0000
@@ -2,13 +2,14 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133745')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133745")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
@@ -21,40 +22,46 @@
         # case steps
         logger.info(">>>step1: config mode, check report send and no error msg ")
         self.vw_etc_d_mode_create(config_name, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check guest attributes by curl")
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        username = register_config['username']
-        password = register_config['password']
-        owner = register_config['owner']
-        api = register_config['api']
+        register_type = register_config["type"]
+        username = register_config["username"]
+        password = register_config["password"]
+        owner = register_config["owner"]
+        api = register_config["api"]
         if "stage" in register_type:
-            registered_id = self.stage_consumer_uuid(self.ssh_host(), register_config, host_name, host_uuid)
+            registered_id = self.stage_consumer_uuid(
+                self.ssh_host(), register_config, host_name, host_uuid
+            )
             cmd = "curl -s -k -u {0}:{1} {2}/consumers/{3}/guestids/{4}".format(
-                    username, password, api, registered_id, guest_uuid)
+                username, password, api, registered_id, guest_uuid
+            )
             ret, output = self.runcmd(cmd, self.ssh_host())
             if guest_uuid in output and "guestId" in output and "attributes" in output:
                 logger.info("Succeeded to check the guest attributes by curl")
-                results.setdefault('step2', []).append(True)
+                results.setdefault("step2", []).append(True)
             else:
                 logger.error("Failed to check the guest attributes by curl")
-                results.setdefault('step2', []).append(False)
+                results.setdefault("step2", []).append(False)
         if "satellite" in register_type:
-            guest_registered_id = self.satellite_host_id(self.ssh_host(), register_config, guest_name, guest_uuid)
+            guest_registered_id = self.satellite_host_id(
+                self.ssh_host(), register_config, guest_name, guest_uuid
+            )
             cmd = "curl -X GET -s -k -u {0}:{1} {2}/api/v2/hosts/{3}".format(
-                    username, password, api, guest_registered_id)
+                username, password, api, guest_registered_id
+            )
             ret, output = self.runcmd(cmd, self.ssh_host())
             attr1 = '"id":{0}'.format(guest_registered_id)
             if attr1 in output and guest_name in output:
                 logger.info("Succeeded to check the guest attributes by curl")
-                results.setdefault('step2', []).append(True)
+                results.setdefault("step2", []).append(True)
             else:
                 logger.error("Failed to check the guest attributes by curl")
-                results.setdefault('step2', []).append(False)
+                results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py
would reformat /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py
--- /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py	2023-03-06 06:16:07.639570 +0000
@@ -2,42 +2,47 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133746')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133746")
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: restart virt-who service, check status and thread")
         self.vw_thread_clean()
         ret, output = self.run_service(self.ssh_host(), "virt-who", "start")
         thread_num = self.vw_callback_thread_num()
-        results.setdefault('step1', []).append(thread_num == 1)
-        results.setdefault('step1', []).append(self.vw_service_status() == "running")
+        results.setdefault("step1", []).append(thread_num == 1)
+        results.setdefault("step1", []).append(self.vw_service_status() == "running")
         logger.info("virt-who thread number is: {0}".format(thread_num))
 
-        logger.info(">>>step2: restart rhsmcertd service , check virt-who status and thread")
+        logger.info(
+            ">>>step2: restart rhsmcertd service , check virt-who status and thread"
+        )
         ret, output = self.run_service(self.ssh_host(), "rhsmcertd", "restart")
         thread_num = self.vw_callback_thread_num()
-        results.setdefault('step2', []).append(thread_num == 1)
-        results.setdefault('step2', []).append(self.vw_service_status() == "running")
+        results.setdefault("step2", []).append(thread_num == 1)
+        results.setdefault("step2", []).append(self.vw_service_status() == "running")
         logger.info("virt-who thread number is: {0}".format(thread_num))
 
-        logger.info(">>>step3: restart virt-who service again , check virt-who status and thread")
+        logger.info(
+            ">>>step3: restart virt-who service again , check virt-who status and thread"
+        )
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py
--- /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py	2023-03-06 06:16:07.666129 +0000
@@ -2,43 +2,48 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133739')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133739")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         swap_file = "/etc/virt-who.d/.test.conf.swp"
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_etc_d_mode_create(config_name, swap_file)
 
         # case steps
         logger.info(">>>step1: check the swp file is ignored or not ")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
         s2 = self.vw_msg_search(rhsm_output, "test.conf.swp", exp_exist=False)
-        results.setdefault('step1', []).append(s2)
+        results.setdefault("step1", []).append(s2)
 
         logger.info(">>>step2: check how many modes in rhsm.log")
         modes = re.findall(r'Using configuration.*\("(.*?)" mode\)', rhsm_output)
         if len(modes) == 1:
-            logger.info("Succeeded to check, only one mode in rhsm.log: {0}".format(modes))
-            results.setdefault('step2', []).append(True)
+            logger.info(
+                "Succeeded to check, only one mode in rhsm.log: {0}".format(modes)
+            )
+            results.setdefault("step2", []).append(True)
         else:
-            logger.error("Failed to check, the modes number is not matched: {0}".format(modes))
-            results.setdefault('step2', []).append(False)
+            logger.error(
+                "Failed to check, the modes number is not matched: {0}".format(modes)
+            )
+            results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py	2023-03-06 06:16:07.669231 +0000
@@ -2,46 +2,49 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133735')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133735")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         guest_uuid = self.get_hypervisor_guestuuid()
 
         # case steps
-        logger.info(">>>step1: enable mode in /etc/sysconfig/virt-who and config same mode in /etc/virt-who.d/")
+        logger.info(
+            ">>>step1: enable mode in /etc/sysconfig/virt-who and config same mode in /etc/virt-who.d/"
+        )
         self.vw_etc_sys_mode_enable()
         self.vw_etc_d_mode_create(config_name, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check mapping info duplicated or not")
         register_config = self.get_register_config()
-        register_type = register_config['type']
+        register_type = register_config["type"]
         num = rhsm_output.count('"guestId": "{0}"'.format(guest_uuid))
         logger.info("Actual mapping info num: {0}".format(num))
         if "satellite62" in register_type:
             logger.info("Expected mapping info num: 1 for sat62")
-            results.setdefault('step2', []).append(num == 1)
+            results.setdefault("step2", []).append(num == 1)
         else:
             logger.info("Expected mapping info num: 2 for sat63 above and stage")
-            results.setdefault('step2', []).append(num == 2)
+            results.setdefault("step2", []).append(num == 2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py
--- /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py	2023-03-06 06:16:07.676624 +0000
@@ -5,34 +5,35 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133748')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133748")
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # case config
         results = dict()
         cmd1 = self.vw_cli_base() + "--sam -d"
         cmd2 = self.vw_cli_base() + "--satellite6 -d"
-        steps = {'step1': cmd1, 'step2': cmd2}
+        steps = {"step1": cmd1, "step2": cmd2}
 
         # case steps
         for step, cmd in sorted(steps.items(), key=lambda item: item[0]):
-            logger.info(">>>{0}: run virt-who cli to check sam/satellite options"
-                        .format(step))
+            logger.info(
+                ">>>{0}: run virt-who cli to check sam/satellite options".format(step)
+            )
             data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(s1)
 
         # case result
         notes = list()
         notes.append("Bug 1760175 - Remove --sam/--satellite6 or repair them?")
         notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1760175")
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type == 'kubevirt':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py
--- /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py	2023-03-06 06:16:07.703413 +0000
@@ -2,34 +2,37 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133701')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133701")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_file = "/etc/sysconfig/virt-who"
         self.vw_etc_sys_mode_enable()
         self.vw_option_enable("VIRTWHO_DEBUG", filename=config_file)
-        self.vw_option_update_value("VIRTWHO_DEBUG", '1', filename=config_file)
-        steps = {'step1':'VIRTWHO_SAM', 'step2':'VIRTWHO_SATELLITE6'}
+        self.vw_option_update_value("VIRTWHO_DEBUG", "1", filename=config_file)
+        steps = {"step1": "VIRTWHO_SAM", "step2": "VIRTWHO_SATELLITE6"}
 
         # case steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who to check {1}".format(step, option))
             self.vw_option_enable(option, filename=config_file)
-            self.vw_option_update_value(option, '1', filename=config_file)
+            self.vw_option_update_value(option, "1", filename=config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(s1)
             self.vw_option_disable(option, filename=config_file)
 
         # case result
         notes = list()
-        notes.append("This case will be deprecated as bug https://bugzilla.redhat.com/show_bug.cgi?id=1368341")
+        notes.append(
+            "This case will be deprecated as bug https://bugzilla.redhat.com/show_bug.cgi?id=1368341"
+        )
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py
--- /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py	2023-03-06 06:16:07.712840 +0000
@@ -2,13 +2,14 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133706')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133706")
         self.vw_case_init()
 
         # case config
         results = dict()
         password = "redhat"
would reformat /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py
--- /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py	2023-03-06 06:16:07.749588 +0000
@@ -1,41 +1,42 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133708')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133708")
         config = self.get_hypervisor_config()
-        hypervisor_type = config['type']
-        hypervisor_password = config['password']
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        hypervisor_type = config["type"]
+        hypervisor_password = config["password"]
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        
+
         # case steps
         logger.info(">>>step1: run virt-who without encrypted_password")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with encrypted_password")
         encrypted_value = self.vw_encrypted(hypervisor_password)
         self.vw_option_disable("password", config_file)
         self.vw_option_add("encrypted_password", encrypted_value, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
         self.vw_option_del("encrypted_password", config_file)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py	2023-03-06 05:02:18.576378 +0000
+++ /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py	2023-03-06 06:16:07.783321 +0000
@@ -2,32 +2,37 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133704')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '1.31.0':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133704")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "1.31.0":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_file = "/etc/sysconfig/virt-who"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
-        self.vw_etc_d_mode_create('virtwho-config', '/etc/virt-who.d/virtwho-config.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
+        self.vw_etc_d_mode_create(
+            "virtwho-config", "/etc/virt-who.d/virtwho-config.conf"
+        )
 
         proxy_server = "{0}:{1}".format(deploy.proxy.server, deploy.proxy.port)
         bad_proxy_server = "10.73.3.24:9999"
-        steps = {'step1':'http_proxy', 'step2':'https_proxy'}
-        error_msg = ["Connection refused|Cannot connect to proxy|Connection timed out|Unable to connect"]
+        steps = {"step1": "http_proxy", "step2": "https_proxy"}
+        error_msg = [
+            "Connection refused|Cannot connect to proxy|Connection timed out|Unable to connect"
+        ]
 
         # case steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who to check {1}".format(step, option))
             if option == "http_proxy":
                 value = "http://{0}".format(proxy_server)
                 bad_value = "http://{0}".format(bad_proxy_server)
             if option == "https_proxy":
@@ -35,12 +40,18 @@
                 bad_value = "https://{0}".format(bad_proxy_server)
             logger.info("> run virt-who with good {0}".format(option))
             self.vw_option_add(option, value, config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            s2 = self.vw_msg_search(rhsm_output, "Connection built.*{0}".format(proxy_server), exp_exist=True)
-            s3 = self.vw_msg_search(rhsm_output, "Using proxy.*{0}".format(proxy_server), exp_exist=True)
+            s2 = self.vw_msg_search(
+                rhsm_output,
+                "Connection built.*{0}".format(proxy_server),
+                exp_exist=True,
+            )
+            s3 = self.vw_msg_search(
+                rhsm_output, "Using proxy.*{0}".format(proxy_server), exp_exist=True
+            )
             results.setdefault(step, []).append(s1)
             results.setdefault(step, []).append(s2)
             results.setdefault(step, []).append(s3)
 
             logger.info("> run virt-who with bad {0}".format(option))
would reformat /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py
--- /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py	2023-03-06 06:16:07.785659 +0000
@@ -2,49 +2,54 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133712')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133712")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_type = register_config["type"]
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
 
         # case steps
-        logger.info(">>>step1: run virt-who with rhsm_username and rhsm_password good value")
+        logger.info(
+            ">>>step1: run virt-who with rhsm_username and rhsm_password good value"
+        )
         self.vw_option_add("rhsm_hostname", register_server, config_file)
         self.vw_option_add("rhsm_port", "443", config_file)
         self.vw_option_add("rhsm_prefix", register_prefix, config_file)
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_password", register_password, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
-        logger.info(">>>step2: run virt-who with rhsm_username and rhsm_encrypted_password good value")
+        logger.info(
+            ">>>step2: run virt-who with rhsm_username and rhsm_encrypted_password good value"
+        )
         encrypted_value = self.vw_encrypted(register_password)
         self.vw_option_disable("rhsm_password", config_file)
         self.vw_option_add("rhsm_encrypted_password", encrypted_value, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py	2023-03-06 06:16:07.799207 +0000
@@ -2,60 +2,67 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133710')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133710")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_type = register_config["type"]
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
 
         # case steps
         logger.info(">>>step1: run virt-who without rhsm_username and rhsm_password")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
-        logger.info(">>>step2: run virt-who with rhsm_username and rhsm_password good value")
+        logger.info(
+            ">>>step2: run virt-who with rhsm_username and rhsm_password good value"
+        )
         self.vw_option_add("rhsm_hostname", register_server, config_file)
         self.vw_option_add("rhsm_port", "443", config_file)
         self.vw_option_add("rhsm_prefix", register_prefix, config_file)
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_password", register_password, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
-        logger.info(">>>step3: run virt-who with rhsm_username and rhsm_password null value")
+        logger.info(
+            ">>>step3: run virt-who with rhsm_username and rhsm_password null value"
+        )
         self.vw_option_update_value("rhsm_username", "", config_file)
         self.vw_option_update_value("rhsm_password", "", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
-        logger.info(">>>step4: run virt-who with rhsm_username and rhsm_password disable")
+        logger.info(
+            ">>>step4: run virt-who with rhsm_username and rhsm_password disable"
+        )
         self.vw_option_disable("rhsm_username", config_file)
         self.vw_option_disable("rhsm_password", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py	2023-03-06 06:16:07.859399 +0000
@@ -2,62 +2,65 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133713')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133713")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_type = register_config["type"]
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
 
         # case steps
-        logger.info(">>>step1: run virt-who with rhsm_hostname, rhsm_port, rhsm_prefix good value")
+        logger.info(
+            ">>>step1: run virt-who with rhsm_hostname, rhsm_port, rhsm_prefix good value"
+        )
         self.vw_option_add("rhsm_hostname", register_server, config_file)
         self.vw_option_add("rhsm_port", "443", config_file)
         self.vw_option_add("rhsm_prefix", register_prefix, config_file)
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_password", register_password, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with rhsm_hostname disable")
         self.vw_option_disable("rhsm_hostname", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
         self.vw_option_enable("rhsm_hostname", config_file)
 
         logger.info(">>>step3: run virt-who with rhsm_port disable")
         self.vw_option_disable("rhsm_port", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
         self.vw_option_enable("rhsm_port", config_file)
 
         logger.info(">>>step4: run virt-who with rhsm_prefix disable")
         self.vw_option_disable("rhsm_prefix", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
         self.vw_option_enable("rhsm_prefix", config_file)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py	2023-03-06 06:16:07.872335 +0000
@@ -2,56 +2,57 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133697')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133697")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_str = '"hypervisorId": "{0}"'.format(host_uuid)
 
         # case steps
         logger.info(">>>step1: run virt-who without filter_hosts")
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
 
         logger.info(">>>step2: run virt-who with filter_hosts=[host_uuid]")
         self.vw_option_add("filter_hosts", host_uuid, filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(s1)
+        results.setdefault("step2", []).append(s1)
         s2 = self.vw_msg_search(rhsm_output, host_str, exp_exist=True)
-        results.setdefault('step2', []).append(s2)
+        results.setdefault("step2", []).append(s2)
 
         logger.info(">>>step3: run virt-who with filter_hosts=*")
         self.vw_option_update_value("filter_hosts", "*", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(s1)
+        results.setdefault("step3", []).append(s1)
         s2 = self.vw_msg_search(rhsm_output, host_str, exp_exist=True)
-        results.setdefault('step3', []).append(s2)
+        results.setdefault("step3", []).append(s2)
 
         logger.info(">>>step4: run virt-who with filter_hosts=")
         self.vw_option_update_value("filter_hosts", "", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(s1)
+        results.setdefault("step4", []).append(s1)
         s2 = self.vw_msg_search(rhsm_output, host_str, exp_exist=False)
-        results.setdefault('step4', []).append(s2)
+        results.setdefault("step4", []).append(s2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py	2023-03-06 06:16:07.906902 +0000
@@ -2,56 +2,57 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133694')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133694")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_str = '"hypervisorId": "{0}"'.format(host_uuid)
 
         # case steps
         logger.info(">>>step1: run virt-who without exclude_hosts")
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
 
         logger.info(">>>step2: run virt-who with exclude_hosts=[host_uuid]")
         self.vw_option_add("exclude_hosts", host_uuid, filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(s1)
+        results.setdefault("step2", []).append(s1)
         s2 = self.vw_msg_search(rhsm_output, host_str, exp_exist=False)
-        results.setdefault('step2', []).append(s2)
+        results.setdefault("step2", []).append(s2)
 
         logger.info(">>>step3: run virt-who with exclude_hosts=*")
         self.vw_option_update_value("exclude_hosts", "*", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(s1)
+        results.setdefault("step3", []).append(s1)
         s2 = self.vw_msg_search(rhsm_output, host_str, exp_exist=False)
-        results.setdefault('step3', []).append(s2)
+        results.setdefault("step3", []).append(s2)
 
         logger.info(">>>step4: run virt-who with exclude_hosts=")
         self.vw_option_update_value("exclude_hosts", "", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(s1)
+        results.setdefault("step4", []).append(s1)
         s2 = self.vw_msg_search(rhsm_output, host_str, exp_exist=True)
-        results.setdefault('step4', []).append(s2)
+        results.setdefault("step4", []).append(s2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py	2023-03-06 06:16:07.961456 +0000
@@ -5,109 +5,134 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133691')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133691")
+        hypervisor_type = self.get_config("hypervisor_type")
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
+        register_server = register_config["server"]
         if "libvirt-local" in hypervisor_type:
-            owner = register_config['owner']
+            owner = register_config["owner"]
             cmd = "echo -e '[{0}]\ntype=libvirt\nowner={1}' > {2}".format(
-                config_name, owner, config_file)
+                config_name, owner, config_file
+            )
             ret, output = self.runcmd(cmd, self.ssh_host())
         proxy_server = deploy.proxy.server
         proxy_port = deploy.proxy.port
         bad_proxy_server = "10.73.3.24"
         bad_proxy_port = "9999"
-        error_msg = ["Connection refused|Cannot connect to proxy|Connection timed out|Unable to connect"]
+        error_msg = [
+            "Connection refused|Cannot connect to proxy|Connection timed out|Unable to connect"
+        ]
 
         # Case Steps
         try:
-            logger.info(">>>step1: set /etc/rhsm/rhsm.conf with good proxy_hostname and proxy_port")
-            self.vw_option_update_value("proxy_hostname", proxy_server, '/etc/rhsm/rhsm.conf')
-            self.vw_option_update_value("proxy_port", proxy_port, '/etc/rhsm/rhsm.conf')
+            logger.info(
+                ">>>step1: set /etc/rhsm/rhsm.conf with good proxy_hostname and proxy_port"
+            )
+            self.vw_option_update_value(
+                "proxy_hostname", proxy_server, "/etc/rhsm/rhsm.conf"
+            )
+            self.vw_option_update_value("proxy_port", proxy_port, "/etc/rhsm/rhsm.conf")
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step1', []).append(s1)
-            s2 = self.vw_msg_search(rhsm_output, "Connection built.*{0}".format(proxy_server))
-            results.setdefault('step1', []).append(s2)
-            s3 = self.vw_msg_search(rhsm_output, "Using proxy.*{0}".format(proxy_server))
-            results.setdefault('step1', []).append(s3)
+            results.setdefault("step1", []).append(s1)
+            s2 = self.vw_msg_search(
+                rhsm_output, "Connection built.*{0}".format(proxy_server)
+            )
+            results.setdefault("step1", []).append(s2)
+            s3 = self.vw_msg_search(
+                rhsm_output, "Using proxy.*{0}".format(proxy_server)
+            )
+            results.setdefault("step1", []).append(s3)
 
             logger.info(">>>step2: set wrong proxy in /etc/rhsm/rhsm.conf")
-            self.vw_option_update_value("proxy_hostname", bad_proxy_server, '/etc/rhsm/rhsm.conf')
-            self.vw_option_update_value("proxy_port", bad_proxy_port, '/etc/rhsm/rhsm.conf')
+            self.vw_option_update_value(
+                "proxy_hostname", bad_proxy_server, "/etc/rhsm/rhsm.conf"
+            )
+            self.vw_option_update_value(
+                "proxy_port", bad_proxy_port, "/etc/rhsm/rhsm.conf"
+            )
             data, tty_output, rhsm_output = self.vw_start()
-            s1 = self.op_normal_value(data, exp_error='1|2', exp_thread=1, exp_send=0)
+            s1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             s2 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
-            results.setdefault('step2', []).append(s1)
-            results.setdefault('step2', []).append(s2)
+            results.setdefault("step2", []).append(s1)
+            results.setdefault("step2", []).append(s2)
 
-            logger.info(">>>step3: set no_proxy=[register_server] in /etc/rhsm/rhsm.conf")
-            self.vw_option_update_value("no_proxy", register_server, '/etc/rhsm/rhsm.conf')
+            logger.info(
+                ">>>step3: set no_proxy=[register_server] in /etc/rhsm/rhsm.conf"
+            )
+            self.vw_option_update_value(
+                "no_proxy", register_server, "/etc/rhsm/rhsm.conf"
+            )
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step3', []).append(s1)
+            results.setdefault("step3", []).append(s1)
 
             logger.info(">>>step4: set no_proxy=* in /etc/rhsm/rhsm.conf")
-            self.vw_option_update_value("no_proxy", '*', '/etc/rhsm/rhsm.conf')
+            self.vw_option_update_value("no_proxy", "*", "/etc/rhsm/rhsm.conf")
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(s1)
-            self.vw_option_update_value("no_proxy", '', '/etc/rhsm/rhsm.conf')
+            results.setdefault("step4", []).append(s1)
+            self.vw_option_update_value("no_proxy", "", "/etc/rhsm/rhsm.conf")
 
-            logger.info(">>>step5: set rhsm_no_proxy=[register_server] in /etc/virt-who.conf")
-            self.vw_option_enable('[defaults]', '/etc/virt-who.conf')
-            self.vw_option_enable('rhsm_no_proxy', '/etc/virt-who.conf')
-            self.vw_option_update_value('rhsm_no_proxy', register_server, '/etc/virt-who.conf')
+            logger.info(
+                ">>>step5: set rhsm_no_proxy=[register_server] in /etc/virt-who.conf"
+            )
+            self.vw_option_enable("[defaults]", "/etc/virt-who.conf")
+            self.vw_option_enable("rhsm_no_proxy", "/etc/virt-who.conf")
+            self.vw_option_update_value(
+                "rhsm_no_proxy", register_server, "/etc/virt-who.conf"
+            )
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(s1)
+            results.setdefault("step5", []).append(s1)
 
             logger.info(">>>step6: set rhsm_no_proxy=* in /etc/virt-who.conf")
-            self.vw_option_update_value('rhsm_no_proxy', '*', '/etc/virt-who.conf')
+            self.vw_option_update_value("rhsm_no_proxy", "*", "/etc/virt-who.conf")
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step6', []).append(s1)
-            self.vw_option_disable('rhsm_no_proxy', '/etc/virt-who.conf')
+            results.setdefault("step6", []).append(s1)
+            self.vw_option_disable("rhsm_no_proxy", "/etc/virt-who.conf")
 
-            if hypervisor_type not in ('libvirt-local', 'vdsm'):
+            if hypervisor_type not in ("libvirt-local", "vdsm"):
                 # frequently start virt-who will get 429 error, sleep 15s to fix
                 time.sleep(15)
-                logger.info(">>>step7: set rhsm_no_proxy=[register_server] in /etc/virt-who.d/x.conf")
-                self.vw_option_add('rhsm_no_proxy', register_server, config_file)
+                logger.info(
+                    ">>>step7: set rhsm_no_proxy=[register_server] in /etc/virt-who.d/x.conf"
+                )
+                self.vw_option_add("rhsm_no_proxy", register_server, config_file)
                 data, tty_output, rhsm_output = self.vw_start()
                 s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                results.setdefault('step7', []).append(s1)
+                results.setdefault("step7", []).append(s1)
 
                 time.sleep(15)
                 logger.info(">>>step8: set rhsm_no_proxy=* in /etc/virt-who.d/x.conf")
-                self.vw_option_update_value('rhsm_no_proxy', '*', config_file)
+                self.vw_option_update_value("rhsm_no_proxy", "*", config_file)
                 data, tty_output, rhsm_output = self.vw_start()
                 s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                results.setdefault('step8', []).append(s1)
-                self.vw_option_del('rhsm_no_proxy', config_file)
+                results.setdefault("step8", []).append(s1)
+                self.vw_option_del("rhsm_no_proxy", config_file)
             else:
-                logger.info('Skip step7 and step8 for {0}'.format(hypervisor_type))
+                logger.info("Skip step7 and step8 for {0}".format(hypervisor_type))
         except:
-            results.setdefault('step except', []).append(False)
+            results.setdefault("step except", []).append(False)
             pass
 
         finally:
-            self.vw_option_update_value('proxy_hostname', '', '/etc/rhsm/rhsm.conf')
-            self.vw_option_update_value('proxy_port', '', '/etc/rhsm/rhsm.conf')
-            self.vw_option_update_value('no_proxy', '', "/etc/rhsm/rhsm.conf")
+            self.vw_option_update_value("proxy_hostname", "", "/etc/rhsm/rhsm.conf")
+            self.vw_option_update_value("proxy_port", "", "/etc/rhsm/rhsm.conf")
+            self.vw_option_update_value("no_proxy", "", "/etc/rhsm/rhsm.conf")
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py
--- /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py	2023-03-06 06:16:07.976144 +0000
@@ -2,53 +2,63 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133702')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133702")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "esx" not in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
 
         # case steps
-        logger.info(">>>step1: run virt-who with filter_host_parents='' to get domain_id")
+        logger.info(
+            ">>>step1: run virt-who with filter_host_parents='' to get domain_id"
+        )
         self.vw_option_add("filter_host_parents", "", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step1', []).append(s2)
-        domain_id = re.findall(r"Skipping host '{0}' because its parent '(.*?)'".format(host_hwuuid), rhsm_output)[-1]
-        logger.info("Succeeded to find: {0}:{1}:{2}".format(host_hwuuid, domain_id, host_uuid))
+        results.setdefault("step1", []).append(s2)
+        domain_id = re.findall(
+            r"Skipping host '{0}' because its parent '(.*?)'".format(host_hwuuid),
+            rhsm_output,
+        )[-1]
+        logger.info(
+            "Succeeded to find: {0}:{1}:{2}".format(host_hwuuid, domain_id, host_uuid)
+        )
 
         logger.info(">>>step2: run virt-who with filter_host_parents=[domain_id]")
-        self.vw_option_update_value("filter_host_parents", domain_id, filename=config_file)
+        self.vw_option_update_value(
+            "filter_host_parents", domain_id, filename=config_file
+        )
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(s1)
+        results.setdefault("step2", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step2', []).append(s2)
+        results.setdefault("step2", []).append(s2)
 
         logger.info(">>>step3: run virt-who with filter_host_parents=*")
         self.vw_option_update_value("filter_host_parents", "*", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(s1)
+        results.setdefault("step3", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step3', []).append(s2)
+        results.setdefault("step3", []).append(s2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py	2023-03-06 06:16:07.979302 +0000
@@ -2,54 +2,62 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133700')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133700")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "esx" not in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
 
         # case steps
-        logger.info(">>>step1: run virt-who with exlude_host_parents=* to get domain_id")
+        logger.info(
+            ">>>step1: run virt-who with exlude_host_parents=* to get domain_id"
+        )
         self.vw_option_add("exclude_host_parents", "*", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step1', []).append(s2)
-        domain_id = re.findall(r"Skipping host '{0}' because its parent '(.*?)'".format(host_hwuuid), rhsm_output)[-1]
-        logger.info("Succeeded to find: {0}:{1}:{2}".format(host_hwuuid, domain_id, host_uuid))
+        results.setdefault("step1", []).append(s2)
+        domain_id = re.findall(
+            r"Skipping host '{0}' because its parent '(.*?)'".format(host_hwuuid),
+            rhsm_output,
+        )[-1]
+        logger.info(
+            "Succeeded to find: {0}:{1}:{2}".format(host_hwuuid, domain_id, host_uuid)
+        )
         self.vw_option_del("filter_host_parents", filename=config_file)
 
         logger.info(">>>step2: run virt-who with exclude_host_parents=[domain_id]")
         self.vw_option_add("exclude_host_parents", domain_id, filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(s1)
+        results.setdefault("step2", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step2', []).append(s2)
+        results.setdefault("step2", []).append(s2)
 
         logger.info(">>>step3: run virt-who with exclude_host_parents=")
         self.vw_option_update_value("exclude_host_parents", "", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(s1)
+        results.setdefault("step4", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step4', []).append(s2)
+        results.setdefault("step4", []).append(s2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py	2023-03-06 06:16:08.055129 +0000
@@ -2,64 +2,71 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133707')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133707")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
 
         # case steps
         logger.info(">>>step1: run virt-who without filter_hosts and exclude_hosts")
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
 
-        logger.info(">>>step2: run virt-who with filter_hosts=[host_uuid] and exclude_hosts=[host_uuid]")
+        logger.info(
+            ">>>step2: run virt-who with filter_hosts=[host_uuid] and exclude_hosts=[host_uuid]"
+        )
         self.vw_option_add("filter_hosts", host_uuid, filename=config_file)
         self.vw_option_add("exclude_hosts", host_uuid, filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(s1)
+        results.setdefault("step2", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step2', []).append(s2)
+        results.setdefault("step2", []).append(s2)
         self.vw_option_del("filter_hosts", filename=config_file)
         self.vw_option_del("exclude_hosts", filename=config_file)
 
-        logger.info(">>>step3: run virt-who with filter_hosts=* and exclude_hosts=[host_uuid]")
+        logger.info(
+            ">>>step3: run virt-who with filter_hosts=* and exclude_hosts=[host_uuid]"
+        )
         self.vw_option_add("filter_hosts", "*", filename=config_file)
         self.vw_option_add("exclude_hosts", host_uuid, filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(s1)
+        results.setdefault("step3", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step3', []).append(s2)
+        results.setdefault("step3", []).append(s2)
         self.vw_option_del("filter_hosts", filename=config_file)
         self.vw_option_del("exclude_hosts", filename=config_file)
 
-        logger.info(">>>step4: run virt-who with exclude_hosts= and filter_hosts=[host_uuid]")
+        logger.info(
+            ">>>step4: run virt-who with exclude_hosts= and filter_hosts=[host_uuid]"
+        )
         self.vw_option_add("exclude_hosts", "", filename=config_file)
         self.vw_option_add("filter_hosts", host_uuid, filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(s1)
+        results.setdefault("step4", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step4', []).append(s2)
+        results.setdefault("step4", []).append(s2)
         self.vw_option_del("exclude_hosts", filename=config_file)
         self.vw_option_del("filter_hosts", filename=config_file)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py	2023-03-06 06:16:08.064449 +0000
@@ -2,44 +2,45 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133705')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133705")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "esx" not in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
 
         # case steps
         logger.info(">>>step1: run virt-who with without simplified_vim option")
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
 
         logger.info(">>>step2: run virt-who with simplified_vim=true")
         self.vw_option_add("simplified_vim", "true", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(s1)
+        results.setdefault("step2", []).append(s1)
 
         logger.info(">>>step3: run virt-who with simplified_vim=false")
         self.vw_option_update_value("simplified_vim", "false", filename=config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(s1)
+        results.setdefault("step3", []).append(s1)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.577378 +0000
+++ /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py	2023-03-06 06:16:08.090998 +0000
@@ -2,40 +2,43 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133705')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133705")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
         host_name = self.get_hypervisor_hostname()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
         if "esx" in hypervisor_type or "rhevm" in hypervisor_type:
-            steps = {'step1':'uuid', 'step2':'hostname', 'step3':'hwuuid'}
+            steps = {"step1": "uuid", "step2": "hostname", "step3": "hwuuid"}
         else:
-            steps = {'step1':'uuid', 'step2':'hostname'}
+            steps = {"step1": "uuid", "step2": "hostname"}
 
         # case steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: run virt-who with hypervisor_id={1}".format(step, option))
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: run virt-who with hypervisor_id={1}".format(step, option)
+            )
             self.vw_option_add("hypervisor_id", option, filename=config_file)
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(s1)
             if option == "hwuuid":
@@ -51,24 +54,37 @@
                 logger.info("Succeeded to search hypervisorId:{0}".format(hypervisorId))
                 results.setdefault(step, []).append(True)
             else:
                 logger.error("Failed to search hypervisorId:{0}".format(hypervisorId))
                 results.setdefault(step, []).append(False)
-            if 'satellite' in register_type:
-                host_display = self.satellite_hosts_get(self.ssh_host(), register_config,
-                                        host_name, host_uuid, host_hwuuid, desc="get host display name")
-                host_display_name = host_display['name']
+            if "satellite" in register_type:
+                host_display = self.satellite_hosts_get(
+                    self.ssh_host(),
+                    register_config,
+                    host_name,
+                    host_uuid,
+                    host_hwuuid,
+                    desc="get host display name",
+                )
+                host_display_name = host_display["name"]
             else:
                 hypervisor_display = host_name
-                host_display = self.stage_consumer_get(self.ssh_host(), register_config,
-                                        host_name, host_uuid)
-                host_display_name = host_display['name']
+                host_display = self.stage_consumer_get(
+                    self.ssh_host(), register_config, host_name, host_uuid
+                )
+                host_display_name = host_display["name"]
             if hypervisor_display or hypervisor_display.lower() in host_display_name:
-                logger.info("Succeeded to search hypervisorDisplay:{0}".format(hypervisor_display))
+                logger.info(
+                    "Succeeded to search hypervisorDisplay:{0}".format(
+                        hypervisor_display
+                    )
+                )
                 results.setdefault(step, []).append(True)
             else:
-                logger.error("Failed to search hypervisorDisplay:{0}".format(hypervisor_display))
+                logger.error(
+                    "Failed to search hypervisorDisplay:{0}".format(hypervisor_display)
+                )
                 results.setdefault(step, []).append(False)
             self.vw_option_del("hypervisor_id", filename=config_file)
             self.vw_web_host_delete(host_name, hypervisorId)
         if "stage" in register_type:
             self.stage_consumer_clean(self.ssh_host(), register_config)
would reformat /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py	2023-03-06 06:16:08.127788 +0000
@@ -2,13 +2,14 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133682')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133682")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
@@ -18,14 +19,14 @@
 
         # case steps
         logger.info(">>>step1: enable global header in /etc/virt-who.conf")
         self.vw_option_enable("[global]", filename=virtwho_conf)
         self.vw_option_enable("debug", filename=virtwho_conf)
-        self.vw_option_update_value("debug", 'True', filename=virtwho_conf)
+        self.vw_option_update_value("debug", "True", filename=virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py	2023-03-06 06:16:08.129453 +0000
@@ -2,40 +2,45 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133709')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133709")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
         host_name = self.get_hypervisor_hostname()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
         if "esx" in hypervisor_type or "rhevm" in hypervisor_type:
-            steps = {'step1':'uuid', 'step2':'hostname', 'step3':'hwuuid'}
+            steps = {"step1": "uuid", "step2": "hostname", "step3": "hwuuid"}
         else:
-            steps = {'step1':'uuid', 'step2':'hostname'}
+            steps = {"step1": "uuid", "step2": "hostname"}
 
         # case steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: run virt-who to with hypervisor_id={1} and set filter_hosts".format(step, option))
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: run virt-who to with hypervisor_id={1} and set filter_hosts".format(
+                    step, option
+                )
+            )
             self.vw_option_add("hypervisor_id", option, filename=config_file)
             if option == "hwuuid":
                 hypervisorId = host_hwuuid
             elif option == "hostname":
                 hypervisorId = host_name
@@ -43,16 +48,24 @@
                 hypervisorId = host_uuid
             self.vw_option_add("filter_hosts", hypervisorId, filename=config_file)
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(s1)
-            hypervisor_num = data[register_owner]['hypervisor_num']
+            hypervisor_num = data[register_owner]["hypervisor_num"]
             if hypervisorId in data[register_owner].keys() and hypervisor_num == 1:
-                logger.info("Succeeded to search, {0} hypervisorId({1}) found".format(hypervisor_num, hypervisorId))
+                logger.info(
+                    "Succeeded to search, {0} hypervisorId({1}) found".format(
+                        hypervisor_num, hypervisorId
+                    )
+                )
                 results.setdefault(step, []).append(True)
             else:
-                logger.error("Failed to search, {0} hypervisorId({1}) found".format(hypervisor_num, hypervisorId))
+                logger.error(
+                    "Failed to search, {0} hypervisorId({1}) found".format(
+                        hypervisor_num, hypervisorId
+                    )
+                )
                 results.setdefault(step, []).append(False)
             self.vw_option_del("hypervisor_id", filename=config_file)
             self.vw_option_del("filter_hosts", filename=config_file)
             self.vw_web_host_delete(host_name, hypervisorId)
         if "stage" in register_type:
would reformat /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py	2023-03-06 06:16:08.146498 +0000
@@ -2,40 +2,45 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133714')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133714")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
         host_name = self.get_hypervisor_hostname()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
         if "esx" in hypervisor_type or "rhevm" in hypervisor_type:
-            steps = {'step1':'uuid', 'step2':'hostname', 'step3':'hwuuid'}
+            steps = {"step1": "uuid", "step2": "hostname", "step3": "hwuuid"}
         else:
-            steps = {'step1':'uuid', 'step2':'hostname'}
+            steps = {"step1": "uuid", "step2": "hostname"}
 
         # case steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: run virt-who to with hypervisor_id={1} and set exclude_hosts".format(step, option))
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: run virt-who to with hypervisor_id={1} and set exclude_hosts".format(
+                    step, option
+                )
+            )
             self.vw_option_add("hypervisor_id", option, filename=config_file)
             if option == "hwuuid":
                 hypervisorId = host_hwuuid
             elif option == "hostname":
                 hypervisorId = host_name
would reformat /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.213966 +0000
@@ -2,42 +2,61 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133685')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133685")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: enable interval and set to 10 in /etc/virt-who.conf")
         self.vw_option_enable("interval", virtwho_conf)
-        self.vw_option_update_value("interval", '10', virtwho_conf)
+        self.vw_option_update_value("interval", "10", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600)
-        results.setdefault('step1', []).append(res)
+        res = self.op_normal_value(
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600
+        )
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: enable interval and set to 60 in /etc/virt-who.conf")
-        self.vw_option_update_value("interval", '60', virtwho_conf)
+        self.vw_option_update_value("interval", "60", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60, exp_loopnum=1, exp_looptime=60)
-        results.setdefault('step2', []).append(res)
+        res = self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=60,
+            exp_loopnum=1,
+            exp_looptime=60,
+        )
+        results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: enable interval and set to 120 in /etc/virt-who.conf")
-        self.vw_option_update_value("interval", '120', virtwho_conf)
+        self.vw_option_update_value("interval", "120", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=120, exp_loopnum=1, exp_looptime=120)
-        results.setdefault('step3', []).append(res)
+        res = self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=120,
+            exp_loopnum=1,
+            exp_looptime=120,
+        )
+        results.setdefault("step3", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.241479 +0000
@@ -2,46 +2,51 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133687')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133687")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info('>>>step1: Run virt-who with "debug=True"')
         self.vw_option_enable("debug", virtwho_conf)
-        self.vw_option_update_value("debug", 'True', virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         logger.info('>>>step2: Run virt-who with "debug=False"')
-        self.vw_option_update_value("debug", 'False', virtwho_conf)
+        self.vw_option_update_value("debug", "False", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        res2 = self.vw_msg_search(
+            output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False
+        )
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
-        logger.info('>>>step3: Run virt-who with debug option disabled')
+        logger.info(">>>step3: Run virt-who with debug option disabled")
         self.vw_option_disable("debug", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        res2 = self.vw_msg_search(
+            output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=False
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.289139 +0000
@@ -2,41 +2,52 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133684')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133684")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         default_reporter_id = self.get_hostname(self.ssh_host())
         expected_reporter_id = "virtwho_reporter_id_tc1057"
-        steps = {'step1':default_reporter_id, 'step2':expected_reporter_id}
+        steps = {"step1": default_reporter_id, "step2": expected_reporter_id}
 
         # case steps
-        for step, value in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: run virt-who to check reporter_id({1})".format(step, value))
+        for step, value in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: run virt-who to check reporter_id({1})".format(step, value)
+            )
             if step == "step2":
                 self.vw_option_enable("reporter_id", virtwho_conf)
                 self.vw_option_update_value("reporter_id", value, virtwho_conf)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(res)
-            if value in data['reporter_id']:
-                logger.info("Succeeded to check, reporter_id({0}) is expected".format(data['reporter_id']))
+            if value in data["reporter_id"]:
+                logger.info(
+                    "Succeeded to check, reporter_id({0}) is expected".format(
+                        data["reporter_id"]
+                    )
+                )
                 results.setdefault(step, []).append(True)
             else:
-                logger.info("Failed to check, reporter_id({0}) is not expected".format(data['reporter_id']))
+                logger.info(
+                    "Failed to check, reporter_id({0}) is not expected".format(
+                        data["reporter_id"]
+                    )
+                )
                 results.setdefault(step, []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.302224 +0000
@@ -2,42 +2,43 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133686')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133686")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info('>>>step1: Run virt-who with "onestho=True"')
         self.vw_option_enable("oneshot", virtwho_conf)
-        self.vw_option_update_value("oneshot", 'True', virtwho_conf)
+        self.vw_option_update_value("oneshot", "True", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, oneshot=True)
         res = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info('>>>step2: Run virt-who with "oneshot=False"')
-        self.vw_option_update_value("oneshot", 'False', virtwho_conf)
+        self.vw_option_update_value("oneshot", "False", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, oneshot=False)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         logger.info('>>>step3: Run virt-who with "oneshot" disabled')
         self.vw_option_disable("oneshot", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, oneshot=False)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.308630 +0000
@@ -2,21 +2,22 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133688')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133688")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         log_dir = "/var/log/rhsm/virtwho/"
@@ -26,20 +27,20 @@
         logger.info(">>>step1: Run virt-who with log-dir setting in /etc/virt-who.conf")
         self.vw_option_enable("log_dir", virtwho_conf)
         self.vw_option_update_value("log_dir", log_dir, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
         ret, output = self.runcmd("ls {0}".format(log_file), self.ssh_host())
         if ret == 0:
             logger.info("Succeeded to find file: {0}".format(log_file))
             ret, output = self.runcmd("cat {0}".format(log_file), self.ssh_host())
             d1 = self.vw_msg_search(output, guest_uuid, exp_exist=True)
             d2 = self.vw_msg_search(output, "ERROR", exp_exist=False)
             if d1 is False or d2 is False:
-                results.setdefault('step1', []).append(False)
+                results.setdefault("step1", []).append(False)
         else:
             logger.error("{0} is not exist".format(log_file))
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.363941 +0000
@@ -2,24 +2,25 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133690')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133690")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/tmp/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
 
@@ -28,10 +29,10 @@
         self.vw_option_enable("configs", virtwho_conf)
         self.vw_option_update_value("configs", config_file, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.401887 +0000
@@ -2,21 +2,22 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133693')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133693")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         log_dir = "/var/log/rhsm/virtwho/"
@@ -28,20 +29,20 @@
         self.vw_option_enable("log_file", virtwho_conf)
         self.vw_option_update_value("log_dir", log_dir, virtwho_conf)
         self.vw_option_update_value("log_file", log_file, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
         ret, output = self.runcmd("ls {0}".format(log_file), self.ssh_host())
         if ret == 0:
             logger.info("Succeeded to find file: {0}".format(log_file))
             ret, output = self.runcmd("cat {0}".format(log_file), self.ssh_host())
             d1 = self.vw_msg_search(output, guest_uuid, exp_exist=True)
             d2 = self.vw_msg_search(output, "ERROR", exp_exist=False)
             if d1 is False or d2 is False:
-                results.setdefault('step1', []).append(False)
+                results.setdefault("step1", []).append(False)
         else:
             logger.error("{0} is not exist".format(log_file))
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py	2023-03-06 06:16:08.416999 +0000
@@ -2,21 +2,22 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133692')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133692")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
 
@@ -24,10 +25,10 @@
         logger.info(">>>step1: Enable [defaults] header in /etc/virt-who.conf")
         self.vw_option_enable("[defaults]", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.423606 +0000
@@ -2,85 +2,94 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133689')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133689")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
 
         # case steps
-        logger.info(">>>step1: Run virt-who with log-per-config=False in /etc/virt-who.conf")
+        logger.info(
+            ">>>step1: Run virt-who with log-per-config=False in /etc/virt-who.conf"
+        )
         self.vw_option_enable("log_per_config", virtwho_conf)
-        self.vw_option_update_value("log_per_config", 'False', virtwho_conf)
+        self.vw_option_update_value("log_per_config", "False", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
-        ret, output = self.runcmd('ls /var/log/rhsm/virtwho*', self.ssh_host())
+        results.setdefault("step1", []).append(res)
+        ret, output = self.runcmd("ls /var/log/rhsm/virtwho*", self.ssh_host())
         if ret == 0:
-            logger.error("Failed to search, unexpected /var/log/rhsm/virtwho* files exist")
-            results.setdefault('step1', []).append(False)
+            logger.error(
+                "Failed to search, unexpected /var/log/rhsm/virtwho* files exist"
+            )
+            results.setdefault("step1", []).append(False)
         else:
-            logger.info("Succeeded to search, unexpected /var/log/rhsm/virtwho* files not exist")
-            results.setdefault('step1', []).append(True)
+            logger.info(
+                "Succeeded to search, unexpected /var/log/rhsm/virtwho* files not exist"
+            )
+            results.setdefault("step1", []).append(True)
 
-        logger.info(">>>step2: Run virt-who with log-per-config=True in /etc/virt-who.conf")
-        self.vw_option_update_value("log_per_config", 'True', virtwho_conf)
+        logger.info(
+            ">>>step2: Run virt-who with log-per-config=True in /etc/virt-who.conf"
+        )
+        self.vw_option_update_value("log_per_config", "True", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
-        ret, output = self.runcmd('ls /var/log/rhsm/virtwho*', self.ssh_host())
+        results.setdefault("step2", []).append(res)
+        ret, output = self.runcmd("ls /var/log/rhsm/virtwho*", self.ssh_host())
         if ret != 0 or output is None:
             logger.error("Failed to find /var/log/rhsm/virtwho* files")
-            results.setdefault('step2', []).append(False)
-        files = output.split('\n')
+            results.setdefault("step2", []).append(False)
+        files = output.split("\n")
         if any("destination" in fd for fd in files):
             logger.info("Succeeded to find virtwho.destination file")
         else:
             logger.error("Failed to find virtwho.destination file")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
         if any("main" in fd for fd in files):
             logger.info("Succeeded to find virtwho.main file")
         else:
             logger.error("Failed to find virtwho.main file")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
         if any("rhsm_log" in fd for fd in files):
             logger.info("Succeeded to find virtwho.rhsm_log file")
         else:
             logger.error("Failed to find virtwho.rhsm_log file")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
         for fd in files:
             fd = fd.strip()
             ret, output = self.runcmd("cat {0}".format(fd), self.ssh_host())
             if "destination" in fd:
                 d1 = self.vw_msg_search(output, guest_uuid, exp_exist=True)
                 d2 = self.vw_msg_search(output, "ERROR", exp_exist=False)
                 if d1 is False or d2 is False:
                     logger.error("Failed to validate virtwho.destination file")
-                    results.setdefault('step2', []).append(False)
+                    results.setdefault("step2", []).append(False)
             if "main" in fd:
                 m1 = self.vw_msg_search(output, "Report for config", exp_exist=True)
                 m2 = self.vw_msg_search(output, "ERROR", exp_exist=False)
                 if m1 is False or m2 is False:
                     logger.error("Failed to validate virtwho.main file")
-                    results.setdefault('step2', []).append(False)
+                    results.setdefault("step2", []).append(False)
             if "rhsm_log" in fd:
                 r1 = self.vw_msg_search(output, "Using reporter_id=", exp_exist=True)
                 r2 = self.vw_msg_search(output, "ERROR", exp_exist=False)
                 if r1 is False or r2 is False:
                     logger.error("Failed to validate virtwho.rhsm_log file")
-                    results.setdefault('step2', []).append(False)
+                    results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.433350 +0000
@@ -2,36 +2,37 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133698')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133698")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         register_config = self.get_register_config()
-        register_owner = register_config['owner']
+        register_owner = register_config["owner"]
 
         # case steps
         logger.info(">>>step1: Run virt-who with owner setting in /etc/virt-who.conf")
         self.vw_option_enable("[defaults]", virtwho_conf)
         self.vw_option_enable("owner", virtwho_conf)
         self.vw_option_update_value("owner", register_owner, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py	2023-03-06 06:16:08.490758 +0000
@@ -2,21 +2,22 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133681')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133681")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         host_uuid = self.get_hypervisor_hostuuid()
         guest_uuid = self.get_hypervisor_guestuuid()
         json_file = "/tmp/fake.json"
         conf_file = "/etc/virt-who.d/fake.conf"
 
@@ -32,10 +33,10 @@
 
         logger.info(">>>step2: run virt-who with fake conf")
         data, tty_output, rhsm_output = self.vw_start(cli="virt-who -d")
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.495621 +0000
@@ -2,43 +2,48 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133703')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133703")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
         self.vw_option_enable("[defaults]", virtwho_conf)
         self.vw_option_enable("hypervisor_id", virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
         host_name = self.get_hypervisor_hostname()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
         if "esx" in hypervisor_type or "rhevm" in hypervisor_type:
-            steps = {'step1':'uuid', 'step2':'hostname', 'step3':'hwuuid'}
+            steps = {"step1": "uuid", "step2": "hostname", "step3": "hwuuid"}
         else:
-            steps = {'step1':'uuid', 'step2':'hostname'}
+            steps = {"step1": "uuid", "step2": "hostname"}
 
         # Case Steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: Run virt-who with hypervisor_id={1} in /etc/virt-who.conf".format(step, option))
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: Run virt-who with hypervisor_id={1} in /etc/virt-who.conf".format(
+                    step, option
+                )
+            )
             self.vw_option_update_value("hypervisor_id", option, virtwho_conf)
             data, tty_output, rhsm_output = self.vw_start()
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(res)
             if option == "hwuuid":
would reformat /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.578378 +0000
+++ /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py	2023-03-06 06:16:08.503690 +0000
@@ -2,49 +2,52 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133695')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.24.6':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133695")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.24.6":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         register_config = self.get_register_config()
-        register_owner = register_config['owner']
-        register_env = register_config['env']
+        register_owner = register_config["owner"]
+        register_env = register_config["env"]
 
         # case steps
         logger.info(">>>step1: Run virt-who with env setting in /etc/virt-who.conf")
         self.vw_option_enable("[defaults]", virtwho_conf)
         self.vw_option_enable("env", virtwho_conf)
         self.vw_option_update_value("env", register_env, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
-        logger.info(">>>step2: Run virt-who with owner and env setting in /etc/virt-who.conf")
+        logger.info(
+            ">>>step2: Run virt-who with owner and env setting in /etc/virt-who.conf"
+        )
         self.vw_option_enable("owner", virtwho_conf)
         self.vw_option_update_value("owner", register_owner, virtwho_conf)
         self.vw_option_update_value("env", register_env, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py	2023-03-06 06:16:08.528393 +0000
@@ -2,21 +2,22 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133680')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133680")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         guest_name = self.get_hostname(self.ssh_guest())
         guest_uuid = self.get_hypervisor_guestuuid()
         json_file = "/tmp/fake.json"
@@ -34,23 +35,23 @@
 
         logger.info(">>>step2: run virt-who with fake conf")
         data, tty_output, rhsm_output = self.vw_start(cli="virt-who -d")
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), "RH00002", "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step4: attach bonus sku for guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), "RH00050", "virtual")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
-        res = self.vw_msg_search(output, 'RH00050', exp_exist=True)
-        results.setdefault('step4', []).append(res)
+        res = self.vw_msg_search(output, "RH00050", exp_exist=True)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py	2023-03-06 06:16:08.571983 +0000
@@ -5,40 +5,46 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133683')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133683")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         register_config = self.get_register_config()
-        register_owner = register_config['owner']
+        register_owner = register_config["owner"]
 
         # case steps
         logger.info(">>>step1: Run virt-who service to check the rhsm.log")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
         if register_owner in data.keys() and guest_uuid in data[register_owner].keys():
-            logger.info("Succeeded to check, mapping info is specified to {0}".format(
-                register_owner))
-            results.setdefault('step1', []).append(True)
+            logger.info(
+                "Succeeded to check, mapping info is specified to {0}".format(
+                    register_owner
+                )
+            )
+            results.setdefault("step1", []).append(True)
         else:
-            logger.error("Failed to check, mapping info is not specified to {0}".format(
-                register_owner))
-            results.setdefault('step1', []).append(False)
+            logger.error(
+                "Failed to check, mapping info is not specified to {0}".format(
+                    register_owner
+                )
+            )
+            results.setdefault("step1", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py
--- /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py	2023-03-06 06:16:08.589046 +0000
@@ -2,59 +2,73 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133747')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133747")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
+        register_type = register_config["type"]
 
         # case steps
         logger.info(">>>step1: Run virt-who servie when virt-who host is registered")
         self.vw_thread_clean()
         ret, output = self.run_service(self.ssh_host(), "virt-who", "start")
         time.sleep(30)
         status = self.vw_service_status()
         thread_num = self.vw_callback_thread_num()
         error_num, error_list = self.vw_callback_error_num()
-        results.setdefault('step1', []).append(error_num == 0)
-        results.setdefault('step1', []).append(thread_num == 1)
-        results.setdefault('step1', []).append(status == "running")
-        logger.info("error_num: {0}, thread_num: {1}, status: {2}".format(error_num, thread_num, status))
+        results.setdefault("step1", []).append(error_num == 0)
+        results.setdefault("step1", []).append(thread_num == 1)
+        results.setdefault("step1", []).append(status == "running")
+        logger.info(
+            "error_num: {0}, thread_num: {1}, status: {2}".format(
+                error_num, thread_num, status
+            )
+        )
 
         logger.info(">>>step2: Run virt-who servie when virt-who host is un_registered")
-        ret, output = self.runcmd('subscription-manager unregister', self.ssh_host())
+        ret, output = self.runcmd("subscription-manager unregister", self.ssh_host())
         logger.info("Succeeded to unregister host")
         time.sleep(15)
         status = self.vw_service_status()
         thread_num = self.vw_callback_thread_num()
         error_num, error_list = self.vw_callback_error_num()
-        results.setdefault('step2', []).append(error_num != 0)
-        results.setdefault('step2', []).append(thread_num == 1)
-        results.setdefault('step2', []).append(status == "running")
-        logger.info("error_num: {0}, thread_num: {1}, status: {2}".format(error_num, thread_num, status))
-        ret, rhsm_output = self.runcmd('cat /var/log/rhsm/rhsm.log', self.ssh_host())
-        res = self.vw_msg_search(rhsm_output, 'system is not registered', exp_exist=True)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(error_num != 0)
+        results.setdefault("step2", []).append(thread_num == 1)
+        results.setdefault("step2", []).append(status == "running")
+        logger.info(
+            "error_num: {0}, thread_num: {1}, status: {2}".format(
+                error_num, thread_num, status
+            )
+        )
+        ret, rhsm_output = self.runcmd("cat /var/log/rhsm/rhsm.log", self.ssh_host())
+        res = self.vw_msg_search(
+            rhsm_output, "system is not registered", exp_exist=True
+        )
+        results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: Run virt-who servie when virt-who host is re_registered")
-        if self.system_isregister(self.ssh_host(), register_type, register_config) is False:
+        if (
+            self.system_isregister(self.ssh_host(), register_type, register_config)
+            is False
+        ):
             self.system_register(self.ssh_host(), register_type, register_config)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py
--- /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py	2023-03-06 06:16:08.574260 +0000
@@ -2,21 +2,22 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133744')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133744")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         guest_name = self.get_hostname(self.ssh_guest())
         guest_uuid = self.get_hypervisor_guestuuid()
         json_file = "/tmp/fake.json"
@@ -34,29 +35,31 @@
 
         logger.info(">>>step2: run virt-who with fake conf")
         data, tty_output, rhsm_output = self.vw_start(cli="virt-who -d")
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), "RH00002", "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step4: attach bonus sku for guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), "RH00050", "virtual")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
-        res = self.vw_msg_search(output, 'RH00050', exp_exist=True)
-        results.setdefault('step4', []).append(res)
+        res = self.vw_msg_search(output, "RH00050", exp_exist=True)
+        results.setdefault("step4", []).append(res)
 
-        logger.info(">>>step5: unregister host/hypervisor, check consumed bonus is removed")
+        logger.info(
+            ">>>step5: unregister host/hypervisor, check consumed bonus is removed"
+        )
         self.vw_web_host_delete(host_name, host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
-        res = self.vw_msg_search(output, 'RH00050', exp_exist=False)
-        results.setdefault('step5', []).append(res)
+        res = self.vw_msg_search(output, "RH00050", exp_exist=False)
+        results.setdefault("step5", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py	2023-03-06 06:16:08.609646 +0000
@@ -5,43 +5,43 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134056')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134056")
+        hypervisor_type = self.get_config("hypervisor_type")
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         if "satellite62" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
 
         # case steps
         logger.info(">>>step1: Run virt-who servie to check hypervisor's facts")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         facts = data[register_owner][host_uuid]
-        results.setdefault('step1', []).append(res)
-        results.setdefault('step1', []).append(data['is_async'] == "hypervisors_async")
-        results.setdefault('step1', []).append('type' in facts.keys())
-        results.setdefault('step1', []).append('version' in facts.keys())
-        results.setdefault('step1', []).append('socket' in facts.keys())
-        logger.info("hypervisor.type: {0} ".format(facts['type']))
-        logger.info("cpu.cpu_socket(s): {0}".format(facts['socket']))
-        logger.info("hypervisor.version: {0}".format(facts['version']))
+        results.setdefault("step1", []).append(res)
+        results.setdefault("step1", []).append(data["is_async"] == "hypervisors_async")
+        results.setdefault("step1", []).append("type" in facts.keys())
+        results.setdefault("step1", []).append("version" in facts.keys())
+        results.setdefault("step1", []).append("socket" in facts.keys())
+        logger.info("hypervisor.type: {0} ".format(facts["type"]))
+        logger.info("cpu.cpu_socket(s): {0}".format(facts["socket"]))
+        logger.info("hypervisor.version: {0}".format(facts["version"]))
 
         # case result
         self.vw_case_result(results)
--- /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py	2023-03-06 06:16:08.609874 +0000
@@ -2,30 +2,31 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134059')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134059")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: Run virt-who to check 'rhsm.connection' info")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        res2 = self.vw_msg_search(rhsm_output, '[rhsm.connection INFO]', exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        res2 = self.vw_msg_search(rhsm_output, "[rhsm.connection INFO]", exp_exist=True)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py
would reformat /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py
--- /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py	2023-03-06 06:16:08.654454 +0000
@@ -2,42 +2,43 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134065')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134065")
         self.vw_case_skip("unlimited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        unlimited_sku = register_config['unlimit']
+        unlimited_sku = register_config["unlimit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), unlimited_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step3: check virtual sku is created or not in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
-        results.setdefault('step3', []).append(sku_attrs['sku_id'] == unlimited_sku)
+        results.setdefault("step3", []).append(sku_attrs["sku_id"] == unlimited_sku)
 
         # case result
         self.vw_case_result(results)
--- /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py	2023-03-06 06:16:08.667320 +0000
@@ -2,55 +2,60 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134083')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134083")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
 
         # case steps
-        logger.info(">>>step1: stop virt-who, re-register guest again to create temporary bonus")
+        logger.info(
+            ">>>step1: stop virt-who, re-register guest again to create temporary bonus"
+        )
         self.vw_thread_clean()
         self.vw_web_host_delete(host_name, host_uuid)
         self.system_unregister(self.ssh_guest())
         self.system_register(self.ssh_guest(), register_type, register_config)
 
         logger.info(">>>step2: check temporary bonus pool exist in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        sub_type = sku_attrs['sub_type']
+        sub_type = sku_attrs["sub_type"]
         if "Temporary" in sub_type:
             logger.info("{0}, Temporary pool is exist in guest".format(sub_type))
-            results.setdefault('step2', []).append(True)
+            results.setdefault("step2", []).append(True)
         else:
             logger.error("{0}, Temporary pool is not exist in guest".format(sub_type))
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         logger.info(">>>step3: attach temporary bonus pool in guest")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, "using a temporary unmapped guest subscription", exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        res2 = self.vw_msg_search(
+            output, "using a temporary unmapped guest subscription", exp_exist=True
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py
--- /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py	2023-03-06 06:16:08.668161 +0000
@@ -2,21 +2,22 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134063')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134063")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
@@ -25,19 +26,19 @@
 
         # case steps
         logger.info(">>>step1: run virt-who service")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check host-to-guest association in rhsm.log")
         res = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: check host-to-guest association in webui")
         res = self.vw_web_associate(host_name, host_uuid, guest_name, guest_uuid)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         # case result
         notes = list()
         notes.append("Bug(Step3):  Missing h/g association in satellite webUI")
         notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1644969")
would reformat /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py
would reformat /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py
--- /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py	2023-03-06 05:02:18.579378 +0000
+++ /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py	2023-03-06 06:16:08.683376 +0000
@@ -2,61 +2,65 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134061')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134061")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         virt_type = {
-                'libvirt-local'     :'kvm',
-                'libvirt-remote'    :'kvm',
-                'rhevm'             :'kvm',
-                'esx'               :'vmware',
-                'hyperv'            :'hyperv',
-                'xen'               :'xen',
-                'kubevirt'          :'kvm',
-                'ahv'               :'nutanix_ahv'
-                }
+            "libvirt-local": "kvm",
+            "libvirt-remote": "kvm",
+            "rhevm": "kvm",
+            "esx": "vmware",
+            "hyperv": "hyperv",
+            "xen": "xen",
+            "kubevirt": "kvm",
+            "ahv": "nutanix_ahv",
+        }
 
         # case steps
         logger.info(">>>step1: check virt.uuid fact by subscription-manager in guest")
         cmd = "subscription-manager facts --list | grep virt.uuid"
         ret, output = self.runcmd(cmd, self.ssh_guest())
         logger.info(output)
-        virt_uuid = output.split(':')[1].strip()
-        results.setdefault('step1', []).append(virt_uuid.lower() == guest_uuid.lower())
+        virt_uuid = output.split(":")[1].strip()
+        results.setdefault("step1", []).append(virt_uuid.lower() == guest_uuid.lower())
 
-        logger.info(">>>step2: check virt.host_type fact by subscription-manager in guest")
-        hypervisor_type = self.get_config('hypervisor_type')
-        _, output1 = self.runcmd("virt-what",
-                                 self.ssh_guest())
-        _, output2 = self.runcmd("subscription-manager facts --list | grep virt.host_type",
-                                 self.ssh_guest())
+        logger.info(
+            ">>>step2: check virt.host_type fact by subscription-manager in guest"
+        )
+        hypervisor_type = self.get_config("hypervisor_type")
+        _, output1 = self.runcmd("virt-what", self.ssh_guest())
+        _, output2 = self.runcmd(
+            "subscription-manager facts --list | grep virt.host_type", self.ssh_guest()
+        )
         logger.info(output2)
-        results.setdefault('step2', []).append(
+        results.setdefault("step2", []).append(
             virt_type[hypervisor_type.lower()] in output1
-            and
-            virt_type[hypervisor_type.lower()] in output2
+            and virt_type[hypervisor_type.lower()] in output2
         )
 
-        logger.info(">>>step3: check virt.is_guest fact by subscription-manager in guest")
+        logger.info(
+            ">>>step3: check virt.is_guest fact by subscription-manager in guest"
+        )
         cmd = "subscription-manager facts --list | grep virt.is_guest"
         ret, output = self.runcmd(cmd, self.ssh_guest())
         logger.info(output)
-        virt_is_guest = output.split(':')[1].strip()
-        results.setdefault('step3', []).append(virt_is_guest == "True")
+        virt_is_guest = output.split(":")[1].strip()
+        results.setdefault("step3", []).append(virt_is_guest == "True")
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py
--- /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py	2023-03-06 06:16:08.735730 +0000
@@ -2,52 +2,55 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134071')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134071")
         self.vw_case_skip("unlimited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        unlimited_sku = register_config['unlimit']
+        unlimited_sku = register_config["unlimit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), unlimited_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, unlimited_sku, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
-        logger.info(">>>step4: unattach physical sku from host/hypervisor and check virtual pool")
+        logger.info(
+            ">>>step4: unattach physical sku from host/hypervisor and check virtual pool"
+        )
         self.vw_web_unattach(host_name, host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
         res = self.vw_msg_search(output, unlimited_sku, exp_exist=False)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
--- /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py	2023-03-06 06:16:08.736348 +0000
@@ -2,51 +2,52 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134069')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134069")
         self.vw_case_skip("unlimited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        unlimited_sku = register_config['unlimit']
+        register_type = register_config["type"]
+        unlimited_sku = register_config["unlimit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), unlimited_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         try:
             logger.info(">>>step3: attach virtual sku by auto in guest")
             sku_attrs = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
-            results.setdefault('step3', []).append(sku_attrs['sku_id'] == unlimited_sku)
+            results.setdefault("step3", []).append(sku_attrs["sku_id"] == unlimited_sku)
             self.system_sku_attach(self.ssh_guest())
             ins_attrs = self.system_sku_installed(self.ssh_guest())
-            results.setdefault('step3', []).append(ins_attrs['status'] == 'Subscribed')
+            results.setdefault("step3", []).append(ins_attrs["status"] == "Subscribed")
         except:
-            results.setdefault('step3', []).append(False)
+            results.setdefault("step3", []).append(False)
             pass
 
         # case result
         notes = list()
         if "satellite" in register_type:
would reformat /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py
would reformat /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py
--- /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py	2023-03-06 06:16:08.779039 +0000
@@ -2,68 +2,75 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134067')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134067")
         self.vw_case_skip("unlimited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        unlimited_sku = register_config['unlimit']
+        register_type = register_config["type"]
+        unlimited_sku = register_config["unlimit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), unlimited_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, unlimited_sku, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         logger.info(">>>step4: check repo status in guest")
         cmd = "subscription-manager repos --list"
         ret, output = self.runcmd(cmd, self.ssh_guest())
         if "stage" in register_type:
-            res = self.vw_msg_search(output, "Available Repositories" , exp_exist=True)
+            res = self.vw_msg_search(output, "Available Repositories", exp_exist=True)
         else:
-            res = self.vw_msg_search(output, "no repositories available" , exp_exist=True)
-        results.setdefault('step4', []).append(res)
+            res = self.vw_msg_search(
+                output, "no repositories available", exp_exist=True
+            )
+        results.setdefault("step4", []).append(res)
 
         logger.info(">>>step5: check subscription status in guest")
         cmd = "subscription-manager status"
         ret, output = self.runcmd(cmd, self.ssh_guest())
-        res1 = self.vw_msg_search(output, "Invalid" , exp_exist=True)
-        logger.warning("{0} is not available for: Red Hat Enterprise Linux Server".format(unlimited_sku))
-        results.setdefault('step5', []).append(res1)
+        res1 = self.vw_msg_search(output, "Invalid", exp_exist=True)
+        logger.warning(
+            "{0} is not available for: Red Hat Enterprise Linux Server".format(
+                unlimited_sku
+            )
+        )
+        results.setdefault("step5", []).append(res1)
 
         logger.info(">>>step6: available virtual unlimit sku can be listed in guest ")
         output = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
         res = self.vw_msg_search(str(output), unlimited_sku, exp_exist=True)
-        results.setdefault('step6', []).append(res)
+        results.setdefault("step6", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py
--- /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py	2023-03-06 06:16:08.790009 +0000
@@ -2,52 +2,55 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134072')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134072")
         self.vw_case_skip("unlimited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        unlimited_sku = register_config['unlimit']
+        unlimited_sku = register_config["unlimit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), unlimited_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, unlimited_sku, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
-        logger.info(">>>step4: unregister host/hypervisor and check virtual pool revoked or not")
+        logger.info(
+            ">>>step4: unregister host/hypervisor and check virtual pool revoked or not"
+        )
         self.vw_web_host_delete(host_name, host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
         res = self.vw_msg_search(output, unlimited_sku, exp_exist=False)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py
--- /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py	2023-03-06 06:16:08.828383 +0000
@@ -2,56 +2,61 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134060')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134060")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        pool_id = sku_attrs['pool_id'] 
+        pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         logger.info(">>>step4: no available virtual vdc sku listed in guest ")
-        output = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual", exp_exist=False)
+        output = self.system_sku_attr(
+            self.ssh_guest(), vdc_virtual_sku, "virtual", exp_exist=False
+        )
         res = self.vw_msg_search(str(output), vdc_virtual_sku, exp_exist=False)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         notes = list()
-        server_type = self.get_config('register_type')
-        if 'stage' in server_type:
-            notes.append("Bug(Step*): Failed to synchronize cache for repo 'rhel-8-for-x86_64-baseos-rpms'")
+        server_type = self.get_config("register_type")
+        if "stage" in server_type:
+            notes.append(
+                "Bug(Step*): Failed to synchronize cache for repo 'rhel-8-for-x86_64-baseos-rpms'"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1719177")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py
--- /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py	2023-03-06 06:16:08.822523 +0000
@@ -2,42 +2,43 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134062')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134062")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus'] 
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step3: check virtual sku is created or not in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        results.setdefault('step3', []).append(sku_attrs['sku_id'] == vdc_virtual_sku)
+        results.setdefault("step3", []).append(sku_attrs["sku_id"] == vdc_virtual_sku)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py
--- /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py	2023-03-06 06:16:08.859583 +0000
@@ -2,52 +2,55 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134064')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134064")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
-        logger.info(">>>step4: unattach physical sku from host/hypervisor and check virtual pool")
+        logger.info(
+            ">>>step4: unattach physical sku from host/hypervisor and check virtual pool"
+        )
         self.vw_web_unattach(host_name, host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
         res = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=False)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py
--- /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py	2023-03-06 05:02:18.589378 +0000
+++ /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py	2023-03-06 06:16:08.881128 +0000
@@ -2,51 +2,56 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134066')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134066")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        register_type = register_config["type"]
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         try:
             logger.info(">>>step3: attach virtual sku by auto in guest")
-            sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-            results.setdefault('step3', []).append(sku_attrs['sku_id'] == vdc_virtual_sku)
+            sku_attrs = self.system_sku_attr(
+                self.ssh_guest(), vdc_virtual_sku, "virtual"
+            )
+            results.setdefault("step3", []).append(
+                sku_attrs["sku_id"] == vdc_virtual_sku
+            )
             self.system_sku_attach(self.ssh_guest())
             ins_attrs = self.system_sku_installed(self.ssh_guest())
-            results.setdefault('step3', []).append(ins_attrs['status'] == 'Subscribed')
+            results.setdefault("step3", []).append(ins_attrs["status"] == "Subscribed")
         except:
-            results.setdefault('step3', []).append(False)
+            results.setdefault("step3", []).append(False)
             pass
 
         # case result
         notes = list()
         if "satellite" in register_type:
would reformat /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py
--- /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py	2023-03-06 06:16:08.903533 +0000
@@ -2,52 +2,55 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134070')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134070")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
-        logger.info(">>>step4: unregister host/hypervisor and check virtual pool revoked or not")
+        logger.info(
+            ">>>step4: unregister host/hypervisor and check virtual pool revoked or not"
+        )
         self.vw_web_host_delete(host_name, host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
         res = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=False)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py
--- /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py	2023-03-06 06:16:08.926875 +0000
@@ -2,65 +2,72 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134052')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type not in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134052")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type not in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: set cpu.cpu_socket(s) to 4 in host")
-        res = self.system_custom_facts_create(self.ssh_host(), 'cpu.cpu_socket(s)', '4')
-        results.setdefault('step1', []).append(res)
+        res = self.system_custom_facts_create(self.ssh_host(), "cpu.cpu_socket(s)", "4")
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
-        logger.info(">>>step3: attach physical sku for host/hypervisor without quantity")
+        logger.info(
+            ">>>step3: attach physical sku for host/hypervisor without quantity"
+        )
         self.system_sku_unattach(self.ssh_host())
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id)
         output = self.system_sku_consumed(self.ssh_host())
         res1 = self.vw_msg_search(output, vdc_physical_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
-        results.setdefault('step3', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+        results.setdefault("step3", []).append(res3)
 
         logger.info(">>>step4: attach physical sku for host/hypervisor with quantity=1")
         self.system_sku_unattach(self.ssh_host())
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id, quantity=1)
         output = self.system_sku_consumed(self.ssh_host())
         res1 = self.vw_msg_search(output, vdc_physical_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Only supports 2 of 4 sockets', exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
-        results.setdefault('step4', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Only supports 2 of 4 sockets", exp_exist=True
+        )
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
+        results.setdefault("step4", []).append(res3)
         self.system_custom_facts_remove(self.ssh_host())
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py
--- /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py	2023-03-06 06:16:08.961018 +0000
@@ -2,64 +2,73 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134057')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134057")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: set cpu.cpu_socket(s) to 4 in guest")
-        res = self.system_custom_facts_create(self.ssh_guest(), 'cpu.cpu_socket(s)', '4')
-        results.setdefault('step1', []).append(res)
+        res = self.system_custom_facts_create(
+            self.ssh_guest(), "cpu.cpu_socket(s)", "4"
+        )
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step4: attach virtual sku for guest without quantity")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
-        results.setdefault('step4', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
+        results.setdefault("step4", []).append(res3)
 
         logger.info(">>>step5: attach virtual sku for guest with quantity=2")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
-        output = self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id, quantity=2)
-        res1 = self.vw_msg_search(output, 'Multi-entitlement not supported for pool', exp_exist=True)
-        results.setdefault('step5', []).append(res1)
+        virtual_pool_id = sku_attrs["pool_id"]
+        output = self.system_sku_attach(
+            self.ssh_guest(), pool_id=virtual_pool_id, quantity=2
+        )
+        res1 = self.vw_msg_search(
+            output, "Multi-entitlement not supported for pool", exp_exist=True
+        )
+        results.setdefault("step5", []).append(res1)
         self.system_custom_facts_remove(self.ssh_guest())
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py
--- /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py	2023-03-06 06:16:08.981881 +0000
@@ -2,44 +2,47 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134068')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134068")
         self.vw_case_skip("limited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        limit_physical_sku = register_config['limit']
-        limit_virtual_sku = register_config['limit']
+        limit_physical_sku = register_config["limit"]
+        limit_virtual_sku = register_config["limit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         self.vw_web_unattach(host_name, host_uuid)
-        sku_attrs = self.system_sku_attr(self.ssh_host(), limit_physical_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        sku_attrs = self.system_sku_attr(
+            self.ssh_host(), limit_physical_sku, "physical"
+        )
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step3: check virtual sku is created or not in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), limit_virtual_sku, "virtual")
-        results.setdefault('step3', []).append(sku_attrs['sku_id'] == limit_virtual_sku)
+        results.setdefault("step3", []).append(sku_attrs["sku_id"] == limit_virtual_sku)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py
--- /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py	2023-03-06 06:16:08.991011 +0000
@@ -2,74 +2,83 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134055')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134055")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        register_type = register_config["type"]
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         logger.info(">>>step4: check repo status in host")
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         if "libvirt-local" in hypervisor_type or "vdsm" in hypervisor_type:
             cmd = "subscription-manager repos --list"
             ret, output = self.runcmd(cmd, self.ssh_host())
-            res = self.vw_msg_search(output, "no repositories available" , exp_exist=True)
-            results.setdefault('step4', []).append(res)
+            res = self.vw_msg_search(
+                output, "no repositories available", exp_exist=True
+            )
+            results.setdefault("step4", []).append(res)
         else:
-            logger.warning("skip this step, it's not available for mode {0}".format(hypervisor_type))
+            logger.warning(
+                "skip this step, it's not available for mode {0}".format(
+                    hypervisor_type
+                )
+            )
 
         logger.info(">>>step5: check repo status in guest")
         cmd = "subscription-manager repos --list"
         ret, output = self.runcmd(cmd, self.ssh_guest())
         if "stage" in register_type:
-            res = self.vw_msg_search(output, "Available Repositories" , exp_exist=True)
+            res = self.vw_msg_search(output, "Available Repositories", exp_exist=True)
         else:
-            res = self.vw_msg_search(output, "no repositories available" , exp_exist=True)
-        results.setdefault('step5', []).append(res)
+            res = self.vw_msg_search(
+                output, "no repositories available", exp_exist=True
+            )
+        results.setdefault("step5", []).append(res)
 
         logger.info(">>>step6: check subscription status in guest")
         cmd = "subscription-manager status"
         ret, output = self.runcmd(cmd, self.ssh_guest())
-        res1 = self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True)
-        res2 = self.vw_msg_search(output, "Invalid" , exp_exist=False)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        res1 = self.vw_msg_search(output, "Overall Status: Current", exp_exist=True)
+        res2 = self.vw_msg_search(output, "Invalid", exp_exist=False)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py
--- /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py	2023-03-06 06:16:09.054371 +0000
@@ -2,82 +2,97 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134073')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134073")
         self.vw_case_skip("limited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        limit_physical_sku = register_config['limit']
-        limit_virtual_sku = register_config['limit']
+        register_type = register_config["type"]
+        limit_physical_sku = register_config["limit"]
+        limit_virtual_sku = register_config["limit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         self.vw_web_unattach(host_name, host_uuid)
-        sku_attrs = self.system_sku_attr(self.ssh_host(), limit_physical_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        sku_attrs = self.system_sku_attr(
+            self.ssh_host(), limit_physical_sku, "physical"
+        )
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step3: check virtual sku attrs in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), limit_virtual_sku, "virtual")
-        available = sku_attrs['available']
+        available = sku_attrs["available"]
         if available == "1":
-            logger.info("Succeeded to check, vitual sku({0}) Available({1})".format(limit_virtual_sku, available))
-            results.setdefault('step3', []).append(True)
+            logger.info(
+                "Succeeded to check, vitual sku({0}) Available({1})".format(
+                    limit_virtual_sku, available
+                )
+            )
+            results.setdefault("step3", []).append(True)
         else:
-            logger.error("Failed to check, vitual sku({0}) Available({1})".format(limit_virtual_sku, available))
-            results.setdefault('step3', []).append(False)
+            logger.error(
+                "Failed to check, vitual sku({0}) Available({1})".format(
+                    limit_virtual_sku, available
+                )
+            )
+            results.setdefault("step3", []).append(False)
 
         logger.info(">>>step4: attach virtual sku by pool_id in guest")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, limit_virtual_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: check repo status in guest")
         cmd = "subscription-manager repos --list"
         ret, output = self.runcmd(cmd, self.ssh_guest())
         if "stage" in register_type:
-            res = self.vw_msg_search(output, "Available Repositories" , exp_exist=True)
+            res = self.vw_msg_search(output, "Available Repositories", exp_exist=True)
         else:
-            res = self.vw_msg_search(output, "no repositories available" , exp_exist=True)
-        results.setdefault('step5', []).append(res)
+            res = self.vw_msg_search(
+                output, "no repositories available", exp_exist=True
+            )
+        results.setdefault("step5", []).append(res)
 
         logger.info(">>>step6: check subscription status in guest")
         cmd = "subscription-manager status"
         ret, output = self.runcmd(cmd, self.ssh_guest())
-        res1 = self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True)
-        res2 = self.vw_msg_search(output, "Invalid" , exp_exist=False)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        res1 = self.vw_msg_search(output, "Overall Status: Current", exp_exist=True)
+        res2 = self.vw_msg_search(output, "Invalid", exp_exist=False)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: no available virtual limit sku listed in guest ")
-        output = self.system_sku_attr(self.ssh_guest(), limit_virtual_sku, "virtual", exp_exist=False)
+        output = self.system_sku_attr(
+            self.ssh_guest(), limit_virtual_sku, "virtual", exp_exist=False
+        )
         res = self.vw_msg_search(str(output), limit_virtual_sku, exp_exist=False)
-        results.setdefault('step7', []).append(res)
+        results.setdefault("step7", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py
--- /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py	2023-03-06 06:16:09.058928 +0000
@@ -2,65 +2,76 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134054')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134054")
         self.vw_case_skip("limited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        limit_physical_sku = register_config['limit']
-        limit_virtual_sku = register_config['limit']
+        register_type = register_config["type"]
+        limit_physical_sku = register_config["limit"]
+        limit_virtual_sku = register_config["limit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         self.vw_web_unattach(host_name, host_uuid)
-        sku_attrs = self.system_sku_attr(self.ssh_host(), limit_physical_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        sku_attrs = self.system_sku_attr(
+            self.ssh_host(), limit_physical_sku, "physical"
+        )
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id)
 
         logger.info(">>>step3: check virtual sku attrs in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), limit_virtual_sku, "virtual")
-        available = sku_attrs['available']
+        available = sku_attrs["available"]
         if available == "1":
-            logger.info("Succeeded to check, vitual sku({0}) Available({1})".format(limit_virtual_sku, available))
-            results.setdefault('step3', []).append(True)
+            logger.info(
+                "Succeeded to check, vitual sku({0}) Available({1})".format(
+                    limit_virtual_sku, available
+                )
+            )
+            results.setdefault("step3", []).append(True)
         else:
-            logger.error("Failed to check, vitual sku({0}) Available({1})".format(limit_virtual_sku, available))
-            results.setdefault('step3', []).append(False)
+            logger.error(
+                "Failed to check, vitual sku({0}) Available({1})".format(
+                    limit_virtual_sku, available
+                )
+            )
+            results.setdefault("step3", []).append(False)
 
         try:
             logger.info(">>>step4: attach virtual sku by auto in guest")
-            pool_id = sku_attrs['pool_id']
+            pool_id = sku_attrs["pool_id"]
             self.system_sku_attach(self.ssh_guest())
             output = self.system_sku_consumed(self.ssh_guest())
             res1 = self.vw_msg_search(output, limit_virtual_sku, exp_exist=True)
-            res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
         except:
-            results.setdefault('step4', []).append(False)
+            results.setdefault("step4", []).append(False)
             pass
 
         # case result
         notes = list()
         if "satellite" in register_type:
would reformat /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py
--- /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py	2023-03-06 06:16:09.096624 +0000
@@ -2,56 +2,61 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134058')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134058")
         self.vw_case_skip("limited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        limit_physical_sku = register_config['limit']
-        limit_virtual_sku = register_config['limit']
+        limit_physical_sku = register_config["limit"]
+        limit_virtual_sku = register_config["limit"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         self.vw_web_unattach(host_name, host_uuid)
-        sku_attrs = self.system_sku_attr(self.ssh_host(), limit_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        sku_attrs = self.system_sku_attr(
+            self.ssh_host(), limit_physical_sku, "physical"
+        )
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), limit_virtual_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, limit_virtual_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
-        logger.info(">>>step4: unregister host/hypervisor and check virtual pool revoked or not")
+        logger.info(
+            ">>>step4: unregister host/hypervisor and check virtual pool revoked or not"
+        )
         self.vw_web_host_delete(host_name, host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
         res = self.vw_msg_search(output, limit_virtual_sku, exp_exist=False)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py
--- /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py	2023-03-06 06:16:09.104392 +0000
@@ -2,56 +2,61 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134053')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134053")
         self.vw_case_skip("limited sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        limit_physical_sku = register_config['limit']
-        limit_virtual_sku = register_config['limit']
+        limit_physical_sku = register_config["limit"]
+        limit_virtual_sku = register_config["limit"]
 
         # Case Steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         self.vw_web_unattach(host_name, host_uuid)
-        sku_attrs = self.system_sku_attr(self.ssh_host(), limit_physical_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        sku_attrs = self.system_sku_attr(
+            self.ssh_host(), limit_physical_sku, "physical"
+        )
+        physical_pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
 
         logger.info(">>>step3: attach virtual sku by pool_id in guest")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), limit_virtual_sku, "virtual")
-        virtual_pool_id = sku_attrs['pool_id']
+        virtual_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, limit_virtual_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
-        logger.info(">>>step4: unattach physical sku from host/hypervisor and check virtual pool")
+        logger.info(
+            ">>>step4: unattach physical sku from host/hypervisor and check virtual pool"
+        )
         self.vw_web_unattach(host_name, host_uuid)
         output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
         res = self.vw_msg_search(output, limit_virtual_sku, exp_exist=False)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py
--- /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py	2023-03-06 06:16:09.129381 +0000
@@ -2,47 +2,50 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134075')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134075")
         self.vw_case_skip("instance sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         register_config = self.get_register_config()
-        instance_sku = register_config['instance']
+        instance_sku = register_config["instance"]
 
         # case steps
         logger.info(">>>step1: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for host/hypervisor")
         sku_attrs = self.system_sku_attr(self.ssh_host(), instance_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, pool_id, quantity=2)
 
         logger.info(">>>step3: check no virtual sku is created or not in guest")
-        sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "virtual", exp_exist=False)
+        sku_attrs = self.system_sku_attr(
+            self.ssh_guest(), instance_sku, "virtual", exp_exist=False
+        )
         if sku_attrs:
             logger.error("failed to check, virtual instance sku is exist")
-            results.setdefault('step3', []).append(False)
+            results.setdefault("step3", []).append(False)
         else:
             logger.info("succeeded to check, virtual instance sku is not exist")
-            results.setdefault('step3', []).append(True)
+            results.setdefault("step3", []).append(True)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py
--- /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py	2023-03-06 06:16:09.206446 +0000
@@ -2,76 +2,81 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134076')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134076")
         self.vw_case_skip("instance sku")
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type not in ('libvirt-local', 'vdsm'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type not in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        instance_sku = register_config['instance']
+        instance_sku = register_config["instance"]
 
         # case steps
         logger.info(">>>step1: set cpu.cpu_socket(s) to 1 in host")
-        res = self.system_custom_facts_create(self.ssh_host(), 'cpu.cpu_socket(s)', '1')
-        results.setdefault('step1', []).append(res)
- 
+        res = self.system_custom_facts_create(self.ssh_host(), "cpu.cpu_socket(s)", "1")
+        results.setdefault("step1", []).append(res)
+
         logger.info(">>>step2: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
- 
+        results.setdefault("step2", []).append(res)
+
         logger.info(">>>step3: attach physical sku for host without quantity")
         self.system_sku_unattach(self.ssh_host())
         sku_attrs = self.system_sku_attr(self.ssh_host(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id)
         output = self.system_sku_consumed(self.ssh_host())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
-        results.setdefault('step3', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+        results.setdefault("step3", []).append(res3)
 
         logger.info(">>>step4: attach physical sku for host with quantity=1")
         self.system_sku_unattach(self.ssh_host())
         sku_attrs = self.system_sku_attr(self.ssh_host(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         cmd = "subscription-manager attach --pool=%s --quantity=1" % (physical_pool_id)
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="subscription attach")
-        error_msg = 'must be attached using a quantity evenly divisible by 2'
+        error_msg = "must be attached using a quantity evenly divisible by 2"
         res = self.vw_msg_search(output, error_msg, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
         self.system_custom_facts_remove(self.ssh_host())
 
         logger.info(">>>step5: attach physical sku for host/hypervisor with quantity=2")
         self.system_sku_unattach(self.ssh_host())
         sku_attrs = self.system_sku_attr(self.ssh_host(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id, quantity=2)
         output = self.system_sku_consumed(self.ssh_host())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
-        results.setdefault('step5', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
+        results.setdefault("step5", []).append(res3)
         self.system_custom_facts_remove(self.ssh_host())
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py
--- /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py	2023-03-06 06:16:09.266497 +0000
@@ -2,70 +2,79 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134079')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134079")
         self.vw_case_skip("instance sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        instance_sku = register_config['instance']
+        instance_sku = register_config["instance"]
 
         # case steps
         logger.info(">>>step1: set cpu.cpu_socket(s) to 1 in guest")
-        res = self.system_custom_facts_create(self.ssh_guest(), 'cpu.cpu_socket(s)', '1')
-        results.setdefault('step1', []).append(res)
+        res = self.system_custom_facts_create(
+            self.ssh_guest(), "cpu.cpu_socket(s)", "1"
+        )
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for guest without quantity")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=physical_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
-        results.setdefault('step2', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
+        results.setdefault("step2", []).append(res3)
 
         logger.info(">>>step3: attach physical sku for guest with quantity=1")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=physical_pool_id, quantity=1)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
-        results.setdefault('step3', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+        results.setdefault("step3", []).append(res3)
 
         logger.info(">>>step4: attach physical sku for guest with quantity=2")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=physical_pool_id, quantity=2)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
-        results.setdefault('step4', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
+        results.setdefault("step4", []).append(res3)
         self.system_custom_facts_remove(self.ssh_guest())
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py
--- /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py	2023-03-06 06:16:09.293589 +0000
@@ -5,87 +5,94 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134077')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134077")
         self.vw_case_skip("instance sku")
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type not in ('libvirt-local', 'vdsm'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type not in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        instance_sku = register_config['instance']
+        instance_sku = register_config["instance"]
         sku_attrs = self.system_sku_attr(self.ssh_host(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
 
         # case steps
         try:
             logger.info(">>>step1: set cpu.cpu_socket(s) to 8 in host")
-            cpu_socket = 'cpu.cpu_socket(s)'
-            res = self.system_custom_facts_create(self.ssh_host(), cpu_socket, '8')
-            results.setdefault('step1', []).append(res)
+            cpu_socket = "cpu.cpu_socket(s)"
+            res = self.system_custom_facts_create(self.ssh_host(), cpu_socket, "8")
+            results.setdefault("step1", []).append(res)
 
             logger.info(">>>step2: run virt-who to report mapping")
             data, tty_output, rhsm_output = self.vw_start()
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res)
+            results.setdefault("step2", []).append(res)
 
             logger.info(">>>step3: attach physical sku for host without quantity")
             self.system_sku_unattach(self.ssh_host())
             self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id)
             output = self.system_sku_consumed(self.ssh_host())
             res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-            res2 = self.vw_msg_search(output, 'Quantity Used:.*8', exp_exist=True)
-            res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current')
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
-            results.setdefault('step3', []).append(res3)
+            res2 = self.vw_msg_search(output, "Quantity Used:.*8", exp_exist=True)
+            res3 = self.vw_msg_search(
+                output, "Status Details:.*Subscription is current"
+            )
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
+            results.setdefault("step3", []).append(res3)
 
             logger.info(">>>step4: attach physical sku for host with quantity=1")
             self.system_sku_unattach(self.ssh_host())
-            cmd = ("subscription-manager attach --pool={0} --quantity=1"
-                   .format(physical_pool_id))
+            cmd = "subscription-manager attach --pool={0} --quantity=1".format(
+                physical_pool_id
+            )
             ret, output = self.runcmd(cmd, self.ssh_host(), desc="subscription attach")
-            error_msg = 'must be attached using a quantity evenly divisible by 2'
+            error_msg = "must be attached using a quantity evenly divisible by 2"
             res = self.vw_msg_search(output, error_msg, exp_exist=True)
-            results.setdefault('step4', []).append(res)
+            results.setdefault("step4", []).append(res)
 
             logger.info(">>>step5: attach physical sku for host with quantity=2")
             self.system_sku_unattach(self.ssh_host())
-            self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id, quantity=2)
+            self.system_sku_attach(
+                self.ssh_host(), pool_id=physical_pool_id, quantity=2
+            )
             output = self.system_sku_consumed(self.ssh_host())
-            msg = 'Status Details:.*Only supports 2 of 8 sockets'
+            msg = "Status Details:.*Only supports 2 of 8 sockets"
             res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-            res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
+            res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
             res3 = self.vw_msg_search(output, msg, exp_exist=True)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
-            results.setdefault('step5', []).append(res3)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
+            results.setdefault("step5", []).append(res3)
 
             logger.info(">>>step6: attach physical sku for host with quantity=6")
-            self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id, quantity=6)
+            self.system_sku_attach(
+                self.ssh_host(), pool_id=physical_pool_id, quantity=6
+            )
             output = self.system_sku_consumed(self.ssh_host())
-            msg = 'Status Details:.*Subscription is current'
+            msg = "Status Details:.*Subscription is current"
             res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-            res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-            res3 = self.vw_msg_search(output, 'Quantity Used:.*6', exp_exist=True)
+            res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+            res3 = self.vw_msg_search(output, "Quantity Used:.*6", exp_exist=True)
             res4 = self.vw_msg_search(output, msg, exp_exist=True)
-            results.setdefault('step6', []).append(res1)
-            results.setdefault('step6', []).append(res2)
-            results.setdefault('step6', []).append(res3)
-            results.setdefault('step6', []).append(res4)
+            results.setdefault("step6", []).append(res1)
+            results.setdefault("step6", []).append(res2)
+            results.setdefault("step6", []).append(res3)
+            results.setdefault("step6", []).append(res4)
 
         finally:
             self.system_custom_facts_remove(self.ssh_host())
 
         # case result
would reformat /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py
--- /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py	2023-03-06 05:02:18.590378 +0000
+++ /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py	2023-03-06 06:16:09.321366 +0000
@@ -5,102 +5,108 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134078')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134078")
         self.vw_case_skip("instance sku")
-        hypervisor_type = self.get_config('hypervisor_type')
-        trigger_type = self.get_config('trigger_type')
-        if hypervisor_type not in ('libvirt-local', 'vdsm'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        trigger_type = self.get_config("trigger_type")
+        if hypervisor_type not in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         if "trigger-rhev" in trigger_type:
             self.vw_case_skip(trigger_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        instance_sku = register_config['instance']
+        register_type = register_config["type"]
+        instance_sku = register_config["instance"]
         sku_attrs = self.system_sku_attr(self.ssh_host(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
 
         # case steps
         logger.info(">>>step1: set cpu.cpu_socket(s) to 8 in host")
-        res = self.system_custom_facts_create(self.ssh_host(), 'cpu.cpu_socket(s)', '8')
-        results.setdefault('step1', []).append(res)
+        res = self.system_custom_facts_create(self.ssh_host(), "cpu.cpu_socket(s)", "8")
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who and check the mapping info is sent or not")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: attach physical sku for host without quantity")
         self.system_sku_unattach(self.ssh_host())
         self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id)
         output = self.system_sku_consumed(self.ssh_host())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*8', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current')
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
-        results.setdefault('step3', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*8", exp_exist=True)
+        res3 = self.vw_msg_search(output, "Status Details:.*Subscription is current")
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+        results.setdefault("step3", []).append(res3)
 
         logger.info(">>>step4: attach physical sku for host with quantity=1")
         self.system_sku_unattach(self.ssh_host())
-        cmd = ("subscription-manager attach --pool={0} --quantity=1"
-               .format(physical_pool_id))
+        cmd = "subscription-manager attach --pool={0} --quantity=1".format(
+            physical_pool_id
+        )
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="subscription attach")
-        error_msg = 'must be attached using a quantity evenly divisible by 2'
+        error_msg = "must be attached using a quantity evenly divisible by 2"
         res = self.vw_msg_search(output, error_msg, exp_exist=True)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         logger.info(">>>step5: attach physical sku for host with quantity=2")
         # Sometimes, Status Details is not Only supports 2 of 8 sockets, try it 5 loops
         res1 = res2 = res3 = False
         for i in range(5):
             self.system_sku_unattach(self.ssh_host())
             sku_attrs = self.system_sku_attr(self.ssh_host(), instance_sku, "physical")
-            physical_pool_id = sku_attrs['pool_id']
-            self.system_sku_attach(self.ssh_host(), pool_id=physical_pool_id, quantity=2)
+            physical_pool_id = sku_attrs["pool_id"]
+            self.system_sku_attach(
+                self.ssh_host(), pool_id=physical_pool_id, quantity=2
+            )
             output = self.system_sku_consumed(self.ssh_host())
-            msg = 'Status Details:.*Only supports 2 of 8 sockets'
+            msg = "Status Details:.*Only supports 2 of 8 sockets"
             res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-            res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
+            res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
             res3 = self.vw_msg_search(output, msg, exp_exist=True)
             if res1 and res2 and res3:
                 break
-            wait_time = 60*(i+3)
-            logger.warning("attach result is not expected, try again after {0}"
-                           .format(wait_time))
+            wait_time = 60 * (i + 3)
+            logger.warning(
+                "attach result is not expected, try again after {0}".format(wait_time)
+            )
             time.sleep(wait_time)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
-        results.setdefault('step5', []).append(res3)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
+        results.setdefault("step5", []).append(res3)
 
         try:
             logger.info(">>>step6: attach sku for host by auto")
             self.system_sku_attach(self.ssh_host())
             output = self.system_sku_consumed(self.ssh_host())
             res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-            res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-            res2 = self.vw_msg_search(output, 'Quantity Used:.*6', exp_exist=True)
-            res4 = self.vw_msg_search(output, 'Status Details:.*Subscription is current')
-            results.setdefault('step6', []).append(res1)
-            results.setdefault('step6', []).append(res2)
-            results.setdefault('step6', []).append(res3)
-            results.setdefault('step6', []).append(res4)
+            res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+            res2 = self.vw_msg_search(output, "Quantity Used:.*6", exp_exist=True)
+            res4 = self.vw_msg_search(
+                output, "Status Details:.*Subscription is current"
+            )
+            results.setdefault("step6", []).append(res1)
+            results.setdefault("step6", []).append(res2)
+            results.setdefault("step6", []).append(res3)
+            results.setdefault("step6", []).append(res4)
         except:
-            results.setdefault('step6', []).append(False)
+            results.setdefault("step6", []).append(False)
             pass
         finally:
             self.system_custom_facts_remove(self.ssh_host())
 
         # case result
would reformat /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py
--- /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py	2023-03-06 06:16:09.361979 +0000
@@ -2,84 +2,95 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134080')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134080")
         self.vw_case_skip("instance sku")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        instance_sku = register_config['instance']
+        instance_sku = register_config["instance"]
 
         # case steps
         logger.info(">>>step1: set cpu.cpu_socket(s) to 8 in guest")
-        res = self.system_custom_facts_create(self.ssh_guest(), 'cpu.cpu_socket(s)', '8')
-        results.setdefault('step1', []).append(res)
+        res = self.system_custom_facts_create(
+            self.ssh_guest(), "cpu.cpu_socket(s)", "8"
+        )
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: attach physical sku for guest without quantity")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=physical_pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
-        results.setdefault('step2', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
+        results.setdefault("step2", []).append(res3)
 
         logger.info(">>>step3: attach physical sku for guest with quantity=1")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=physical_pool_id, quantity=1)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*1', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
-        results.setdefault('step3', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*1", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+        results.setdefault("step3", []).append(res3)
 
         logger.info(">>>step4: attach physical sku for guest with quantity=2")
         self.system_sku_unattach(self.ssh_guest())
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=physical_pool_id, quantity=2)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
-        results.setdefault('step4', []).append(res3)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+        res3 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
+        results.setdefault("step4", []).append(res3)
 
         logger.info(">>>step5: attach physical sku for guest with quantity=6")
         sku_attrs = self.system_sku_attr(self.ssh_guest(), instance_sku, "physical")
-        physical_pool_id = sku_attrs['pool_id']
+        physical_pool_id = sku_attrs["pool_id"]
         self.system_sku_attach(self.ssh_guest(), pool_id=physical_pool_id, quantity=6)
         output = self.system_sku_consumed(self.ssh_guest())
         res1 = self.vw_msg_search(output, instance_sku, exp_exist=True)
-        res2 = self.vw_msg_search(output, 'Quantity Used:.*2', exp_exist=True)
-        res3 = self.vw_msg_search(output, 'Quantity Used:.*6', exp_exist=True)
-        res4 = self.vw_msg_search(output, 'Status Details:.*Subscription is current', exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
-        results.setdefault('step5', []).append(res3)
-        results.setdefault('step5', []).append(res4)
+        res2 = self.vw_msg_search(output, "Quantity Used:.*2", exp_exist=True)
+        res3 = self.vw_msg_search(output, "Quantity Used:.*6", exp_exist=True)
+        res4 = self.vw_msg_search(
+            output, "Status Details:.*Subscription is current", exp_exist=True
+        )
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
+        results.setdefault("step5", []).append(res3)
+        results.setdefault("step5", []).append(res4)
         self.system_custom_facts_remove(self.ssh_guest())
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py
--- /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py	2023-03-06 06:16:09.380850 +0000
@@ -2,66 +2,79 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134081')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134081")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "libvirt-local" not in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         libvirt_conf = "/etc/libvirt/libvirtd.conf"
 
         # case steps
         logger.info(">>>step1: run virt-who service to check the thread number")
         ret, output = self.run_service(self.ssh_host(), "virt-who", "restart")
         thread_before = self.vw_callback_thread_num()
-        logger.info("Succeeded to start virt-who service and the thread_num is {0}".format(thread_before))
+        logger.info(
+            "Succeeded to start virt-who service and the thread_num is {0}".format(
+                thread_before
+            )
+        )
 
         logger.info(">>>step2: update libvirt config, and restart libvirtd service")
         self.vw_option_enable("listen_tls", filename=libvirt_conf)
         self.vw_option_enable("listen_tcp", filename=libvirt_conf)
         self.vw_option_enable("auth_tcp", filename=libvirt_conf)
         self.vw_option_enable("tcp_port", filename=libvirt_conf)
         ret, output = self.run_service(self.ssh_host(), "libvirtd", "restart")
         ret, output = self.run_service(self.ssh_host(), "libvirtd", "status")
         if "is running" in output or "Active: active (running)" in output:
             logger.info("Succeeded to restart libvirt service")
-            results.setdefault('step2', []).append(True)
+            results.setdefault("step2", []).append(True)
         else:
             logger.error("Failed to restart libvirt service")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         logger.info(">>>step3: check virt-who thread_num is changed or not")
         thread_after = self.vw_callback_thread_num()
         if thread_before == thread_after:
-            logger.info("Succeeded to check, thread_num({0}) is not changed".format(thread_after))
-            results.setdefault('step3', []).append(True)
+            logger.info(
+                "Succeeded to check, thread_num({0}) is not changed".format(
+                    thread_after
+                )
+            )
+            results.setdefault("step3", []).append(True)
         else:
-            logger.error("Failed to check, thread_num({0}) is changed to {1}".format(thread_before, thread_after))
-            results.setdefault('step3', []).append(False)
+            logger.error(
+                "Failed to check, thread_num({0}) is changed to {1}".format(
+                    thread_before, thread_after
+                )
+            )
+            results.setdefault("step3", []).append(False)
 
         logger.info(">>>step4: recovery libvirt config")
         self.vw_option_disable("listen_tls", filename=libvirt_conf)
         self.vw_option_disable("listen_tcp", filename=libvirt_conf)
         self.vw_option_disable("auth_tcp", filename=libvirt_conf)
         self.vw_option_disable("tcp_port", filename=libvirt_conf)
         ret, output = self.run_service(self.ssh_host(), "libvirtd", "restart")
         ret, output = self.run_service(self.ssh_host(), "libvirtd", "status")
         if "is running" in output or "Active: active (running)" in output:
             logger.info("Succeeded to restart libvirt service")
-            results.setdefault('step4', []).append(True)
+            results.setdefault("step4", []).append(True)
         else:
             logger.error("Failed to restart libvirt service")
-            results.setdefault('step4', []).append(False)
+            results.setdefault("step4", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py
--- /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py	2023-03-06 06:16:09.386259 +0000
@@ -2,16 +2,17 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-134082')
-        hypervisor_type = self.get_config('hypervisor_type')
-        trigger_type = self.get_config('trigger_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-134082")
+        hypervisor_type = self.get_config("hypervisor_type")
+        trigger_type = self.get_config("trigger_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         if "trigger-rhel" not in trigger_type:
             self.vw_case_skip(trigger_type)
         self.vw_case_init()
 
@@ -21,34 +22,47 @@
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
 
         # case steps
         logger.info(">>>step1: create virt-who config")
-        self.vw_option_enable('[global]', conf_etc)
-        self.vw_option_enable('debug', conf_etc)
-        self.vw_option_update_value('debug', 'True', conf_etc)
+        self.vw_option_enable("[global]", conf_etc)
+        self.vw_option_enable("debug", conf_etc)
+        self.vw_option_update_value("debug", "True", conf_etc)
         self.vw_option_enable("interval", filename=conf_etc)
-        self.vw_option_update_value("interval", '60', filename=conf_etc)
+        self.vw_option_update_value("interval", "60", filename=conf_etc)
 
         logger.info("setting options in /etc/virt-who.d/")
         self.vw_etc_d_mode_create(config_name, config_file)
-        
+
         logger.info(">>>step2: start virt-who service to check")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
-        res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60, exp_looptime=60)
+        res1 = self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=60,
+            exp_looptime=60,
+        )
         res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: start to reboot virt-who host")
         self.system_reboot(self.ssh_host())
 
         logger.info(">>>step4: start virt-who service to check again")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
-        res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60, exp_looptime=60)
+        res1 = self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=60,
+            exp_looptime=60,
+        )
         res2 = self.vw_msg_search(output=rhsm_output, msg="\[.*DEBUG\]", exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         # case result
         self.vw_case_result(results)
-
would reformat /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py
--- /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py	2023-03-06 06:16:09.464239 +0000
@@ -2,52 +2,73 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-171210')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-171210")
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_virtual_sku = register_config["vdc_bonus"]
 
         # case steps
         logger.info(">>>step1: check virtual temporary sku exist in guest")
         self.vw_thread_clean()
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        sku_type = sku_attrs['sub_type']
-        sku_id = sku_attrs['sku_id']
-        pool_id = sku_attrs['pool_id']
-        results.setdefault('step1', []).append('Temporary' in sku_type)
-        results.setdefault('step1', []).append(vdc_virtual_sku in sku_id)
+        sku_type = sku_attrs["sub_type"]
+        sku_id = sku_attrs["sku_id"]
+        pool_id = sku_attrs["pool_id"]
+        results.setdefault("step1", []).append("Temporary" in sku_type)
+        results.setdefault("step1", []).append(vdc_virtual_sku in sku_id)
 
         logger.info(">>>step2: attach virtual temporary sku in guest")
         self.system_sku_attach(self.ssh_guest(), pool_id=pool_id)
         output = self.system_sku_consumed(self.ssh_guest())
-        results.setdefault('step2', []).append(self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True))
-        results.setdefault('step2', []).append(self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=True))
-        results.setdefault('step2', []).append(self.vw_msg_search(output, "Status Details: .*temporary unmapped guest subscription", exp_exist=True))
+        results.setdefault("step2", []).append(
+            self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
+        )
+        results.setdefault("step2", []).append(
+            self.vw_msg_search(output, "Subscription Type: .*Temporary", exp_exist=True)
+        )
+        results.setdefault("step2", []).append(
+            self.vw_msg_search(
+                output,
+                "Status Details: .*temporary unmapped guest subscription",
+                exp_exist=True,
+            )
+        )
 
         logger.info(">>>step3: start virt-who service")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         logger.info(">>>step4: check temporary sku is changed to stable in guest")
         output = self.system_sku_consumed(self.ssh_guest())
         virtual_sku = ["RH00049|RH00050"]
-        results.setdefault('step4', []).append(self.msg_validation(output, virtual_sku, exp_exist=True))
-        results.setdefault('step4', []).append(self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=False))
-        results.setdefault('step4', []).append(self.vw_msg_search(output, "Status Details: .*Subscription is current", exp_exist=True))
+        results.setdefault("step4", []).append(
+            self.msg_validation(output, virtual_sku, exp_exist=True)
+        )
+        results.setdefault("step4", []).append(
+            self.vw_msg_search(
+                output, "Subscription Type: .*Temporary", exp_exist=False
+            )
+        )
+        results.setdefault("step4", []).append(
+            self.vw_msg_search(
+                output, "Status Details: .*Subscription is current", exp_exist=True
+            )
+        )
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py
--- /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py	2023-03-06 06:16:09.499672 +0000
@@ -2,108 +2,129 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-170860')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-170860")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] < '0.24.5':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] < "0.24.5":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_type = register_config['type']
+        register_server = register_config["server"]
+        register_type = register_config["type"]
         if "satellite" in register_type:
-            ssh_sat = register_config['ssh_sat']
+            ssh_sat = register_config["ssh_sat"]
             register_server = self.get_hostname(ssh_sat)
         proxy_server = deploy.proxy.server
         proxy_port = deploy.proxy.port
         bad_proxy_server = "xxx.eng.pek2.redhat.com"
         bad_proxy_port = "0000"
-        error_msg = "Connection refused|Unable to connect to: .*{0}|Proxy error at .*{0}".format(bad_proxy_server)
+        error_msg = "Connection refused|Unable to connect to: .*{0}|Proxy error at .*{0}".format(
+            bad_proxy_server
+        )
 
         # Case Steps
         try:
             logger.info(">>>step1: set /etc/virt-who.d/x.conf with good proxy")
             self.vw_option_add("rhsm_proxy_hostname", proxy_server, config_file)
             self.vw_option_add("rhsm_proxy_port", proxy_port, config_file)
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step1', []).append(s1)
-            s2 = self.vw_msg_search(rhsm_output, "Connection built.*{0}".format(proxy_server), exp_exist=True)
-            results.setdefault('step1', []).append(s2)
-            s3 = self.vw_msg_search(rhsm_output, "Using proxy.*{0}".format(proxy_server), exp_exist=True)
-            results.setdefault('step1', []).append(s3)
+            results.setdefault("step1", []).append(s1)
+            s2 = self.vw_msg_search(
+                rhsm_output,
+                "Connection built.*{0}".format(proxy_server),
+                exp_exist=True,
+            )
+            results.setdefault("step1", []).append(s2)
+            s3 = self.vw_msg_search(
+                rhsm_output, "Using proxy.*{0}".format(proxy_server), exp_exist=True
+            )
+            results.setdefault("step1", []).append(s3)
 
             logger.info(">>>step2: set wrong proxy in /etc/virt-who.d/x.conf")
-            self.vw_option_update_value("rhsm_proxy_hostname", bad_proxy_server, config_file)
+            self.vw_option_update_value(
+                "rhsm_proxy_hostname", bad_proxy_server, config_file
+            )
             self.vw_option_update_value("rhsm_proxy_port", bad_proxy_port, config_file)
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
             s2 = self.vw_msg_search(rhsm_output, error_msg, exp_exist=True)
-            results.setdefault('step2', []).append(s1)
-            results.setdefault('step2', []).append(s2)
+            results.setdefault("step2", []).append(s1)
+            results.setdefault("step2", []).append(s2)
 
-            logger.info(">>>step3: set no_proxy=[server_hostname] in /etc/rhsm/rhsm.conf")
-            self.vw_option_update_value("no_proxy", register_server, '/etc/rhsm/rhsm.conf')
+            logger.info(
+                ">>>step3: set no_proxy=[server_hostname] in /etc/rhsm/rhsm.conf"
+            )
+            self.vw_option_update_value(
+                "no_proxy", register_server, "/etc/rhsm/rhsm.conf"
+            )
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step3', []).append(s1)
+            results.setdefault("step3", []).append(s1)
 
             logger.info(">>>step4: set no_proxy=* in /etc/rhsm/rhsm.conf")
-            self.vw_option_update_value("no_proxy", '*', '/etc/rhsm/rhsm.conf')
+            self.vw_option_update_value("no_proxy", "*", "/etc/rhsm/rhsm.conf")
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(s1)
-            self.vw_option_update_value("no_proxy", '', '/etc/rhsm/rhsm.conf')
+            results.setdefault("step4", []).append(s1)
+            self.vw_option_update_value("no_proxy", "", "/etc/rhsm/rhsm.conf")
 
-            logger.info(">>>step5: set rhsm_no_proxy=[server_hostname] in /etc/virt-who.conf")
-            self.vw_option_enable('[defaults]', '/etc/virt-who.conf')
-            self.vw_option_enable('rhsm_no_proxy', '/etc/virt-who.conf')
-            self.vw_option_update_value('rhsm_no_proxy', register_server, '/etc/virt-who.conf')
+            logger.info(
+                ">>>step5: set rhsm_no_proxy=[server_hostname] in /etc/virt-who.conf"
+            )
+            self.vw_option_enable("[defaults]", "/etc/virt-who.conf")
+            self.vw_option_enable("rhsm_no_proxy", "/etc/virt-who.conf")
+            self.vw_option_update_value(
+                "rhsm_no_proxy", register_server, "/etc/virt-who.conf"
+            )
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(s1)
+            results.setdefault("step5", []).append(s1)
 
             logger.info(">>>step6: set rhsm_no_proxy=* in /etc/virt-who.conf")
-            self.vw_option_update_value('rhsm_no_proxy', '*', '/etc/virt-who.conf')
+            self.vw_option_update_value("rhsm_no_proxy", "*", "/etc/virt-who.conf")
             data, tty_output, rhsm_output = self.vw_start()
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step6', []).append(s1)
-            self.vw_option_disable('rhsm_no_proxy', '/etc/virt-who.conf')
+            results.setdefault("step6", []).append(s1)
+            self.vw_option_disable("rhsm_no_proxy", "/etc/virt-who.conf")
 
-            if hypervisor_type not in ('libvirt-local', 'vdsm'):
-                logger.info(">>>step7: set rhsm_no_proxy=[server_hostname] in /etc/virt-who.d/x.conf")
-                self.vw_option_add('rhsm_no_proxy', register_server, config_file)
+            if hypervisor_type not in ("libvirt-local", "vdsm"):
+                logger.info(
+                    ">>>step7: set rhsm_no_proxy=[server_hostname] in /etc/virt-who.d/x.conf"
+                )
+                self.vw_option_add("rhsm_no_proxy", register_server, config_file)
                 data, tty_output, rhsm_output = self.vw_start()
                 s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                results.setdefault('step7', []).append(s1)
+                results.setdefault("step7", []).append(s1)
 
                 logger.info(">>>step8: set rhsm_no_proxy=* in /etc/virt-who.d/x.conf")
-                self.vw_option_update_value('rhsm_no_proxy', '*', config_file)
+                self.vw_option_update_value("rhsm_no_proxy", "*", config_file)
                 data, tty_output, rhsm_output = self.vw_start()
                 s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                results.setdefault('step8', []).append(s1)
-                self.vw_option_del('rhsm_no_proxy', config_file)
+                results.setdefault("step8", []).append(s1)
+                self.vw_option_del("rhsm_no_proxy", config_file)
             else:
-                logger.info('Skip step7 and step8 for {0}'.format(hypervisor_type))
+                logger.info("Skip step7 and step8 for {0}".format(hypervisor_type))
         except:
-            results.setdefault('step except', []).append(False)
+            results.setdefault("step except", []).append(False)
             pass
 
         finally:
             self.vw_option_update_value("no_proxy", "", "/etc/rhsm/rhsm.conf")
 
would reformat /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py
--- /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py	2023-03-06 06:16:09.517560 +0000
@@ -2,14 +2,15 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-171135')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] < '0.24.6':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-171135")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] < "0.24.6":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
@@ -21,58 +22,58 @@
 
         # case steps
         logger.info('>>>step1: Run virt-who without debug"')
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
 
         logger.info('>>>step2: Configure "print_=false" then run virt-who by cli')
         self.vw_option_enable("[global]", virtwho_conf)
         self.vw_option_enable("print_", virtwho_conf)
-        self.vw_option_update_value("print_", 'false', virtwho_conf)
+        self.vw_option_update_value("print_", "false", virtwho_conf)
         self.vw_stop()
         cmd = "virt-who"
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=False)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info('>>>step3: Configure "print_=false" then start virt-who service')
         self.vw_stop()
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=False)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info('>>>step4: Configure "print_=true" then run virt-who by cli')
-        self.vw_option_update_value("print_", 'true', virtwho_conf)
+        self.vw_option_update_value("print_", "true", virtwho_conf)
         self.vw_stop()
         cmd = "virt-who"
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=0)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=0)
         res2 = self.vw_msg_search(tty_output, guest_uuid, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info('>>>step5: Configure "print_=true" then start virt-who service')
         self.vw_stop()
         data, tty_output, rhsm_output = self.vw_start("virt-who")
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=False)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info('>>>step6: Configure "print_=xxx" then start virt-who service')
         msg = "print_ must be a valid boolean"
-        self.vw_option_update_value("print_", 'xxx', virtwho_conf)
+        self.vw_option_update_value("print_", "xxx", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=False)
         res3 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
-        results.setdefault('step6', []).append(res3)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
+        results.setdefault("step6", []).append(res3)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py
--- /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py	2023-03-06 06:16:09.546059 +0000
@@ -2,38 +2,39 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-183803')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-183803")
         configs = self.get_hypervisor_config()
-        hypervisor_type = configs['type']
-        if hypervisor_type != 'esx':
+        hypervisor_type = configs["type"]
+        if hypervisor_type != "esx":
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        self.vw_option_update_value('username', 'tester@vsphere.local', config_file)
+        self.vw_option_update_value("username", "tester@vsphere.local", config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         guest_uuid = self.get_hypervisor_guestuuid()
 
         # case steps
         logger.info(">>>step1: run virt-who for {0}".format(config_file))
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check host-to-guest association in rhsm.log")
         res = self.vw_rhsm_associate(data, host_uuid, guest_uuid)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py
--- /tmp/lint/tier1/tc_1111_template_conf_validation.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1111_template_conf_validation.py	2023-03-06 06:16:09.564881 +0000
@@ -5,42 +5,43 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-195889')
-        trigger_type = self.get_config('trigger_type')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if trigger_type != 'trigger-rhel':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-195889")
+        trigger_type = self.get_config("trigger_type")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if trigger_type != "trigger-rhel":
             self.vw_case_skip(trigger_type)
-        if hypervisor_type != 'esx':
+        if hypervisor_type != "esx":
             self.vw_case_skip(hypervisor_type)
 
         results = dict()
         options = [
-                '#[config name]',
-                '#type=',
-                '#server=',
-                '#username=',
-                '#password=',
-                '#encrypted_password=',
-                '#owner=',
-                '#hypervisor_id=',
-                '#rhsm_hostname=',
-                '#rhsm_port=',
-                '#rhsm_username=',
-                '#rhsm_password=',
-                '#rhsm_encrypted_password=',
-                '#rhsm_prefix=/rhsm',
-                '#kubeconfig=',
-                '#kubeversion=',]    
-        self.pkg_uninstall(self.ssh_host(), 'virt-who')
-        self.pkg_install(self.ssh_host(), 'virt-who')
-        _, output = self.runcmd('cat /etc/virt-who.d/template.conf', self.ssh_host())
+            "#[config name]",
+            "#type=",
+            "#server=",
+            "#username=",
+            "#password=",
+            "#encrypted_password=",
+            "#owner=",
+            "#hypervisor_id=",
+            "#rhsm_hostname=",
+            "#rhsm_port=",
+            "#rhsm_username=",
+            "#rhsm_password=",
+            "#rhsm_encrypted_password=",
+            "#rhsm_prefix=/rhsm",
+            "#kubeconfig=",
+            "#kubeversion=",
+        ]
+        self.pkg_uninstall(self.ssh_host(), "virt-who")
+        self.pkg_install(self.ssh_host(), "virt-who")
+        _, output = self.runcmd("cat /etc/virt-who.d/template.conf", self.ssh_host())
         for option in options:
             if len(re.findall(option, output)) < 0:
-                logger.warning('{0} is not defined in the template.conf'.format(option))
+                logger.warning("{0} is not defined in the template.conf".format(option))
                 results.setdefault(option, []).append(False)
             else:
-                logger.info('{0} is defined'.format(option))
+                logger.info("{0} is defined".format(option))
                 results.setdefault(option, []).append(True)
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1111_template_conf_validation.py
--- /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py	2023-03-06 06:16:09.571113 +0000
@@ -5,33 +5,37 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-195888')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] < '0.30.0':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-195888")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] < "0.30.0":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
-        logger.info('>>>step1: set the environment in the virt-who host and run virt-who service')
-        cmd = ('export SUBMAN_DEBUG_PRINT_REQUEST=1;'
-               'export SUBMAN_DEBUG_PRINT_REQUEST_HEADER=1')
+        logger.info(
+            ">>>step1: set the environment in the virt-who host and run virt-who service"
+        )
+        cmd = (
+            "export SUBMAN_DEBUG_PRINT_REQUEST=1;"
+            "export SUBMAN_DEBUG_PRINT_REQUEST_HEADER=1"
+        )
         cmd = "{0}; virt-who -o".format(cmd)
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
 
-        logger.info('>>>step2: check the message from console')
-        pkg = self.pkg_check(self.ssh_host(), 'virt-who')[9:17]
-        msg = 'virt-who/{}'.format(pkg)
+        logger.info(">>>step2: check the message from console")
+        pkg = self.pkg_check(self.ssh_host(), "virt-who")[9:17]
+        msg = "virt-who/{}".format(pkg)
         res2 = self.vw_msg_search(output=tty_output, msg=msg, exp_exist=True)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res2)
 
         # case results
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py
--- /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py	2023-03-06 06:16:09.583460 +0000
@@ -5,104 +5,108 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-174862')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-174862")
         configs = self.get_hypervisor_config()
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] < '0.24.6':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] < "0.24.6":
             self.vw_case_skip("virt-who version")
-        hypervisor_type = configs['type']
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        hypervisor_type = configs["type"]
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        self.vw_option_add('hypervisor_id', 'uuid', config_file)
+        self.vw_option_add("hypervisor_id", "uuid", config_file)
         register_config = self.get_register_config()
-        register_owner = register_config['owner']
+        register_owner = register_config["owner"]
         host_uuid = self.get_hypervisor_hostuuid()
-        facts_items = ['socket', 'type', 'dmi', 'version']
-        if hypervisor_type in ('esx', 'rhevm', 'ahv'):
-            facts_items.append('cluster')
+        facts_items = ["socket", "type", "dmi", "version"]
+        if hypervisor_type in ("esx", "rhevm", "ahv"):
+            facts_items.append("cluster")
         type_values = {
-            'kubevirt': 'qemu',
-            'xen': 'XenServer',
-            'hyperv': 'hyperv',
-            'esx': 'VMware ESXi',
-            'libvirt-remote': 'QEMU',
-            'rhevm': 'qemu',
-            'ahv': 'AHV'
+            "kubevirt": "qemu",
+            "xen": "XenServer",
+            "hyperv": "hyperv",
+            "esx": "VMware ESXi",
+            "libvirt-remote": "QEMU",
+            "rhevm": "qemu",
+            "ahv": "AHV",
         }
-        if hypervisor_type == 'ahv' and deploy.ahv.api_version == 'v2':
-            type_values['ahv'] = 'kKvm'
+        if hypervisor_type == "ahv" and deploy.ahv.api_version == "v2":
+            type_values["ahv"] = "kKvm"
 
         cluster_values = {
-            'esx': deploy.vcenter.cluster,
-            'rhevm': deploy.rhevm.cluster,
-            'ahv': deploy.ahv.cluster
+            "esx": deploy.vcenter.cluster,
+            "rhevm": deploy.rhevm.cluster,
+            "ahv": deploy.ahv.cluster,
         }
 
         # Case Steps
         logger.info(">>>step1: run virt-who to get facts from mapping")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
         if host_uuid in data[register_owner].keys():
             facts_dic = data[register_owner][host_uuid]
             logger.info("succeeded to get hypervisor facts dict: {0}".format(facts_dic))
-            results.setdefault('step1', []).append(True)
+            results.setdefault("step1", []).append(True)
         else:
             raise FailException("failed to get hypervisor facts")
 
         logger.info(">>>step2: check all facts item exiting")
         for item in facts_items:
             if item in facts_dic.keys() and facts_dic[item] is not None:
-                logger.info("succeeded to check {0}={1} in {2} facts"
-                            .format(item, facts_dic[item], hypervisor_type))
-                results.setdefault('step2', []).append(True)
+                logger.info(
+                    "succeeded to check {0}={1} in {2} facts".format(
+                        item, facts_dic[item], hypervisor_type
+                    )
+                )
+                results.setdefault("step2", []).append(True)
             else:
                 logger.error("no '{0}' in {1} facts".format(item, hypervisor_type))
-                results.setdefault('step2', []).append(False)
+                results.setdefault("step2", []).append(False)
 
         logger.info(">>>step3: check hypervisor.type value")
         type_value = type_values[hypervisor_type]
-        if facts_dic['type'] == type_value:
+        if facts_dic["type"] == type_value:
             logger.info("succeeded to check hypervisor.type={0}".format(type_value))
-            results.setdefault('step3', []).append(True)
+            results.setdefault("step3", []).append(True)
         else:
             logger.error("hypervisor.type is not {0}".format(type_value))
-            results.setdefault('step3', []).append(False)
+            results.setdefault("step3", []).append(False)
 
         logger.info(">>>step4: check dmi.system.uuid value")
         if hypervisor_type == "rhevm":
             host_hwuuid = self.get_hypervisor_hwuuid()
             dmi = host_hwuuid
         else:
             dmi = host_uuid
-        if facts_dic['dmi'] == dmi:
+        if facts_dic["dmi"] == dmi:
             logger.info("succeeded to check dmi.system.uuid={0}".format(host_uuid))
-            results.setdefault('step4', []).append(True)
+            results.setdefault("step4", []).append(True)
         else:
             logger.error("dmi.system.uuid is not {0}".format(host_uuid))
-            results.setdefault('step4', []).append(False)
+            results.setdefault("step4", []).append(False)
 
-        if hypervisor_type in ('esx', 'rhevm', 'ahv'):
+        if hypervisor_type in ("esx", "rhevm", "ahv"):
             logger.info(">>>step5: check hypervisor.cluster value")
             cluster_value = cluster_values[hypervisor_type]
-            if facts_dic['cluster'] == cluster_value:
-                logger.info("succeeded to check hypervisor.cluster={0}"
-                            .format(cluster_value))
-                results.setdefault('step5', []).append(True)
+            if facts_dic["cluster"] == cluster_value:
+                logger.info(
+                    "succeeded to check hypervisor.cluster={0}".format(cluster_value)
+                )
+                results.setdefault("step5", []).append(True)
             else:
                 logger.error("hypervisor.cluster is not {0}".format(cluster_value))
-                results.setdefault('step5', []).append(False)
+                results.setdefault("step5", []).append(False)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py
--- /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py	2023-03-06 05:02:18.591378 +0000
+++ /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py	2023-03-06 06:16:09.658941 +0000
@@ -2,35 +2,40 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-196077')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-196077")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_file = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', config_file)
-        self.vw_option_enable('debug', config_file)
-        self.vw_option_update_value('debug', 'True', config_file)
-        self.vw_etc_d_mode_create('virtwho-config', '/etc/virt-who.d/virtwho-config.conf')
+        self.vw_option_enable("[global]", config_file)
+        self.vw_option_enable("debug", config_file)
+        self.vw_option_update_value("debug", "True", config_file)
+        self.vw_etc_d_mode_create(
+            "virtwho-config", "/etc/virt-who.d/virtwho-config.conf"
+        )
         proxy_server = "{0}:{1}".format(deploy.proxy.server, deploy.proxy.port)
         bad_proxy_server = "10.73.3.24:9999"
-        steps = {'step2':'http_proxy', 'step3':'https_proxy'}
-        error_msg = ["Connection refused|Cannot connect to proxy|Connection timed out|Unable to connect"]
+        steps = {"step2": "http_proxy", "step3": "https_proxy"}
+        error_msg = [
+            "Connection refused|Cannot connect to proxy|Connection timed out|Unable to connect"
+        ]
 
         # case steps
         logger.info(">>>step1: enable [system_environment] in /etc/virt-who.conf")
         self.vw_option_enable("[system_environment]", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
 
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run virt-who to check {1}".format(step, option))
             if option == "http_proxy":
                 value = "http://{0}".format(proxy_server)
                 bad_value = "http://{0}".format(bad_proxy_server)
             if option == "https_proxy":
@@ -39,12 +44,18 @@
             logger.info("> run virt-who with good {0}".format(option))
             self.vw_option_enable(option, config_file)
             self.vw_option_update_value(option, value, config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            s2 = self.vw_msg_search(rhsm_output, "Connection built.*{0}".format(proxy_server), exp_exist=True)
-            s3 = self.vw_msg_search(rhsm_output, "Using proxy.*{0}".format(proxy_server), exp_exist=True)
+            s2 = self.vw_msg_search(
+                rhsm_output,
+                "Connection built.*{0}".format(proxy_server),
+                exp_exist=True,
+            )
+            s3 = self.vw_msg_search(
+                rhsm_output, "Using proxy.*{0}".format(proxy_server), exp_exist=True
+            )
             results.setdefault(step, []).append(s1)
             results.setdefault(step, []).append(s2)
             results.setdefault(step, []).append(s3)
 
             logger.info("> run virt-who with bad {0}".format(option))
@@ -54,12 +65,12 @@
             s5 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
             results.setdefault(step, []).append(s4)
             results.setdefault(step, []).append(s5)
 
             logger.info(">>> run virt-who with bad proxy, but no_proxy=*")
-            self.vw_option_enable('no_proxy', config_file)
-            self.vw_option_update_value('no_proxy', '*', config_file)
+            self.vw_option_enable("no_proxy", config_file)
+            self.vw_option_update_value("no_proxy", "*", config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             s6 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(s6)
             self.vw_option_disable(option, config_file)
             self.vw_option_disable("no_proxy", config_file)
would reformat /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py
--- /tmp/lint/tier1/tc_1113_check_virtwho_status.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier1/tc_1113_check_virtwho_status.py	2023-03-06 06:16:09.668625 +0000
@@ -5,95 +5,96 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-196077')
-        compose_id = self.get_config('rhel_compose')
-        if 'RHEL-9' not in compose_id:
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-196077")
+        compose_id = self.get_config("rhel_compose")
+        if "RHEL-9" not in compose_id:
             self.vw_case_skip(compose_id)
         configs = self.get_hypervisor_config()
-        hypervisor_type = configs['type']
-        if 'libvirt-local' in hypervisor_type:
+        hypervisor_type = configs["type"]
+        if "libvirt-local" in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
-        hypervisor_server = configs['server']
+        hypervisor_server = configs["server"]
         register = self.get_register_config()
-        register_server = register['server']
+        register_server = register["server"]
         self.vw_case_init()
 
         # case config
         results = dict()
-        config_name = 'virtwho-config'
-        config_file = f'/etc/virt-who.d/{config_name}.conf'
+        config_name = "virtwho-config"
+        config_file = f"/etc/virt-who.d/{config_name}.conf"
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: Run virt-who to report the mapping")
-        data, tty_output, rhsm_output = self.vw_start(cli='virt-who -do')
+        data, tty_output, rhsm_output = self.vw_start(cli="virt-who -do")
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
 
         logger.info(">>>step2: Check '#virt-who --status' with good configuration")
         status = self.vw_status()
-        results.setdefault('step2', []).append(
-            'success' in status[config_name]['source_status'] and
-            'success' in status[config_name]['destination_status']
+        results.setdefault("step2", []).append(
+            "success" in status[config_name]["source_status"]
+            and "success" in status[config_name]["destination_status"]
         )
 
         logger.info(">>>step3: Check '#virt-who -s' with good configuration")
-        status = self.vw_status(cmd='virt-who -s')
-        results.setdefault('step3', []).append(
-            'success' in status[config_name]['source_status'] and
-            'success' in status[config_name]['destination_status']
+        status = self.vw_status(cmd="virt-who -s")
+        results.setdefault("step3", []).append(
+            "success" in status[config_name]["source_status"]
+            and "success" in status[config_name]["destination_status"]
         )
 
         logger.info(">>>step4: Check #virt-who --status --json")
         json = self.vw_status(if_json=True)
-        source = json[config_name]['source']
-        destination = json[config_name]['destination']
-        if 'libvirt' in hypervisor_type:
-            source_conn = f'qemu+ssh://root@{hypervisor_server}/system?no_tty=1'
-        elif 'esx' in hypervisor_type:
-            source_conn = f'https://{hypervisor_server}'
-        elif 'rhevm' in hypervisor_type:
-            source_conn = hypervisor_server.split('ovirt-engine')[0].strip()
-        elif 'kubevirt' in hypervisor_type:
+        source = json[config_name]["source"]
+        destination = json[config_name]["destination"]
+        if "libvirt" in hypervisor_type:
+            source_conn = f"qemu+ssh://root@{hypervisor_server}/system?no_tty=1"
+        elif "esx" in hypervisor_type:
+            source_conn = f"https://{hypervisor_server}"
+        elif "rhevm" in hypervisor_type:
+            source_conn = hypervisor_server.split("ovirt-engine")[0].strip()
+        elif "kubevirt" in hypervisor_type:
             source_conn = deploy.kubevirt.endpoint
         else:
             source_conn = hypervisor_server
-        results.setdefault('step4', []).append(
-            source['connection'] == source_conn and
-            source['status'] == 'success' and
-            source['last_successful_retrieve'].split(' ')[2] == 'UTC' and
-            source['hypervisors'] >= 1 and
-            source['guests'] >= 1 and
-            destination['connection'] == register_server and
-            destination['status'] == 'success' and
-            destination['last_successful_send'].split(' ')[2] == 'UTC' and
-            destination['last_successful_send_job_status'] == 'FINISHED'
+        results.setdefault("step4", []).append(
+            source["connection"] == source_conn
+            and source["status"] == "success"
+            and source["last_successful_retrieve"].split(" ")[2] == "UTC"
+            and source["hypervisors"] >= 1
+            and source["guests"] >= 1
+            and destination["connection"] == register_server
+            and destination["status"] == "success"
+            and destination["last_successful_send"].split(" ")[2] == "UTC"
+            and destination["last_successful_send_job_status"] == "FINISHED"
         )
 
         logger.info(">>>step5: Check '#virt-who -s' with bad configuration")
-        option = 'password'
-        if 'kubevirt' in hypervisor_type:
-            option = 'kubeconfig'
-        if 'libvirt-remote' in hypervisor_type:
-            option = 'server'
-        self.vw_option_update_value(f'{option}', 'xxx', config_file)
-        self.vw_option_update_value('owner', 'xxx', config_file)
-        status = self.vw_status(cmd='virt-who -s')
-        results.setdefault('step5', []).append(
-            'failure' in status[config_name]['source_status'] and
-            'failure' in status[config_name]['destination_status']
+        option = "password"
+        if "kubevirt" in hypervisor_type:
+            option = "kubeconfig"
+        if "libvirt-remote" in hypervisor_type:
+            option = "server"
+        self.vw_option_update_value(f"{option}", "xxx", config_file)
+        self.vw_option_update_value("owner", "xxx", config_file)
+        status = self.vw_status(cmd="virt-who -s")
+        results.setdefault("step5", []).append(
+            "failure" in status[config_name]["source_status"]
+            and "failure" in status[config_name]["destination_status"]
         )
 
-        logger.info(">>>step6: Check '#virt-who --status --json' with bad configuration")
+        logger.info(
+            ">>>step6: Check '#virt-who --status --json' with bad configuration"
+        )
         json = self.vw_status(if_json=True)
-        source = json[config_name]['source']
-        destination = json[config_name]['destination']
-        results.setdefault('step6', []).append(
-            source['status'] == 'failure' and
-            destination['status'] == 'failure'
+        source = json[config_name]["source"]
+        destination = json[config_name]["destination"]
+        results.setdefault("step6", []).append(
+            source["status"] == "failure" and destination["status"] == "failure"
         )
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier1/tc_1113_check_virtwho_status.py
--- /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py	2023-03-06 06:16:09.706962 +0000
@@ -5,45 +5,46 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136568')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136568")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # case config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        base_cli = self.vw_cli_base() + '-d'
-        msg_list = ["owner not in|"
-                      "owner.* not set|"
-                      "virt-who can't be started"]
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        base_cli = self.vw_cli_base() + "-d"
+        msg_list = ["owner not in|" "owner.* not set|" "virt-who can't be started"]
 
         # Case Steps
         logger.info(">>>step1: owner option is good value")
         data, tty_output, rhsm_output = self.vw_start(base_cli, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
- 
+        results.setdefault("step1", []).append(res)
+
         logger.info(">>>step2: owner option is wrong value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      '--{0}-owner=.*'.format(hypervisor_type),
-                                      '--{0}-owner=xxxxx'.format(hypervisor_type))
-        msg_list_2 = ["owner.* is different|"
-                      "Communication with subscription manager failed"]
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-owner=.*".format(hypervisor_type),
+            "--{0}-owner=xxxxx".format(hypervisor_type),
+        )
+        msg_list_2 = [
+            "owner.* is different|" "Communication with subscription manager failed"
+        ]
         data, tty_output, rhsm_output = self.vw_start(cli)
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list_2, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: skip this step because owner cannot be set to no-ascci")
         # cli = self.vw_cli_base_update(base_cli,
         #                               '--{0}-owner=.*'.format(hypervisor_type),
         #                               '--{0}-owner=Á∫¢Â∏Ω‚Ç¨467aa'.format(hypervisor_type))
@@ -56,30 +57,32 @@
         # res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
         # results.setdefault('step3', []).append(res1)
         # results.setdefault('step3', []).append(res2)
 
         logger.info(">>>step4: owner option is null value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      '--{0}-owner=.*'.format(hypervisor_type),
-                                      '--{0}-owner= '.format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-owner=.*".format(hypervisor_type),
+            "--{0}-owner= ".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: owner option is disable")
-        cli = self.vw_cli_base_update(base_cli,
-                                      '--{0}-owner=.*'.format(hypervisor_type),
-                                      ' ')
+        cli = self.vw_cli_base_update(
+            base_cli, "--{0}-owner=.*".format(hypervisor_type), " "
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         # Case Result
         notes = list()
-        if hypervisor_type == 'kubevirt':
+        if hypervisor_type == "kubevirt":
             notes.append("(step1,2) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py
--- /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py	2023-03-06 06:16:09.747638 +0000
@@ -5,84 +5,96 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136571')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136571")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.24.6':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.24.6":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        base_cli = self.vw_cli_base() + '-d'
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        base_cli = self.vw_cli_base() + "-d"
 
         # Case Steps
         logger.info(">>>step1: env option is good value")
         data, tty_output, rhsm_output = self.vw_start(base_cli, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: env option is wrong value")
-        cli = self.vw_cli_base_update(base_cli, "--{0}-env=.*".format(hypervisor_type),
-                                      "--{0}-env=xxxxx".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-env=.*".format(hypervisor_type),
+            "--{0}-env=xxxxx".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
-        msg_list = ["env.*differs|"
-                    "env.* is different|"
-                    "Communication with subscription manager failed"]
+        msg_list = [
+            "env.*differs|"
+            "env.* is different|"
+            "Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: env option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-env=.*".format(hypervisor_type),
-                                      "--{0}-env=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-env=.*".format(hypervisor_type),
+            "--{0}-env=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
-        msg_list = ["codec can't decode|"
-                    "Communication with subscription manager failed|"
-                    "env.*differs"]
+        msg_list = [
+            "codec can't decode|"
+            "Communication with subscription manager failed|"
+            "env.*differs"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: env option is null value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-env=.*".format(hypervisor_type),
-                                      "--{0}-env= ".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-env=.*".format(hypervisor_type),
+            "--{0}-env= ".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
-        msg_list = ["env not in|env.* not set|"
-                    "virt-who can't be started"]
+        msg_list = ["env not in|env.* not set|" "virt-who can't be started"]
         res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: env option is disable")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-env=.*".format(hypervisor_type),
-                                      " ")
+        cli = self.vw_cli_base_update(
+            base_cli, "--{0}-env=.*".format(hypervisor_type), " "
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         msg_list = ["env not in|env.* not set|virt-who can't be started"]
         res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         # Case Result
         notes = list()
-        register_type = self.get_config('register_type')
+        register_type = self.get_config("register_type")
         if "stage" in register_type:
-            notes.append("Bug(Step2,Step3): Set env to wrong or special value,"
-                         " still can sent report normally for stage")
+            notes.append(
+                "Bug(Step2,Step3): Set env to wrong or special value,"
+                " still can sent report normally for stage"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530426")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py
--- /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py	2023-03-06 06:16:09.796834 +0000
@@ -5,92 +5,110 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136572')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136572")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        base_cli = self.vw_cli_base() + '-d'
-        msg_list = ["Name or service not known|"
-                    "Connection timed out|"
-                    "Failed to connect|"
-                    "Error in .* backend"]
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        base_cli = self.vw_cli_base() + "-d"
+        msg_list = [
+            "Name or service not known|"
+            "Connection timed out|"
+            "Failed to connect|"
+            "Error in .* backend"
+        ]
 
         # Case Steps
         logger.info(">>>step1: server option is good value")
         data, tty_output, rhsm_output = self.vw_start(base_cli, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: server option is wrong value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-server=.*".format(hypervisor_type),
-                                      "--{0}-server=xxxxx".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-server=.*".format(hypervisor_type),
+            "--{0}-server=xxxxx".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: server option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-server=.*".format(hypervisor_type),
-                                      "--{0}-server=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-server=.*".format(hypervisor_type),
+            "--{0}-server=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
-        msg_list_3 = ["Name or service not known|"
-                      "Connection timed out|"
-                      "Failed to connect|"
-                      "Error in .* backend|"
-                      "Unable to connect|"
-                      "codec can't encode"]
+        msg_list_3 = [
+            "Name or service not known|"
+            "Connection timed out|"
+            "Failed to connect|"
+            "Error in .* backend|"
+            "Unable to connect|"
+            "codec can't encode"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list_3, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: server option is null value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-server=.*".format(hypervisor_type),
-                                      "--{0}-server= ".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-server=.*".format(hypervisor_type),
+            "--{0}-server= ".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-local mode will be used to instead "
-                           "when server option is null for libvirt-remote")
+            logger.warning(
+                "libvirt-local mode will be used to instead "
+                "when server option is null for libvirt-remote"
+            )
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
         else:
             msg_list = ["server.* not set|virt-who can't be started|No host supplied"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: server option is disable")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-server=.*".format(hypervisor_type),
-                                      " ")
+        cli = self.vw_cli_base_update(
+            base_cli, "--{0}-server=.*".format(hypervisor_type), " "
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-local mode will be used to instead "
-                           "when server option is disabled for libvirt-remote")
+            logger.warning(
+                "libvirt-local mode will be used to instead "
+                "when server option is disabled for libvirt-remote"
+            )
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
         else:
             msg_list = ["server.* not set|virt-who can't be started|No host supplied"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py
--- /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py	2023-03-06 06:16:09.837812 +0000
@@ -5,95 +5,113 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136573')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136573")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        base_cli = self.vw_cli_base() + '-d'
-        msg_list = ["Unable to login|"
-                    "incorrect user.*|"
-                    "Authentication failure|"
-                    "Incorrect.*username|"
-                    "Unauthorized|"
-                    "Error.* backend|"
-                    "Permission denied"]
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        base_cli = self.vw_cli_base() + "-d"
+        msg_list = [
+            "Unable to login|"
+            "incorrect user.*|"
+            "Authentication failure|"
+            "Incorrect.*username|"
+            "Unauthorized|"
+            "Error.* backend|"
+            "Permission denied"
+        ]
 
         # Case Steps
         logger.info(">>>step1: username option is good value")
         data, tty_output, rhsm_output = self.vw_start(base_cli, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: username option is wrong value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-username=.*".format(hypervisor_type),
-                                      "--{0}-username=xxxxx".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-username=.*".format(hypervisor_type),
+            "--{0}-username=xxxxx".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: username option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        pkg = self.pkg_check(self.ssh_host(), 'python-requests').split('-')[2]
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-username=.*".format(hypervisor_type),
-                                      "--{0}-username=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type))
+        pkg = self.pkg_check(self.ssh_host(), "python-requests").split("-")[2]
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-username=.*".format(hypervisor_type),
+            "--{0}-username=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
-        if pkg[16:21] >= '2.20':
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+        if pkg[16:21] >= "2.20":
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
         else:
             msg = "not in latin1 encoding"
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=0, exp_send=0
+            )
             res2 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: username option is null value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-username=.*".format(hypervisor_type),
-                                      "--{0}-username= ".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-username=.*".format(hypervisor_type),
+            "--{0}-username= ".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, "
-                           "username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, " "username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(res1)
+            results.setdefault("step4", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: username option is disable")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-username=.*".format(hypervisor_type),
-                                      " ")
+        cli = self.vw_cli_base_update(
+            base_cli, "--{0}-username=.*".format(hypervisor_type), " "
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, "
-                           "username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, " "username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(res1)
+            results.setdefault("step5", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py
--- /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py	2023-03-06 06:16:09.866646 +0000
@@ -5,46 +5,48 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136710')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136710")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-            wrong_mode = 'xen'
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+            wrong_mode = "xen"
         else:
-            wrong_mode = 'libvirt'
-        base_cli = self.vw_cli_base() + '-d'
+            wrong_mode = "libvirt"
+        base_cli = self.vw_cli_base() + "-d"
 
         # Case Steps
         logger.info(">>>step1: run virt-who by cli with all valid parameters")
         data, tty_output, rhsm_output = self.vw_start(base_cli, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who by cli with unconsistent parameters")
-        cli = re.sub("--{0}-owner=".format(hypervisor_type),
-                     "--{0}-owner=".format(wrong_mode),
-                     base_cli)
+        cli = re.sub(
+            "--{0}-owner=".format(hypervisor_type),
+            "--{0}-owner=".format(wrong_mode),
+            base_cli,
+        )
         data, tty_output, rhsm_output = self.vw_start(cli, exp_send=1)
         msg = "does not match virtualization backend"
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=0)
         res2 = self.vw_msg_search(tty_output, msg, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # Case Result
         notes = list()
-        if hypervisor_type == 'kubevirt':
+        if hypervisor_type == "kubevirt":
             notes.append("(step1) No kubeconfig option for cli")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1751441")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py
--- /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py	2023-03-06 06:16:09.896133 +0000
@@ -2,81 +2,87 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136710')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136710")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         guest_uuid = self.get_hypervisor_guestuuid()
         self.vw_option_enable("[global]", filename="/etc/virt-who.conf")
         self.vw_option_enable("interval", filename="/etc/virt-who.conf")
-        self.vw_option_update_value("interval", '120', filename="/etc/virt-who.conf")
+        self.vw_option_update_value("interval", "120", filename="/etc/virt-who.conf")
         self.vw_option_enable("debug", filename="/etc/virt-who.conf")
-        self.vw_option_update_value("debug", 'True', filename="/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", filename="/etc/virt-who.conf")
         self.vw_option_enable("[defaults]", filename="/etc/virt-who.conf")
         self.vw_option_enable("owner", filename="/etc/virt-who.conf")
-        self.vw_option_update_value("owner", 'xxx', filename="/etc/virt-who.conf")
+        self.vw_option_update_value("owner", "xxx", filename="/etc/virt-who.conf")
         self.vw_option_enable("env", filename="/etc/virt-who.conf")
-        self.vw_option_update_value("env", 'xxx', filename="/etc/virt-who.conf")
+        self.vw_option_update_value("env", "xxx", filename="/etc/virt-who.conf")
 
         # Case Steps
-        logger.info(">>>step1: configure two same mode in different path then run virt-who -c")
+        logger.info(
+            ">>>step1: configure two same mode in different path then run virt-who -c"
+        )
         config_name_1 = "virtwho-config-1"
         config_name_2 = "virtwho-config-2"
         config_file_1 = "/etc/virt-who.d/{0}.conf".format(config_name_1)
         config_file_2 = "/root/{0}.conf".format(config_name_2)
         self.vw_etc_d_mode_create(config_name_1, config_file_1)
         self.vw_etc_d_mode_create(config_name_2, config_file_2)
         cmd = "virt-who -c {0} -i 60".format(config_file_2)
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
-        res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60)
+        res1 = self.op_normal_value(
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60
+        )
         res2 = self.vw_msg_search(output=tty_output, msg="\[.*DEBUG\]", exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         logger.info(">>>step2: check virt-who didn't run config_file_1")
         num = rhsm_output.count('"guestId": "{0}"'.format(guest_uuid))
         logger.info("Actual mapping info num: {0}".format(num))
         logger.info("Expected mapping info num: 1 for sat63 above and stage")
-        results.setdefault('step2', []).append(num == 1)
+        results.setdefault("step2", []).append(num == 1)
 
         logger.info(">>>step3: check '#virt-who -o -c' with wrong config file")
         wrong_file = "xxx"
         error_msg = "No valid configuration file provided using -c/--config"
         cmd = "virt-who -d -o -c {0}".format(wrong_file)
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=0)
         res1 = self.op_normal_value(data, exp_error=2, exp_thread=0, exp_send=0)
         res2 = self.vw_msg_search(tty_output, error_msg, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: run virt-who with -c option multiple times")
         self.vw_etc_d_delete_all()
         config_file_1 = "/root/{0}.conf".format(config_name_1)
         self.vw_etc_d_mode_create(config_name_1, config_file_1)
         cmd = "virt-who -c {0} -c {1}".format(config_file_1, config_file_2)
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=120)
-        results.setdefault('step4', []).append(res)
+        res = self.op_normal_value(
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=120
+        )
+        results.setdefault("step4", []).append(res)
 
         logger.info(">>>step5: check virt-who has run both config")
         num = rhsm_output.count('"guestId": "{0}"'.format(guest_uuid))
         logger.info("Actual mapping info num: {0}".format(num))
-        register_type = self.get_config('hypervisor_type')
+        register_type = self.get_config("hypervisor_type")
         if "satellite62" in register_type:
             logger.info("Expected mapping info num: 1 for sat62")
-            results.setdefault('step5', []).append(num == 1)
+            results.setdefault("step5", []).append(num == 1)
         else:
             logger.info("Expected mapping info num: 2 for sat63 above and stage")
-            results.setdefault('step5', []).append(num == 2)
-
+            results.setdefault("step5", []).append(num == 2)
 
         # Case Result
-        self.vw_case_result(results)
\ No newline at end of file
+        self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py
--- /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py	2023-03-06 06:16:09.895420 +0000
@@ -5,103 +5,124 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136574')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136574")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        base_cli = self.vw_cli_base() + '-d'
-        msg_list = ["Unable to login|"
-                    "incorrect user.*|"
-                    "Authentication failure|"
-                    "Incorrect.*username|"
-                    "Unauthorized|"
-                    "Error.* backend|"
-                    "Permission denied"]
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        base_cli = self.vw_cli_base() + "-d"
+        msg_list = [
+            "Unable to login|"
+            "incorrect user.*|"
+            "Authentication failure|"
+            "Incorrect.*username|"
+            "Unauthorized|"
+            "Error.* backend|"
+            "Permission denied"
+        ]
 
         # Case Steps
         logger.info(">>>step1: password option is good value")
         data, tty_output, rhsm_output = self.vw_start(base_cli, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: password option is wrong value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-password=.*".format(hypervisor_type),
-                                      "--{0}-password=xxxxx".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-password=.*".format(hypervisor_type),
+            "--{0}-password=xxxxx".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, "
-                           "password value is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, "
+                "password value is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res1)
+            results.setdefault("step2", []).append(res1)
         else:
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: password option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-password=.*".format(hypervisor_type),
-                                      "--{0}-password=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-password=.*".format(hypervisor_type),
+            "--{0}-password=Á∫¢Â∏Ω‚Ç¨467aa".format(hypervisor_type),
+        )
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, "
-                           "password value is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, "
+                "password value is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step3', []).append(res1)
+            results.setdefault("step3", []).append(res1)
         else:
             msg = "'password': is not in latin1 encoding"
             data, tty_output, rhsm_output = self.vw_start(cli)
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=0, exp_send=0
+            )
             res2 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: password option is null value")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-password=.*".format(hypervisor_type),
-                                      "--{0}-password= ".format(hypervisor_type))
+        cli = self.vw_cli_base_update(
+            base_cli,
+            "--{0}-password=.*".format(hypervisor_type),
+            "--{0}-password= ".format(hypervisor_type),
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, "
-                           "username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, " "username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(res1)
+            results.setdefault("step4", []).append(res1)
         else:
             msg_list = ["PASSWORD.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: password option is disable")
-        cli = self.vw_cli_base_update(base_cli,
-                                      "--{0}-password=.*".format(hypervisor_type),
-                                      " ")
+        cli = self.vw_cli_base_update(
+            base_cli, "--{0}-password=.*".format(hypervisor_type), " "
+        )
         data, tty_output, rhsm_output = self.vw_start(cli)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, "
-                           "username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, " "username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(res1)
+            results.setdefault("step5", []).append(res1)
         else:
             msg_list = ["PASSWORD.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(tty_output, msg_list, exp_exist=True)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
-
would reformat /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py
--- /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py	2023-03-06 06:16:10.023754 +0000
@@ -2,97 +2,112 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136577')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136577")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         sysconfig_file = "/etc/sysconfig/virt-who"
         guest_uuid = self.get_hypervisor_guestuuid()
         option_tested = "VIRTWHO_{0}_OWNER".format(hypervisor_type.upper())
         self.vw_etc_sys_mode_enable()
 
         # Case Steps
         logger.info(">>>step1: owner option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: owner option is wrong value")
-        self.vw_option_update_value(option_tested, 'xxxxx', sysconfig_file)
+        self.vw_option_update_value(option_tested, "xxxxx", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner.* is different|Communication with subscription manager failed"]
+        msg_list = [
+            "owner.* is different|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: owner option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', sysconfig_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["codec can't decode|codec can't encode|Communication with subscription manager failed|owner.* is different"]
+        msg_list = [
+            "codec can't decode|codec can't encode|Communication with subscription manager failed|owner.* is different"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: owner option is null value")
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner not in|owner.* not set|virt-who can't be started|Communication with subscription manager failed"]
+        msg_list = [
+            "owner not in|owner.* not set|virt-who can't be started|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: owner option is disable")
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner not in|owner.* not set|virt-who can't be started|Communication with subscription manager failed"]
+        msg_list = [
+            "owner not in|owner.* not set|virt-who can't be started|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: owner option is disable but another config is ok")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["owner not in|owner.* not set|Communication with subscription manager failed"]
+        msg_list = [
+            "owner not in|owner.* not set|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: owner option is null but another config is ok")
         self.vw_option_enable(option_tested, sysconfig_file)
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["owner not in|owner.* not set|Communication with subscription manager failed"]
+        msg_list = [
+            "owner not in|owner.* not set|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step7', []).append(res1)
-        results.setdefault('step7', []).append(res2)
+        results.setdefault("step7", []).append(res1)
+        results.setdefault("step7", []).append(res2)
 
         # Case Result
         notes = list()
         if "libvirt" not in hypervisor_type:
-            notes.append("Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log")
+            notes.append(
+                "Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530254")
-        self.vw_case_result(results, notes)
\ No newline at end of file
+        self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py
--- /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py	2023-03-06 06:16:10.045434 +0000
@@ -2,109 +2,128 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136579')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136579")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         sysconfig_file = "/etc/sysconfig/virt-who"
         guest_uuid = self.get_hypervisor_guestuuid()
         option_tested = "VIRTWHO_{0}_SERVER".format(hypervisor_type.upper())
         self.vw_etc_sys_mode_enable()
 
         # Case Steps
         logger.info(">>>step1: server option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: server option is wrong value")
-        self.vw_option_update_value(option_tested, 'xxxxx', sysconfig_file)
+        self.vw_option_update_value(option_tested, "xxxxx", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["Name or service not known|Connection timed out|Failed to connect|Error in .* backend"]
+        msg_list = [
+            "Name or service not known|Connection timed out|Failed to connect|Error in .* backend"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: server option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', sysconfig_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["Name or service not known|Connection timed out|Failed to connect|Error in .* backend|Unable to connect"]
+        msg_list = [
+            "Name or service not known|Connection timed out|Failed to connect|Error in .* backend|Unable to connect"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: server option is null value")
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-local mode will be used to instead when server option is null for libvirt-remote")
-            msg_list = ["Name or service not known|Connection timed out|Failed to connect|Error in .* backend"]
+            logger.warning(
+                "libvirt-local mode will be used to instead when server option is null for libvirt-remote"
+            )
+            msg_list = [
+                "Name or service not known|Connection timed out|Failed to connect|Error in .* backend"
+            ]
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
         else:
             msg_list = ["SERVER.* not set|virt-who can't be started|No host supplied"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: server option is disable")
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-local mode will be used to instead when server option is disabled for libvirt-remote")
-            msg_list = ["Name or service not known|Connection timed out|Failed to connect|Error in .* backend"]
+            logger.warning(
+                "libvirt-local mode will be used to instead when server option is disabled for libvirt-remote"
+            )
+            msg_list = [
+                "Name or service not known|Connection timed out|Failed to connect|Error in .* backend"
+            ]
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
         else:
             msg_list = ["SERVER.* not set|virt-who can't be started|No host supplied"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: server option is disable but another config is ok")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         msg_list = ["SERVER.* not set|Error in .* backend|No host supplied"]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: server option is null but another config is ok")
         self.vw_option_enable(option_tested, sysconfig_file)
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         msg_list = ["SERVER.* not set|Error in .* backend|No host supplied"]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step7', []).append(res1)
-        results.setdefault('step7', []).append(res2)
+        results.setdefault("step7", []).append(res1)
+        results.setdefault("step7", []).append(res2)
 
         # Case Result
         notes = list()
         if "libvirt" not in hypervisor_type:
-            notes.append("Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log")
+            notes.append(
+                "Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530557")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py
--- /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py	2023-03-06 06:16:10.101883 +0000
@@ -2,101 +2,118 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136578')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136578")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         sysconfig_file = "/etc/sysconfig/virt-who"
         guest_uuid = self.get_hypervisor_guestuuid()
         option_tested = "VIRTWHO_{0}_ENV".format(hypervisor_type.upper())
         self.vw_etc_sys_mode_enable()
 
         # Case Steps
         logger.info(">>>step1: env option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
- 
+        results.setdefault("step1", []).append(res)
+
         logger.info(">>>step2: env option is wrong value")
-        self.vw_option_update_value(option_tested, 'xxxxx', sysconfig_file)
+        self.vw_option_update_value(option_tested, "xxxxx", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env.*differs|env.* is different|Communication with subscription manager failed"]
+        msg_list = [
+            "env.*differs|env.* is different|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: env option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', sysconfig_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["codec can't decode|Communication with subscription manager failed|env.*differs"]
+        msg_list = [
+            "codec can't decode|Communication with subscription manager failed|env.*differs"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: env option is null value")
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: env option is disable")
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: env option is disable but another config is ok")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["env not in|env.* not set|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: env option is null but another config is ok")
         self.vw_option_enable(option_tested, sysconfig_file)
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["env not in|env.* not set|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step7', []).append(res1)
-        results.setdefault('step7', []).append(res2)
+        results.setdefault("step7", []).append(res1)
+        results.setdefault("step7", []).append(res2)
 
         # Case Result
         notes = list()
-        register_type = self.get_config('register_type')
+        register_type = self.get_config("register_type")
         if "stage" in register_type:
-            notes.append("Bug(Step2, Step3): Set env to wrong or special value, still can sent report normally for stage")
+            notes.append(
+                "Bug(Step2, Step3): Set env to wrong or special value, still can sent report normally for stage"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530426")
         if "libvirt" not in hypervisor_type:
-            notes.append("Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log")
+            notes.append(
+                "Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530254")
-        self.vw_case_result(results, notes)
\ No newline at end of file
+        self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py
--- /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py	2023-03-06 05:02:18.592378 +0000
+++ /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py	2023-03-06 06:16:10.155147 +0000
@@ -2,117 +2,140 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136580')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136580")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         sysconfig_file = "/etc/sysconfig/virt-who"
         guest_uuid = self.get_hypervisor_guestuuid()
         option_tested = "VIRTWHO_{0}_USERNAME".format(hypervisor_type.upper())
         self.vw_etc_sys_mode_enable()
 
         # Case Steps
         logger.info(">>>step1: username option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: username option is wrong value")
-        self.vw_option_update_value(option_tested, 'xxxxx', sysconfig_file)
+        self.vw_option_update_value(option_tested, "xxxxx", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"]
+        msg_list = [
+            "Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: username option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', sysconfig_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"]
+        msg_list = [
+            "Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: username option is null value")
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(res1)
+            results.setdefault("step4", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: username option is disable")
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(res1)
+            results.setdefault("step5", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: username option is disable but another config is ok")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step6', []).append(res1)
+            results.setdefault("step6", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=1
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step6', []).append(res1)
-            results.setdefault('step6', []).append(res2)
+            results.setdefault("step6", []).append(res1)
+            results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: username option is null but another config is ok")
         self.vw_option_enable(option_tested, sysconfig_file)
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step7', []).append(res1)
+            results.setdefault("step7", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=1
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step7', []).append(res1)
-            results.setdefault('step7', []).append(res2)
+            results.setdefault("step7", []).append(res1)
+            results.setdefault("step7", []).append(res2)
 
         # Case Result
         notes = list()
         if "libvirt" not in hypervisor_type:
-            notes.append("Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log")
+            notes.append(
+                "Bug(Step4,Step5,Step6,Step7): other unexpected ERROR msg found in rhsm.log"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530841")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py
--- /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py	2023-03-06 06:16:10.279350 +0000
@@ -5,40 +5,39 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136709')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] < '0.25.7':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136709")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] < "0.25.7":
             self.vw_case_skip("virt-who version")
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        '''http_proxy, no_proxy are moved to /etc/virt-who.conf, will not test this exception for rhel9'''
+        """http_proxy, no_proxy are moved to /etc/virt-who.conf, will not test this exception for rhel9"""
         if "RHEL-9" in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         sysconfig_file = "/etc/sysconfig/virt-who"
         vw_conf = "/etc/virt-who.conf"
         conf_file = "/etc/virt-who.d/virtwho-config.conf"
-        self.vw_option_enable('[global]', vw_conf)
-        self.vw_option_enable('debug', vw_conf)
-        self.vw_option_update_value('debug', 'True', vw_conf)
-        self.vw_option_enable('[defaults]', vw_conf)
-        self.vw_etc_d_mode_create('virtwho-config', conf_file)
+        self.vw_option_enable("[global]", vw_conf)
+        self.vw_option_enable("debug", vw_conf)
+        self.vw_option_update_value("debug", "True", vw_conf)
+        self.vw_option_enable("[defaults]", vw_conf)
+        self.vw_etc_d_mode_create("virtwho-config", conf_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
+        register_server = register_config["server"]
         hypervisor_config = self.get_hypervisor_config()
-        hypervisor_server = hypervisor_config['server']
+        hypervisor_server = hypervisor_config["server"]
         good_squid_server = "{0}:{1}".format(deploy.proxy.server, deploy.proxy.port)
         wrong_squid_server = "10.73.3.24:9999"
-        types = {'type1': 'http_proxy',
-                 'type2': 'https_proxy'}
+        types = {"type1": "http_proxy", "type2": "https_proxy"}
 
         # Case Steps
         logger.info(">>>step1: run with good proxy server")
         for name, option in sorted(types.items(), key=lambda item: item[0]):
             logger.info("+++ {0}: run virt-who to check {1} +++".format(name, option))
@@ -48,16 +47,18 @@
                 value = "https://{0}".format(good_squid_server)
             self.vw_option_add(option, value, filename=sysconfig_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             res2 = self.vw_msg_search(
-                rhsm_output, "Connection built.*{0}".format(good_squid_server))
+                rhsm_output, "Connection built.*{0}".format(good_squid_server)
+            )
             res3 = self.vw_msg_search(
-                rhsm_output, "Using proxy.*{0}".format(good_squid_server))
-            results.setdefault('step1', []).append(res1)
-            results.setdefault('step1', []).append(res2)
-            results.setdefault('step1', []).append(res3)
+                rhsm_output, "Using proxy.*{0}".format(good_squid_server)
+            )
+            results.setdefault("step1", []).append(res1)
+            results.setdefault("step1", []).append(res2)
+            results.setdefault("step1", []).append(res3)
             self.vw_option_del(option, filename=sysconfig_file)
 
         logger.info(">>>step2: run with bad proxy server and no_proxy")
         for name, option in sorted(types.items(), key=lambda item: item[0]):
             logger.info("=== {0}: bad {1} test ===".format(name, option))
@@ -66,43 +67,45 @@
                 value = "http://{0}".format(wrong_squid_server)
             if option == "https_proxy":
                 value = "https://{0}".format(wrong_squid_server)
             self.vw_option_add(option, value, filename=sysconfig_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=0, exp_error=True)
-            error_msg = ["Connection refused|"
-                         "Cannot connect to proxy|"
-                         "Connection timed out"]
-            res1 = self.op_normal_value(data, exp_error='1|2', exp_thread=1, exp_send=0)
+            error_msg = [
+                "Connection refused|" "Cannot connect to proxy|" "Connection timed out"
+            ]
+            res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, error_msg)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
 
-            logger.info("+++ Configure no_proxy=[hypervisor_server] "
-                        "and rhsm_no_proxy=[register_server] +++")
+            logger.info(
+                "+++ Configure no_proxy=[hypervisor_server] "
+                "and rhsm_no_proxy=[register_server] +++"
+            )
             self.vw_option_add("no_proxy", register_server, sysconfig_file)
             self.vw_option_update_value("no_proxy", hypervisor_server, sysconfig_file)
             self.vw_option_enable("rhsm_no_proxy", vw_conf)
             self.vw_option_update_value("rhsm_no_proxy", register_server, vw_conf)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-            if hypervisor_type == 'xen':
+            if hypervisor_type == "xen":
                 res3 = self.op_normal_value(data, exp_error=2, exp_thread=1, exp_send=1)
             else:
                 res3 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res3)
-            self.vw_option_del('no_proxy', sysconfig_file)
+            results.setdefault("step2", []).append(res3)
+            self.vw_option_del("no_proxy", sysconfig_file)
             self.vw_option_del(option, sysconfig_file)
-            self.vw_option_disable('rhsm_no_proxy', vw_conf)
+            self.vw_option_disable("rhsm_no_proxy", vw_conf)
 
         # Case Result
         self.vw_case_result(results)
 
-        '''WONTFIX bz1739358 - [XEN] virt-who can send mapping to server but always print 
-        errors when bad http(s)_proxy and good no_proxy values are configured'''
+        """WONTFIX bz1739358 - [XEN] virt-who can send mapping to server but always print 
+        errors when bad http(s)_proxy and good no_proxy values are configured"""
 
-        '''WONTFIX bz1716337 - virt-who doesn't connect all hypervisors by proxy'''
+        """WONTFIX bz1716337 - virt-who doesn't connect all hypervisors by proxy"""
 
-        '''
+        """
         For below scenarios, virt-who connect hypervisor not by proxy.
         "RHEL-8" + ('libvirt-remote', 'hyperv', 'kubevirt')
         "RHEL-7" + "http_proxy" + ('esx', 'libvirt-remote', 'xen', 'rhevm', 'kubevirt')
         "RHEL-7" + "http_proxy" + ('libvirt-remote', 'hyperv', 'kubevirt')
-        '''
+        """
would reformat /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py
--- /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py	2023-03-06 06:16:10.282131 +0000
@@ -2,127 +2,158 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136581')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136581")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        if hypervisor_type == 'libvirt-remote':
-            hypervisor_type = 'libvirt'
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        if hypervisor_type == "libvirt-remote":
+            hypervisor_type = "libvirt"
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         sysconfig_file = "/etc/sysconfig/virt-who"
         guest_uuid = self.get_hypervisor_guestuuid()
         option_tested = "VIRTWHO_{0}_PASSWORD".format(hypervisor_type.upper())
         self.vw_etc_sys_mode_enable()
 
         # Case Steps
         logger.info(">>>step1: password option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: password option is wrong value")
-        self.vw_option_update_value(option_tested, 'xxxxx', sysconfig_file)
+        self.vw_option_update_value(option_tested, "xxxxx", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, password value is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, password value is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res1)
+            results.setdefault("step2", []).append(res1)
         else:
-            msg_list = ["Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+            msg_list = [
+                "Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"
+            ]
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: password option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', sysconfig_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, password value is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, password value is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res1)
+            results.setdefault("step2", []).append(res1)
         else:
-            msg_list = ["Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+            msg_list = [
+                "Unable to login|incorrect user.*|Authentication failure|Incorrect.*username|Unauthorized|Error.* backend|Permission denied"
+            ]
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: password option is null value")
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(res1)
+            results.setdefault("step4", []).append(res1)
         else:
             msg_list = ["PASSWORD.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: password option is disable")
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(res1)
+            results.setdefault("step5", []).append(res1)
         else:
             msg_list = ["PASSWORD.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: password option is disable but another config is ok")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_option_disable(option_tested, sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step6', []).append(res1)
+            results.setdefault("step6", []).append(res1)
         else:
             msg_list = ["PASSWORD.* not set"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=1
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step6', []).append(res1)
-            results.setdefault('step6', []).append(res2)
+            results.setdefault("step6", []).append(res1)
+            results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: password option is null but another config is ok")
         self.vw_option_enable(option_tested, sysconfig_file)
-        self.vw_option_update_value(option_tested, '', sysconfig_file)
+        self.vw_option_update_value(option_tested, "", sysconfig_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step7', []).append(res1)
+            results.setdefault("step7", []).append(res1)
         else:
             msg_list = ["PASSWORD.* not set"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=1
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step7', []).append(res1)
-            results.setdefault('step7', []).append(res2)
+            results.setdefault("step7", []).append(res1)
+            results.setdefault("step7", []).append(res2)
 
         # Case Result
         notes = list()
         if "rhevm" in hypervisor_type or "hyperv" in hypervisor_type:
-            notes.append("Bug(Step3): password unsupport unicode characters for rhevm and hyperv")
+            notes.append(
+                "Bug(Step3): password unsupport unicode characters for rhevm and hyperv"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1581022")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py
--- /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.354339 +0000
@@ -2,80 +2,88 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136586')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136586")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         option_tested = "type"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step1: type option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
-        steps = {'step2': 'xxx', 'step3': 'Á∫¢Â∏Ω‚Ç¨467aa', 'step4': ''}
+        steps = {"step2": "xxx", "step3": "Á∫¢Â∏Ω‚Ç¨467aa", "step4": ""}
         for step, value in sorted(steps.items(), key=lambda item: item[0]):
             logger.info(f">>>{step}: type option is wrong '{value}'")
             self.vw_option_update_value(option_tested, f"{value}", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=0, exp_send=0)
             res2 = self.msg_validation(rhsm_output, ["virt-who can't be started"])
-            results.setdefault(f'{step}', []).append(res1)
-            results.setdefault(f'{step}', []).append(res2)
+            results.setdefault(f"{step}", []).append(res1)
+            results.setdefault(f"{step}", []).append(res2)
             if "RHEL-9" in compose_id:
-                res3 = self.msg_validation(rhsm_output,
-                                           [f"Unsupported virtual type '{value}' is set"])
-                results.setdefault(f'{step}', []).append(res3)
+                res3 = self.msg_validation(
+                    rhsm_output, [f"Unsupported virtual type '{value}' is set"]
+                )
+                results.setdefault(f"{step}", []).append(res3)
 
         logger.info(">>>step5: type option is disable")
-        logger.warning("libvirt-local mode will be used to instead when type option is disabled")
+        logger.warning(
+            "libvirt-local mode will be used to instead when type option is disabled"
+        )
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         msg_list = ["Error in .* backend"]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: type option is disable but another config is ok")
-        logger.warning("libvirt-local mode will be used to instead when type option is disabled")
+        logger.warning(
+            "libvirt-local mode will be used to instead when type option is disabled"
+        )
         config_name_ok = "virtwho-config-ok"
         config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
         self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         msg_list = ["Error in .* backend"]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: type option is null but another config is ok")
-        logger.warning("invalid config will be ignored, and run the valid config normally")
+        logger.warning(
+            "invalid config will be ignored, and run the valid config normally"
+        )
         self.vw_option_enable(option_tested, config_file)
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         error_num = 0
         if "RHEL-9" in compose_id:
             error_num = 1
         res1 = self.op_normal_value(data, exp_error=error_num, exp_thread=1, exp_send=1)
-        results.setdefault('step7', []).append(res1)
+        results.setdefault("step7", []).append(res1)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.376153 +0000
@@ -5,101 +5,109 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136585')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136585")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         option_tested = "[.*]"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        vw_pkg = self.pkg_check(self.ssh_host(), 'virt-who')
-        msg_list = ["no section headers|"
-                    "Error in .* backend|"
-                    "do not have any valid section headers"]
+        vw_pkg = self.pkg_check(self.ssh_host(), "virt-who")
+        msg_list = [
+            "no section headers|"
+            "Error in .* backend|"
+            "do not have any valid section headers"
+        ]
 
         # Case Steps
         logger.info(">>>step1: header option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: header option is space value")
         self.vw_option_update_name(option_tested, "[ ]", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        if vw_pkg[9:15] >= '0.25.7':
+        if vw_pkg[9:15] >= "0.25.7":
             res1 = self.op_normal_value(data, exp_error=2, exp_thread=0, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
         else:
             logger.warning("Sapce value[ ] is acceptable for header option")
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res1)
+            results.setdefault("step2", []).append(res1)
 
         logger.info(">>>step3: header option is Á∫¢Â∏Ω‚Ç¨467aa value")
         logger.info("Special value is acceptable for header option")
-        self.vw_option_update_name(option_tested, '[Á∫¢Â∏Ω‚Ç¨467aa]', config_file)
+        self.vw_option_update_name(option_tested, "[Á∫¢Â∏Ω‚Ç¨467aa]", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res1)
+        results.setdefault("step3", []).append(res1)
 
         logger.info(">>>step4: header option is null value")
-        self.vw_option_update_name(option_tested, '[]', config_file)
+        self.vw_option_update_name(option_tested, "[]", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        if vw_pkg[9:15] >= '0.25.7':
+        if vw_pkg[9:15] >= "0.25.7":
             res1 = self.op_normal_value(data, exp_error=3, exp_thread=0, exp_send=0)
         else:
             logger.warning(
-                "libvirt-local mode will be used to instead when header option is null")
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+                "libvirt-local mode will be used to instead when header option is null"
+            )
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
         res2 = self.msg_validation(rhsm_output, msg_list)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: header option is disable")
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        if vw_pkg[9:15] >= '0.25.7':
+        if vw_pkg[9:15] >= "0.25.7":
             res1 = self.op_normal_value(data, exp_error=3, exp_thread=0, exp_send=0)
         else:
             logger.warning(
-                "libvirt-local mode will be used when run without header option")
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+                "libvirt-local mode will be used when run without header option"
+            )
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
         res2 = self.msg_validation(rhsm_output, msg_list)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: owner option is disable but another config is ok")
         config_name_ok = "virtwho-config-ok"
         config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
         self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         msg_list = ["no section headers"]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: owner option is null but another config is ok")
         self.vw_option_enable(option_tested, config_file)
-        self.vw_option_update_name(option_tested, '[]', config_file)
+        self.vw_option_update_name(option_tested, "[]", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         msg_list = ["no section headers"]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list)
-        results.setdefault('step7', []).append(res1)
-        results.setdefault('step7', []).append(res2)
+        results.setdefault("step7", []).append(res1)
+        results.setdefault("step7", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.441087 +0000
@@ -5,91 +5,97 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136587')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136587")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         option_tested = "owner"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step1: owner option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: owner option is wrong value")
         self.vw_option_update_value(option_tested, "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner.* is different|"
-                    "Communication with subscription manager failed"]
+        msg_list = [
+            "owner.* is different|" "Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: skip this step because owner cannot be set to no-ascci")
         # logger.info(">>>step3: owner option is Á∫¢Â∏Ω‚Ç¨467aa value")
         # self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', config_file)
         # data, tty_output, rhsm_output = self.vw_start()
         # res1 = self.op_normal_value(data, exp_error="nz", exp_thread=1, exp_send=0)
         # results.setdefault('step3', []).append(res1)
 
         logger.info(">>>step4: owner option is null value")
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner not in|"
-                    "owner.* not set|"
-                    "virt-who can't be started|"
-                    "Communication with subscription manager failed"]
+        msg_list = [
+            "owner not in|"
+            "owner.* not set|"
+            "virt-who can't be started|"
+            "Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: owner option is disable")
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: owner option is disable but another config is ok")
         logger.warning(
-            "libvirt-local mode will be used to instead when type option is disabled")
+            "libvirt-local mode will be used to instead when type option is disabled"
+        )
         config_name_ok = "virtwho-config-ok"
         config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
         self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["owner not in|"
-                    "owner.* not set|"
-                    "Communication with subscription manager failed"]
+        msg_list = [
+            "owner not in|"
+            "owner.* not set|"
+            "Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: owner option is null but another config is ok")
         self.vw_option_enable(option_tested, config_file)
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step7', []).append(res1)
-        results.setdefault('step7', []).append(res2)
+        results.setdefault("step7", []).append(res1)
+        results.setdefault("step7", []).append(res2)
 
         # Case Result
-        self.vw_case_result(results)
\ No newline at end of file
+        self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.490169 +0000
@@ -2,103 +2,120 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136588')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136588")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.24.6':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.24.6":
             self.vw_case_skip("virt-who version")
-        '''env was not supported by rhel8 and rhel9 any more'''
+        """env was not supported by rhel8 and rhel9 any more"""
         if "RHEL-7" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         option_tested = "env"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step1: env option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: env option is wrong value")
         self.vw_option_update_value(option_tested, "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env.*differs|env.* is different|Communication with subscription manager failed"]
+        msg_list = [
+            "env.*differs|env.* is different|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: env option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', config_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["codec can't decode|Communication with subscription manager failed|env.*differs"]
+        msg_list = [
+            "codec can't decode|Communication with subscription manager failed|env.*differs"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: env option is null value")
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: env option is disable")
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: env option is disable but another config is ok")
         config_name_ok = "virtwho-config-ok"
         config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
         self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["env not in|env.* not set|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: env option is null but another config is ok")
         self.vw_option_enable(option_tested, config_file)
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["env not in|env.* not set|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step7', []).append(res1)
-        results.setdefault('step7', []).append(res2)
+        results.setdefault("step7", []).append(res1)
+        results.setdefault("step7", []).append(res2)
 
         # Case Result
         notes = list()
-        register_type = self.get_config('register_type')
+        register_type = self.get_config("register_type")
         if "stage" in register_type:
-            notes.append("Bug(Step2,Step3,Step4,Step7): Set env to wrong or special or null value, still can sent report normally for stage")
+            notes.append(
+                "Bug(Step2,Step3,Step4,Step7): Set env to wrong or special or null value, still can sent report normally for stage"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530426")
         else:
-            notes.append("Bug(Step4,Step7): Set env to null value, still can sent report normally for sat62/sat63")
+            notes.append(
+                "Bug(Step4,Step7): Set env to null value, still can sent report normally for sat62/sat63"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530290")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.548046 +0000
@@ -2,137 +2,166 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136589')
-        compose_id = self.get_config('rhel_compose')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136589")
+        compose_id = self.get_config("rhel_compose")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         option_tested = "server"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step1: server option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
- 
+        results.setdefault("step1", []).append(res)
+
         logger.info(">>>step2: server option is wrong value")
         self.vw_option_update_value(option_tested, "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["Name or service not known|"
-                    "Connection timed out|"
-                    "Failed to connect|"
-                    "Error in .* backend|"
-                    "Invalid server IP address"]
+        msg_list = [
+            "Name or service not known|"
+            "Connection timed out|"
+            "Failed to connect|"
+            "Error in .* backend|"
+            "Invalid server IP address"
+        ]
         if "ahv" in hypervisor_type:
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=0, exp_send=0
+            )
         else:
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: server option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', config_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        if hypervisor_type in ['esx', 'ahv']:
+        if hypervisor_type in ["esx", "ahv"]:
             msg = "Option server needs to be ASCII characters only"
             if "ahv" in hypervisor_type:
                 msg = "Invalid server IP address provided"
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=0, exp_send=0
+            )
             res2 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
         else:
-            msg_list = ["Name or service not known|"
-                        "Connection timed out|"
-                        "Failed to connect|"
-                        "Error in .* backend|"
-                        "Unable to connect|"
-                        "Unable to login"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+            msg_list = [
+                "Name or service not known|"
+                "Connection timed out|"
+                "Failed to connect|"
+                "Error in .* backend|"
+                "Unable to connect|"
+                "Unable to login"
+            ]
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
- 
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+
         logger.info(">>>step4: server option is null value")
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-local mode will be used to instead when server option is null for libvirt-remote")
-            msg_list = ["Name or service not known|"
-                        "Connection timed out|"
-                        "Failed to connect|"
-                        "Error in .* backend"]
+            logger.warning(
+                "libvirt-local mode will be used to instead when server option is null for libvirt-remote"
+            )
+            msg_list = [
+                "Name or service not known|"
+                "Connection timed out|"
+                "Failed to connect|"
+                "Error in .* backend"
+            ]
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
         else:
             msg_list = ["SERVER.* not set|virt-who can't be started|No host supplied"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: server option is disable")
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-local mode will be used to instead when server option is disabled for libvirt-remote")
-            msg_list = ["Name or service not known|"
-                        "Connection timed out|"
-                        "Failed to connect|"
-                        "Error in .* backend"]
+            logger.warning(
+                "libvirt-local mode will be used to instead when server option is disabled for libvirt-remote"
+            )
+            msg_list = [
+                "Name or service not known|"
+                "Connection timed out|"
+                "Failed to connect|"
+                "Error in .* backend"
+            ]
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
         else:
             msg_list = ["SERVER.* not set|virt-who can't be started|No host supplied"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
- 
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
+
         logger.info(">>>step6: server option is disable but another config is ok")
         config_name_ok = "virtwho-config-ok"
         config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
         self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         msg_list = ["SERVER.* not set|Error in .* backend|No host supplied"]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step6', []).append(res1)
-        results.setdefault('step6', []).append(res2)
- 
+        results.setdefault("step6", []).append(res1)
+        results.setdefault("step6", []).append(res2)
+
         logger.info(">>>step7: server option is null but another config is ok")
         self.vw_option_enable(option_tested, config_file)
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
-        msg_list = ["SERVER.* not set|"
-                    "Error in .* backend|"
-                    "No host supplied|"
-                    "server needs to be set"]
+        msg_list = [
+            "SERVER.* not set|"
+            "Error in .* backend|"
+            "No host supplied|"
+            "server needs to be set"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step7', []).append(res1)
-        results.setdefault('step7', []).append(res2)
+        results.setdefault("step7", []).append(res1)
+        results.setdefault("step7", []).append(res2)
 
         # Case Result
         notes = list()
         if "esx" in hypervisor_type:
             notes.append("Bug(Step3): server not support non-ascii character")
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1727203")
         if hypervisor_type in ("rhevm", "xen", "hyperv"):
-            notes.append("Bug(Step4): Set server to null value, virt-who still can be started")
+            notes.append(
+                "Bug(Step4): Set server to null value, virt-who still can be started"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1516209")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.608339 +0000
@@ -5,130 +5,143 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136590')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136590")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         option_tested = "username"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        error_msg = ["Unable to login|"
-                     "incorrect user.*|"
-                     "Authentication failure|"
-                     "Authentication failed|"
-                     "Incorrect.*username|"
-                     "Unauthorized|"
-                     "Error.* backend|"
-                     "Permission denied|"
-                     "HTTP Auth Failed"]
+        error_msg = [
+            "Unable to login|"
+            "incorrect user.*|"
+            "Authentication failure|"
+            "Authentication failed|"
+            "Incorrect.*username|"
+            "Unauthorized|"
+            "Error.* backend|"
+            "Permission denied|"
+            "HTTP Auth Failed"
+        ]
 
         # Case Steps
         logger.info(">>>step1: username option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: username option is wrong value")
         self.vw_option_update_value(option_tested, "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: username option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', config_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" in compose_id:
-            pkg = self.pkg_check(self.ssh_host(), 'python-requests').split('-')[2]
-            if pkg[16:21] >= '2.20':
+            pkg = self.pkg_check(self.ssh_host(), "python-requests").split("-")[2]
+            if pkg[16:21] >= "2.20":
                 res1 = self.op_normal_value(
-                    data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+                    data, exp_error="1|2|3", exp_thread=1, exp_send=0
+                )
                 res2 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
             else:
                 msg = "not in latin1 encoding"
                 res1 = self.op_normal_value(
-                    data, exp_error="1|2|3", exp_thread=0, exp_send=0)
+                    data, exp_error="1|2|3", exp_thread=0, exp_send=0
+                )
                 res2 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
         else:
             res1 = self.op_normal_value(
-                data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: username option is null value")
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt-remote" in hypervisor_type:
             logger.warning(
-                "libvirt-remote can use sshkey to connect, username is not necessary")
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(res1)
+            results.setdefault("step4", []).append(res1)
         else:
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=1, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: username option is disable")
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt-remote" in hypervisor_type:
             logger.warning(
-                "libvirt-remote can use sshkey to connect, username is not necessary")
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(res1)
+            results.setdefault("step5", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: username option is disable but another config is ok")
         config_name_ok = "virtwho-config-ok"
         config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
         self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt-remote" in hypervisor_type:
             logger.warning(
-                "libvirt-remote can use sshkey to connect, username is not necessary")
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step6', []).append(res1)
+            results.setdefault("step6", []).append(res1)
         else:
             msg_list = ["USERNAME.* not set"]
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=1)
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step6', []).append(res1)
-            results.setdefault('step6', []).append(res2)
+            results.setdefault("step6", []).append(res1)
+            results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: username option is null but another config is ok")
         self.vw_option_enable(option_tested, config_file)
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt-remote" in hypervisor_type:
             logger.warning(
-                "libvirt-remote can use sshkey to connect, username is not necessary")
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step7', []).append(res1)
+            results.setdefault("step7", []).append(res1)
         else:
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=1)
             res2 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
-            results.setdefault('step7', []).append(res1)
-            results.setdefault('step7', []).append(res2)
+            results.setdefault("step7", []).append(res1)
+            results.setdefault("step7", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py	2023-03-06 06:16:10.637801 +0000
@@ -2,68 +2,77 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136592')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136592")
         config = self.get_hypervisor_config()
-        hypervisor_type = config['type']
-        hypervisor_password = config['password']
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        hypervisor_type = config["type"]
+        hypervisor_password = config["password"]
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         msg_list = '"encrypted_password" cannot be decrypted|'
-        encrypted_pwd_null = ''
-        encrypted_pwd_wrong = 'xxxxxx'
-        steps = {'step2': encrypted_pwd_null, 'step3': encrypted_pwd_wrong}
+        encrypted_pwd_null = ""
+        encrypted_pwd_wrong = "xxxxxx"
+        steps = {"step2": encrypted_pwd_null, "step3": encrypted_pwd_wrong}
 
         # Case Steps
         logger.info(">>>step1: encrypted_password is good value")
         encrypted_pwd = self.vw_encrypted(hypervisor_password, "-p")
         self.vw_option_disable("password", filename=config_file)
         self.vw_option_add("encrypted_password", encrypted_pwd, filename=config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
-        
-        for step, value in sorted(steps.items(), key=lambda item:item[0]):
-            logger.info(">>>%s: run virt-who with encrypted_password='%s'" % (step, value))
-            self.vw_option_update_value("encrypted_password", '%s' % value, config_file)
-            if 'libvirt-remote' in hypervisor_type:
+        results.setdefault("step1", []).append(res)
+
+        for step, value in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>%s: run virt-who with encrypted_password='%s'" % (step, value)
+            )
+            self.vw_option_update_value("encrypted_password", "%s" % value, config_file)
+            if "libvirt-remote" in hypervisor_type:
                 data, tty_output, rhsm_output = self.vw_start(exp_send=1)
                 res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                res2 = 'True'
+                res2 = "True"
             else:
-                data, tty_output, rhsm_output = self.vw_start(exp_send=0, exp_error=True)
-                res1 = self.op_normal_value(data, exp_error='1|2', exp_thread=0, exp_send=0)
+                data, tty_output, rhsm_output = self.vw_start(
+                    exp_send=0, exp_error=True
+                )
+                res1 = self.op_normal_value(
+                    data, exp_error="1|2", exp_thread=0, exp_send=0
+                )
                 res2 = self.vw_msg_search(rhsm_output, msg_list, exp_exist=True)
             logger.info(">>>add another valid extra config")
             config_name_ok = "virtwho-config-ok"
             config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
             self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
-            if 'libvirt-remote' in hypervisor_type:
+            if "libvirt-remote" in hypervisor_type:
                 data, tty_output, rhsm_output = self.vw_start(exp_send=1)
                 res3 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                res4 = 'True'
+                res4 = "True"
             else:
-                data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_error=True)
+                data, tty_output, rhsm_output = self.vw_start(
+                    exp_send=1, exp_error=True
+                )
                 res3 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=1)
                 res4 = self.vw_msg_search(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('{0}'.format(step), []).append(res1)
-            results.setdefault('{0}'.format(step), []).append(res2)
-            results.setdefault('{0}'.format(step), []).append(res3)
-            results.setdefault('{0}'.format(step), []).append(res4)
+            results.setdefault("{0}".format(step), []).append(res1)
+            results.setdefault("{0}".format(step), []).append(res2)
+            results.setdefault("{0}".format(step), []).append(res3)
+            results.setdefault("{0}".format(step), []).append(res4)
             self.fd_delete(self.ssh_host(), config_file_ok)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py
--- /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.594378 +0000
+++ /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.646050 +0000
@@ -2,131 +2,160 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136591')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm', 'kubevirt'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136591")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm", "kubevirt"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         option_tested = "password"
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        msg_list = ["Unable to login|"
-                    "incorrect user.*|"
-                    "Authentication failure|"
-                    "Authentication failed|"
-                    "Incorrect.*username|"
-                    "Unauthorized|"
-                    "Error.* backend|"
-                    "Permission denied|"
-                    "HTTP Auth Failed"]
+        msg_list = [
+            "Unable to login|"
+            "incorrect user.*|"
+            "Authentication failure|"
+            "Authentication failed|"
+            "Incorrect.*username|"
+            "Unauthorized|"
+            "Error.* backend|"
+            "Permission denied|"
+            "HTTP Auth Failed"
+        ]
 
         # Case Steps
         logger.info(">>>step1: password option is good value")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: password option is wrong value")
         self.vw_option_update_value(option_tested, "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, password value is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, password value is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res1)
+            results.setdefault("step2", []).append(res1)
         else:
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: password option is Á∫¢Â∏Ω‚Ç¨467aa value")
-        self.vw_option_update_value(option_tested, 'Á∫¢Â∏Ω‚Ç¨467aa', config_file)
+        self.vw_option_update_value(option_tested, "Á∫¢Â∏Ω‚Ç¨467aa", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, "
-                           "password value is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, "
+                "password value is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step3', []).append(res1)
+            results.setdefault("step3", []).append(res1)
         else:
             if "RHEL-7" in compose_id:
                 msg = "'password': is not in latin1 encoding"
-                res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=0, exp_send=0)
+                res1 = self.op_normal_value(
+                    data, exp_error="1|2|3", exp_thread=0, exp_send=0
+                )
                 res2 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
             else:
-                res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
+                res1 = self.op_normal_value(
+                    data, exp_error="1|2|3", exp_thread=1, exp_send=0
+                )
                 res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: password option is null value")
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(res1)
+            results.setdefault("step4", []).append(res1)
         else:
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=1, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=1, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: password option is disable")
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step5', []).append(res1)
+            results.setdefault("step5", []).append(res1)
         else:
             msg_list_s5 = ["PASSWORD.* not set|virt-who can't be started"]
-            res1 = self.op_normal_value(data, exp_error="0|1|2", exp_thread=0, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error="0|1|2", exp_thread=0, exp_send=0
+            )
             res2 = self.msg_validation(rhsm_output, msg_list_s5, exp_exist=True)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
 
         logger.info(">>>step6: password option is disable but another config is ok")
         config_name_ok = "virtwho-config-ok"
         config_file_ok = "/etc/virt-who.d/{0}.conf".format(config_name_ok)
         self.vw_etc_d_mode_create(config_name_ok, config_file_ok)
         self.vw_option_disable(option_tested, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step6', []).append(res1)
+            results.setdefault("step6", []).append(res1)
         else:
             msg_list_s6 = ["PASSWORD.* not set"]
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=1
+            )
             res2 = self.msg_validation(rhsm_output, msg_list_s6, exp_exist=True)
-            results.setdefault('step6', []).append(res1)
-            results.setdefault('step6', []).append(res2)
+            results.setdefault("step6", []).append(res1)
+            results.setdefault("step6", []).append(res2)
 
         logger.info(">>>step7: password option is null but another config is ok")
         self.vw_option_enable(option_tested, config_file)
-        self.vw_option_update_value(option_tested, '', config_file)
+        self.vw_option_update_value(option_tested, "", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_error=True)
         if "libvirt-remote" in hypervisor_type:
-            logger.warning("libvirt-remote can use sshkey to connect, username is not necessary")
+            logger.warning(
+                "libvirt-remote can use sshkey to connect, username is not necessary"
+            )
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step7', []).append(res1)
+            results.setdefault("step7", []).append(res1)
         else:
-            res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=1)
+            res1 = self.op_normal_value(
+                data, exp_error="1|2|3", exp_thread=1, exp_send=1
+            )
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-            results.setdefault('step7', []).append(res1)
-            results.setdefault('step7', []).append(res2)
+            results.setdefault("step7", []).append(res1)
+            results.setdefault("step7", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.678508 +0000
@@ -5,79 +5,85 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136627')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136627")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
         self.system_unregister(self.ssh_host())
         self.vw_option_disable("hostname", "/etc/rhsm/rhsm.conf")
 
         # Case Steps
         try:
-            logger.info(">>>step1: run virt-who with rhsm_hostname, rhsm_port, "
-                        "rhsm_prefix good value")
+            logger.info(
+                ">>>step1: run virt-who with rhsm_hostname, rhsm_port, "
+                "rhsm_prefix good value"
+            )
             self.vw_option_add("rhsm_hostname", register_server, config_file)
             self.vw_option_add("rhsm_port", "443", config_file)
             self.vw_option_add("rhsm_prefix", register_prefix, config_file)
             self.vw_option_add("rhsm_username", register_username, config_file)
             self.vw_option_add("rhsm_password", register_password, config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step1', []).append(res)
+            results.setdefault("step1", []).append(res)
 
             logger.info(">>>step2: run virt-who with rhsm_hostname=xxxxxx")
             self.vw_option_update_value("rhsm_hostname", "xxxxxx", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             error_num = 1
-            if 'RHEL-9' in compose_id:
+            if "RHEL-9" in compose_id:
                 error_num = 2
-            res1 = self.op_normal_value(data, exp_error=error_num, exp_thread=1, exp_send=0)
+            res1 = self.op_normal_value(
+                data, exp_error=error_num, exp_thread=1, exp_send=0
+            )
             res2 = self.vw_msg_search(rhsm_output, "Name or service not known")
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
 
             logger.info(">>>step3: run virt-who with rhsm_hostname null value")
-            msg_list = ["Server error attempting a GET to /rhsm/status/|"
-                        "Communication with subscription manager failed"]
+            msg_list = [
+                "Server error attempting a GET to /rhsm/status/|"
+                "Communication with subscription manager failed"
+            ]
             self.vw_option_update_value("rhsm_hostname", " ", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error="nz", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
 
             logger.info(">>>step4: run virt-who with rhsm_hostname disable")
             self.vw_option_disable("rhsm_hostname", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error="nz", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
         except:
-            results.setdefault('step', []).append(False)
+            results.setdefault("step", []).append(False)
             pass
 
         finally:
             self.vw_option_enable("hostname", "/etc/rhsm/rhsm.conf")
 
         # Case Result
-        self.vw_case_result(results)
\ No newline at end of file
+        self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.719334 +0000
@@ -2,71 +2,73 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136628')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136628")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
         self.system_unregister(self.ssh_host())
         self.vw_option_disable("port", "/etc/rhsm/rhsm.conf")
 
         # Case Steps
         try:
-            logger.info(">>>step1: run virt-who with rhsm_hostname, rhsm_port, rhsm_prefix good value")
+            logger.info(
+                ">>>step1: run virt-who with rhsm_hostname, rhsm_port, rhsm_prefix good value"
+            )
             self.vw_option_add("rhsm_hostname", register_server, config_file)
             self.vw_option_add("rhsm_port", "443", config_file)
             self.vw_option_add("rhsm_prefix", register_prefix, config_file)
             self.vw_option_add("rhsm_username", register_username, config_file)
             self.vw_option_add("rhsm_password", register_password, config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step1', []).append(res)
+            results.setdefault("step1", []).append(res)
 
             logger.info(">>>step2: run virt-who with rhsm_port=123")
             self.vw_option_update_value("rhsm_port", "123", config_file)
             data, tty_output, rhsm_output = self.vw_start()
-            res1 = self.op_normal_value(data, exp_error='1|2', exp_thread=1, exp_send=0)
-            error_msg = ["Connection refused|"
-                         "Connection timed out"]
+            res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
+            error_msg = ["Connection refused|" "Connection timed out"]
             res2 = self.msg_validation(rhsm_output, error_msg)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
 
             logger.info(">>>step3: run virt-who with rhsm_port null value")
             self.vw_option_update_value("rhsm_port", " ", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step3', []).append(res1)
+            results.setdefault("step3", []).append(res1)
 
             logger.info(">>>step4: run virt-who with rhsm_port disable")
             self.vw_option_disable("rhsm_port", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step4', []).append(res1)
+            results.setdefault("step4", []).append(res1)
 
         except:
-            results.setdefault('step', []).append(False)
+            results.setdefault("step", []).append(False)
             pass
 
         finally:
             self.vw_option_enable("port", "/etc/rhsm/rhsm.conf")
 
would reformat /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.739246 +0000
@@ -5,77 +5,81 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137169')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137169")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
         self.system_unregister(self.ssh_host())
         self.vw_option_disable("prefix", "/etc/rhsm/rhsm.conf")
-        server_type = self.get_config('register_type')
+        server_type = self.get_config("register_type")
 
         # Case Steps
         try:
-            logger.info(">>>step1: run virt-who with rhsm_hostname, "
-                        "rhsm_port, rhsm_prefix good value")
+            logger.info(
+                ">>>step1: run virt-who with rhsm_hostname, "
+                "rhsm_port, rhsm_prefix good value"
+            )
             self.vw_option_add("rhsm_hostname", register_server, config_file)
             self.vw_option_add("rhsm_port", "443", config_file)
             self.vw_option_add("rhsm_prefix", register_prefix, config_file)
             self.vw_option_add("rhsm_username", register_username, config_file)
             self.vw_option_add("rhsm_password", register_password, config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step1', []).append(res)
+            results.setdefault("step1", []).append(res)
 
             logger.info(">>>step2: run virt-who with rhsm_prefix=/xxx")
             self.vw_option_update_value("rhsm_prefix", "/xxx", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error="nz", exp_thread=1, exp_send=0)
-            results.setdefault('step2', []).append(res1)
+            results.setdefault("step2", []).append(res1)
 
             logger.info(">>>step3: run virt-who with rhsm_prefix null value")
             self.vw_option_update_value("rhsm_prefix", " ", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             if "stage" in server_type:
                 res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                results.setdefault('step3', []).append(res1)
+                results.setdefault("step3", []).append(res1)
             else:
                 res1 = self.op_normal_value(
-                        data, exp_error="1|2", exp_thread=1, exp_send=0)
-                res2 = self.vw_msg_search(rhsm_output, 'HTTP error', exp_exist=True)
-                results.setdefault('step3', []).append(res1)
-                results.setdefault('step3', []).append(res2)
+                    data, exp_error="1|2", exp_thread=1, exp_send=0
+                )
+                res2 = self.vw_msg_search(rhsm_output, "HTTP error", exp_exist=True)
+                results.setdefault("step3", []).append(res1)
+                results.setdefault("step3", []).append(res2)
 
             logger.info(">>>step4: run virt-who with rhsm_prefix disable")
             self.vw_option_disable("rhsm_prefix", config_file)
             data, tty_output, rhsm_output = self.vw_start()
             if "stage" in server_type:
                 res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-                results.setdefault('step3', []).append(res1)
+                results.setdefault("step3", []).append(res1)
             else:
                 res1 = self.op_normal_value(
-                    data, exp_error="1|2", exp_thread=1, exp_send=0)
-                res2 = self.vw_msg_search(rhsm_output, 'HTTP error', exp_exist=True)
-                results.setdefault('step3', []).append(res1)
-                results.setdefault('step3', []).append(res2)
+                    data, exp_error="1|2", exp_thread=1, exp_send=0
+                )
+                res2 = self.vw_msg_search(rhsm_output, "HTTP error", exp_exist=True)
+                results.setdefault("step3", []).append(res1)
+                results.setdefault("step3", []).append(res2)
 
         finally:
             self.vw_option_enable("prefix", "/etc/rhsm/rhsm.conf")
 
         # Case Result
would reformat /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.825777 +0000
@@ -5,94 +5,98 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136630')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136630")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
         self.system_unregister(self.ssh_host())
 
         # Case Steps
-        logger.info(">>>step1: run virt-who with rhsm_hostname, rhsm_port, "
-                    "rhsm_prefix good value")
+        logger.info(
+            ">>>step1: run virt-who with rhsm_hostname, rhsm_port, "
+            "rhsm_prefix good value"
+        )
         self.vw_option_add("rhsm_hostname", register_server, config_file)
         self.vw_option_add("rhsm_port", "443", config_file)
         self.vw_option_add("rhsm_prefix", register_prefix, config_file)
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_password", register_password, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with rhsm_username=xxxxxx")
         error_msg = "Communication with subscription manager failed"
         self.vw_option_update_value("rhsm_username", "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: run virt-who with rhsm_username=Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ")
-        '''Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ username is not supported by candlepin'''
-        msg_list = ["codec can't decode|"
-                    "Communication with subscription manager failed"]
+        """Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ username is not supported by candlepin"""
+        msg_list = [
+            "codec can't decode|" "Communication with subscription manager failed"
+        ]
         self.vw_option_update_value("rhsm_username", "Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "RHEL-7" in compose_id:
-            pkg = self.pkg_check(self.ssh_host(), 'python-requests').split('-')[2]
-            if pkg[16:21] >= '2.20':
+            pkg = self.pkg_check(self.ssh_host(), "python-requests").split("-")[2]
+            if pkg[16:21] >= "2.20":
                 res1 = self.op_normal_value(
-                    data, exp_error="1|2", exp_thread=1, exp_send=0)
+                    data, exp_error="1|2", exp_thread=1, exp_send=0
+                )
                 res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
             else:
                 msg = "not in latin1 encoding"
                 res1 = self.op_normal_value(
-                    data, exp_error="1|2", exp_thread=0, exp_send=0)
+                    data, exp_error="1|2", exp_thread=0, exp_send=0
+                )
                 res2 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
         else:
-            res1 = self.op_normal_value(
-                data, exp_error="1|2", exp_thread=1, exp_send=0)
+            res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: run virt-who with rhsm_username null value")
         error_msg = "system is not registered or you are not root"
         self.vw_option_update_value("rhsm_username", " ", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         error_num = 1
-        if 'RHEL-9' in compose_id:
+        if "RHEL-9" in compose_id:
             error_num = 2
         res1 = self.op_normal_value(data, exp_error=error_num, exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: run virt-who with rhsm_username disable")
         self.vw_option_disable("rhsm_username", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=error_num, exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.843723 +0000
@@ -5,86 +5,89 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136631')
-        hypervisor_type = self.get_config('hypervisor_type')
-        compose_id = self.get_config('rhel_compose')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136631")
+        hypervisor_type = self.get_config("hypervisor_type")
+        compose_id = self.get_config("rhel_compose")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
         self.system_unregister(self.ssh_host())
 
         # Case Steps
-        logger.info(">>>step1: run virt-who with rhsm_hostname, "
-                    "rhsm_port, rhsm_prefix good value")
+        logger.info(
+            ">>>step1: run virt-who with rhsm_hostname, "
+            "rhsm_port, rhsm_prefix good value"
+        )
         self.vw_option_add("rhsm_hostname", register_server, config_file)
         self.vw_option_add("rhsm_port", "443", config_file)
         self.vw_option_add("rhsm_prefix", register_prefix, config_file)
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_password", register_password, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with rhsm_password=xxxxxx")
         error_msg = "Communication with subscription manager failed"
         self.vw_option_update_value("rhsm_password", "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: run virt-who with rhsm_password=Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ")
-        '''Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ password is supported by candlepin'''
+        """Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ password is supported by candlepin"""
         self.vw_option_update_value("rhsm_password", "Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         if "RHEL-7" in compose_id:
             msg = "not in latin1 encoding"
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=0, exp_send=0)
             res2 = self.vw_msg_search(rhsm_output, msg, exp_exist=True)
         else:
-            msg_list = ["codec can't decode|"
-                        "Communication with subscription manager failed"]
+            msg_list = [
+                "codec can't decode|" "Communication with subscription manager failed"
+            ]
             res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
             res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: run virt-who with rhsm_password null value")
         error_msg = "system is not registered or you are not root"
         self.vw_option_update_value("rhsm_password", " ", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         error_num = 1
-        if 'RHEL-9' in compose_id:
+        if "RHEL-9" in compose_id:
             error_num = 2
         res1 = self.op_normal_value(data, exp_error=error_num, exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         logger.info(">>>step5: run virt-who with rhsm_password disable")
         self.vw_option_disable("rhsm_password", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=error_num, exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py	2023-03-06 06:16:10.851160 +0000
@@ -5,29 +5,29 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136632')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136632")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
         self.system_unregister(self.ssh_host())
 
         # Case Steps
         logger.info(">>>step1: run virt-who with rhsm_encrypted_password good value")
         encrypted_value = self.vw_encrypted(register_password)
@@ -36,20 +36,20 @@
         self.vw_option_add("rhsm_prefix", register_prefix, config_file)
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_encrypted_password", encrypted_value, config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with rhsm_encrypted_password=xxxxxx")
         error_msg = "Communication with subscription manager failed"
         self.vw_option_update_value("rhsm_encrypted_password", "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        res1 = self.op_normal_value(data, exp_error='1|2', exp_thread=1, exp_send=0)
+        res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: skip this step")
         # logger.info(">>>step3: run virt-who with rhsm_encrypted_password=Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ")
         # self.vw_option_update_value("rhsm_encrypted_password", "Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ", config_file)
         # data, tty_output, rhsm_output = self.vw_start()
@@ -60,12 +60,12 @@
 
         logger.info(">>>step4: run virt-who with rhsm_encrypted_password null value")
         error_msg = 'Option "rhsm_encrypted_password" cannot be decrypted'
         self.vw_option_update_value("rhsm_encrypted_password", " ", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        res1 = self.op_normal_value(data, exp_error='1|2', exp_thread=1, exp_send=0)
+        res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py	2023-03-06 06:16:10.937462 +0000
@@ -2,51 +2,63 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136635')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136635")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
+        register_type = register_config["type"]
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
         host_name = self.get_hypervisor_hostname()
         if "esx" in hypervisor_type or "rhevm" in hypervisor_type:
-            steps = {'step1':'uuid', 'step2':'hostname', 'step3':'hwuuid'}
+            steps = {"step1": "uuid", "step2": "hostname", "step3": "hwuuid"}
         else:
-            steps = {'step1':'uuid', 'step2':'hostname'}
+            steps = {"step1": "uuid", "step2": "hostname"}
 
         # Case Steps
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: run virt-who to with hypervisor_id={1} and set filter_hosts".format(step, option))
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: run virt-who to with hypervisor_id={1} and set filter_hosts".format(
+                    step, option
+                )
+            )
             self.vw_option_add("hypervisor_id", option, config_file)
             if option == "hwuuid":
                 hypervisorId = host_hwuuid
             elif option == "hostname":
                 hypervisorId = host_name
             else:
                 hypervisorId = host_uuid
-            wildcard = hypervisorId[:3] + '*' + hypervisorId[4:]
-            sub_steps = {'step1':hypervisorId, 'step2': "*", 'step3': wildcard, 'step4': wildcard}
-            for key, value in sorted(sub_steps.items(),key=lambda item:item[0]):
+            wildcard = hypervisorId[:3] + "*" + hypervisorId[4:]
+            sub_steps = {
+                "step1": hypervisorId,
+                "step2": "*",
+                "step3": wildcard,
+                "step4": wildcard,
+            }
+            for key, value in sorted(sub_steps.items(), key=lambda item: item[0]):
                 if key == "step4":
-                    logger.info("++++ Set filter_hosts=* and exclude_hosts=%s ++++" % value)
+                    logger.info(
+                        "++++ Set filter_hosts=* and exclude_hosts=%s ++++" % value
+                    )
                     self.vw_option_add("filter_hosts", "*", config_file)
                     self.vw_option_add("exclude_hosts", value, config_file)
                 else:
                     logger.info("++++ Set filter_hosts={0} ++++".format(value))
                     self.vw_option_add("filter_hosts", value, config_file)
would reformat /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py	2023-03-06 06:16:11.003618 +0000
@@ -2,33 +2,38 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136639')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136639")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step1: add xxxxxx=aaa to config file")
         self.vw_option_add("xxxxxx", "aaa", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        res2 = self.vw_msg_search(rhsm_output, 'Ignoring unknown configuration option "xxxxxx"', exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        res2 = self.vw_msg_search(
+            rhsm_output,
+            'Ignoring unknown configuration option "xxxxxx"',
+            exp_exist=True,
+        )
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py	2023-03-06 06:16:11.045157 +0000
@@ -2,43 +2,48 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136711')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136711")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         invalid_file = "/etc/virt-who.d/{0}.conf.txt".format(config_name)
 
         # Case Steps
         logger.info(">>>step1: run virt-who with the expected config file name")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who with the unexpected config file name")
-        logger.warning("libvirt-local mode will be used to instead when no valid config")
+        logger.warning(
+            "libvirt-local mode will be used to instead when no valid config"
+        )
         cmd = "mv {0} {1}".format(config_file, invalid_file)
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="rename file")
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, ["Error in .* backend"], exp_exist=True)
-        res3 = self.vw_msg_search(rhsm_output, "not have any .*conf.* files but is not empty", exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
-        results.setdefault('step2', []).append(res3)
+        res3 = self.vw_msg_search(
+            rhsm_output, "not have any .*conf.* files but is not empty", exp_exist=True
+        )
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
+        results.setdefault("step2", []).append(res3)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py	2023-03-06 06:16:11.091189 +0000
@@ -2,61 +2,80 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136636')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type not in ('esx'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136636")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type not in ("esx"):
             self.vw_case_skip(hypervisor_type)
         # Bug 1461272 only be fixed in rhel8, so rhel7 doesn't support this function
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-7" in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
+        register_type = register_config["type"]
         host_uuid = self.get_hypervisor_hostuuid()
         host_hwuuid = self.get_hypervisor_hwuuid()
         host_name = self.get_hypervisor_hostname()
 
         # Case Steps
-        logger.info(">>>step1: run virt-who with filter_host_parents= to check the domain_id")
+        logger.info(
+            ">>>step1: run virt-who with filter_host_parents= to check the domain_id"
+        )
         self.vw_option_add("filter_host_parents", "", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
-        domain_id = re.findall(r"Skipping host '{0}' because its parent '(.*?)'".format(host_hwuuid), rhsm_output)[-1]
+        results.setdefault("step1", []).append(res)
+        domain_id = re.findall(
+            r"Skipping host '{0}' because its parent '(.*?)'".format(host_hwuuid),
+            rhsm_output,
+        )[-1]
         logger.info("Succeeded to find: {0}:{1}:{0}".format(host_hwuuid, domain_id))
         self.vw_option_del("filter_host_parents", config_file)
 
-        steps = {'step2':'uuid', 'step3':'hostname', 'step4':'hwuuid'}
-        for step, option in sorted(steps.items(),key=lambda item:item[0]):
-            logger.info(">>>{0}: run virt-who to with hypervisor_id={1} and set filter_host_parents".format(step, option))
+        steps = {"step2": "uuid", "step3": "hostname", "step4": "hwuuid"}
+        for step, option in sorted(steps.items(), key=lambda item: item[0]):
+            logger.info(
+                ">>>{0}: run virt-who to with hypervisor_id={1} and set filter_host_parents".format(
+                    step, option
+                )
+            )
             self.vw_option_add("hypervisor_id", option, config_file)
             if option == "hwuuid":
                 hypervisorId = host_hwuuid
             elif option == "hostname":
                 hypervisorId = host_name
             else:
                 hypervisorId = host_uuid
-            wildcard = domain_id[:3] + '*' + domain_id[4:]
-            sub_steps = {'step1':domain_id, 'step2': "*", 'step3': wildcard, 'step4': wildcard}
-            for key, value in sorted(sub_steps.items(),key=lambda item:item[0]):
+            wildcard = domain_id[:3] + "*" + domain_id[4:]
+            sub_steps = {
+                "step1": domain_id,
+                "step2": "*",
+                "step3": wildcard,
+                "step4": wildcard,
+            }
+            for key, value in sorted(sub_steps.items(), key=lambda item: item[0]):
                 if key == "step4":
-                    logger.info("++++ Set filter_host_parents={0} and exclude_host_parents=* ++++".format(value))
+                    logger.info(
+                        "++++ Set filter_host_parents={0} and exclude_host_parents=* ++++".format(
+                            value
+                        )
+                    )
                     self.vw_option_add("exclude_host_parents", "*", config_file)
                     self.vw_option_add("filter_host_parents", value, config_file)
                 else:
                     logger.info("++++ Set filter_host_parents={0} ++++".format(value))
                     self.vw_option_add("filter_host_parents", value, config_file)
would reformat /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py	2023-03-06 06:16:11.124906 +0000
@@ -2,92 +2,93 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136637')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136637")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
 
         # Case Steps
         logger.info(">>>step1: run virt-who with filter_hosts=''")
         self.vw_option_add("filter_hosts", r"''", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step1', []).append(s2)
+        results.setdefault("step1", []).append(s2)
 
         logger.info('>>>step2: run virt-who with filter_hosts=""')
-        self.vw_option_update_value("filter_hosts", r'\"\"', config_file)
+        self.vw_option_update_value("filter_hosts", r"\"\"", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(s1)
+        results.setdefault("step2", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step2', []).append(s2)
+        results.setdefault("step2", []).append(s2)
 
         logger.info(">>>step3: run virt-who with filter_hosts='host_uuid'")
         self.vw_option_update_value("filter_hosts", r"'%s'" % host_uuid, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(s1)
+        results.setdefault("step1", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step1', []).append(s2)
+        results.setdefault("step1", []).append(s2)
 
         logger.info('>>>step4: run virt-who with filter_hosts="host_uuid"')
-        self.vw_option_update_value("filter_hosts", r'\"%s\"' % host_uuid, config_file)
+        self.vw_option_update_value("filter_hosts", r"\"%s\"" % host_uuid, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(s1)
+        results.setdefault("step4", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step4', []).append(s2)
+        results.setdefault("step4", []).append(s2)
         self.vw_option_del("filter_hosts", config_file)
 
         logger.info(">>>step5: run virt-who with exclude_hosts=''")
         self.vw_option_add("exclude_hosts", r"''", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step5', []).append(s1)
+        results.setdefault("step5", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step5', []).append(s2)
+        results.setdefault("step5", []).append(s2)
 
         logger.info('>>>step6: run virt-who with exclude_hosts=""')
-        self.vw_option_update_value("exclude_hosts", r'\"\"', config_file)
+        self.vw_option_update_value("exclude_hosts", r"\"\"", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step6', []).append(s1)
+        results.setdefault("step6", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=True)
-        results.setdefault('step6', []).append(s2)
+        results.setdefault("step6", []).append(s2)
 
         logger.info(">>>step7: run virt-who with exclude_hosts='host_uuid'")
         self.vw_option_update_value("exclude_hosts", r"'%s'" % host_uuid, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step7', []).append(s1)
+        results.setdefault("step7", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step7', []).append(s2)
+        results.setdefault("step7", []).append(s2)
 
         logger.info('>>>step8: run virt-who with exclude_hosts="host_uuid"')
-        self.vw_option_update_value("exclude_hosts", r'\"%s\"' % host_uuid, config_file)
+        self.vw_option_update_value("exclude_hosts", r"\"%s\"" % host_uuid, config_file)
         data, tty_output, rhsm_output = self.vw_start()
         s1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step8', []).append(s1)
+        results.setdefault("step8", []).append(s1)
         s2 = self.vw_msg_search(str(data), host_uuid, exp_exist=False)
-        results.setdefault('step8', []).append(s2)
+        results.setdefault("step8", []).append(s2)
         self.vw_option_del("exclude_hosts", config_file)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py	2023-03-06 06:16:11.138384 +0000
@@ -2,50 +2,55 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136712')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136712")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_port = '443'
-        register_prefix = register_config['prefix']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_port = "443"
+        register_prefix = register_config["prefix"]
 
         # Case Steps
-        logger.info(">>>step1: run virt-who when all the options enabled with single quotes")
+        logger.info(
+            ">>>step1: run virt-who when all the options enabled with single quotes"
+        )
         self.vw_option_add("rhsm_hostname", register_server, config_file)
         self.vw_option_add("rhsm_port", register_port, config_file)
         self.vw_option_add("rhsm_prefix", register_prefix, config_file)
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_password", register_password, config_file)
-        cmd =  r'''sed -i "s|=\(.*\)|='\1'|g" {0}'''.format(config_file)
+        cmd = r"""sed -i "s|=\(.*\)|='\1'|g" {0}""".format(config_file)
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="update file")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
-        logger.info(">>>step2: run virt-who when all the options enabled with double quotes")
-        cmd =  r'''sed -i "s|'|\"|g" {0}'''.format(config_file)
+        logger.info(
+            ">>>step2: run virt-who when all the options enabled with double quotes"
+        )
+        cmd = r"""sed -i "s|'|\"|g" {0}""".format(config_file)
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="update file")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py	2023-03-06 06:16:11.147166 +0000
@@ -2,43 +2,58 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136731')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136731")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step1: interval is null value in /etc/virt-who.conf")
         self.vw_option_enable("interval", virtwho_conf)
-        self.vw_option_update_value("interval", '', virtwho_conf)
+        self.vw_option_update_value("interval", "", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600)
-        results.setdefault('step1', []).append(res)
+        res = self.op_normal_value(
+            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=3600
+        )
+        results.setdefault("step1", []).append(res)
 
-        logger.info(">>>step2: check virt-who firstly run interval in /etc/sysconfig/virt-who")
-        self.vw_option_update_value("interval", '120', virtwho_conf)
-        self.vw_option_enable("VIRTWHO_INTERVAL", '/etc/sysconfig/virt-who')
-        self.vw_option_update_value("VIRTWHO_INTERVAL", '60', '/etc/sysconfig/virt-who')
+        logger.info(
+            ">>>step2: check virt-who firstly run interval in /etc/sysconfig/virt-who"
+        )
+        self.vw_option_update_value("interval", "120", virtwho_conf)
+        self.vw_option_enable("VIRTWHO_INTERVAL", "/etc/sysconfig/virt-who")
+        self.vw_option_update_value("VIRTWHO_INTERVAL", "60", "/etc/sysconfig/virt-who")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
-        res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60, exp_loopnum=1, exp_looptime=60)
-        results.setdefault('step2', []).append(res)
+        res = self.op_normal_value(
+            data,
+            exp_error=0,
+            exp_thread=1,
+            exp_send=1,
+            exp_interval=60,
+            exp_loopnum=1,
+            exp_looptime=60,
+        )
+        results.setdefault("step2", []).append(res)
 
         # Case Result
         notes = list()
-        notes.append("Bug(Step1): failed to report mappings if configure 'interval=' value to null")
+        notes.append(
+            "Bug(Step1): failed to report mappings if configure 'interval=' value to null"
+        )
         notes.append("BZ: https://bugzilla.redhat.com/show_bug.cgi?id=1523482")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py	2023-03-06 06:16:11.221640 +0000
@@ -5,57 +5,63 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136716')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136716")
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        register_type = register_config["type"]
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        reporter_id_null = ''
+        reporter_id_null = ""
         reporter_id_non_ascii = "Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ"
-        steps = {'step2': reporter_id_null,
-                 'step3': reporter_id_non_ascii}
+        steps = {"step2": reporter_id_null, "step3": reporter_id_non_ascii}
         if "satellite" in register_type:
-            del steps['step3']
+            del steps["step3"]
 
         # Case Steps
         logger.info(">>>step1: get default reporter_id")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        default_reporter_id = data['reporter_id']
+        default_reporter_id = data["reporter_id"]
         logger.info("default reporter_id is {0}".format(default_reporter_id))
         results.setdefault("step1", []).append(res)
 
         for step, value in sorted(steps.items(), key=lambda item: item[0]):
-            logger.info(">>>{0}: run virt-who to check reporter_id({1})".format(
-                step, value))
+            logger.info(
+                ">>>{0}: run virt-who to check reporter_id({1})".format(step, value)
+            )
             self.vw_option_enable("reporter_id", virtwho_conf)
             self.vw_option_update_value("reporter_id", value, virtwho_conf)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             results.setdefault(step, []).append(res)
-            data['reporter_id'] = data['reporter_id']
+            data["reporter_id"] = data["reporter_id"]
             if value == reporter_id_null:
                 value = default_reporter_id
-            if value == data['reporter_id']:
-                logger.info("Succeeded to check, reporter_id({0}) is expected".format(
-                    data['reporter_id']))
+            if value == data["reporter_id"]:
+                logger.info(
+                    "Succeeded to check, reporter_id({0}) is expected".format(
+                        data["reporter_id"]
+                    )
+                )
                 results.setdefault(step, []).append(True)
             else:
-                logger.error("Failed to check, reporter_id({0}) is not expected".format(
-                    data['reporter_id']))
+                logger.error(
+                    "Failed to check, reporter_id({0}) is not expected".format(
+                        data["reporter_id"]
+                    )
+                )
                 results.setdefault(step, []).append(False)
 
         # Case Result
         notes = list()
         notes.append("Bug(step2): virt-who still uses null value for reporter_id")
would reformat /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py	2023-03-06 06:16:11.225643 +0000
@@ -2,30 +2,31 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136721')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136721")
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step: run with debug value is null in /etc/virt-who.conf")
         self.vw_option_enable("debug", virtwho_conf)
-        self.vw_option_update_value("debug", '', virtwho_conf)
+        self.vw_option_update_value("debug", "", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=False)
-        results.setdefault('step', []).append(res1)
-        results.setdefault('step', []).append(res2)
+        results.setdefault("step", []).append(res1)
+        results.setdefault("step", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py	2023-03-06 06:16:11.250822 +0000
@@ -2,30 +2,31 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136719')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136719")
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step: run with oneshot value is null")
         self.vw_option_enable("oneshot", virtwho_conf)
-        self.vw_option_update_value("oneshot", '', virtwho_conf)
+        self.vw_option_update_value("oneshot", "", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1, oneshot=False)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step', []).append(res)
+        results.setdefault("step", []).append(res)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py	2023-03-06 06:16:11.290012 +0000
@@ -2,65 +2,66 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137014')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137014")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name_1 = "virtwho-config-1"
         config_file_1 = "/root/{0}.conf".format(config_name_1)
         self.vw_etc_d_mode_create(config_name_1, config_file_1)
         config_name_2 = "virtwho-config-2"
         config_file_2 = "/etc/virt-who.d/{0}.conf".format(config_name_2)
         self.vw_etc_d_mode_create(config_name_2, config_file_2)
         guest_uuid = self.get_hypervisor_guestuuid()
 
         # Case Steps
         logger.info(">>>step1: 'configs' is valid file")
-        self.vw_option_enable('configs', virtwho_conf)
-        self.vw_option_update_value('configs', config_file_1, virtwho_conf)
+        self.vw_option_enable("configs", virtwho_conf)
+        self.vw_option_update_value("configs", config_file_1, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
         # check virt-who didn't run config_file_2
         num = rhsm_output.count('"guestId": "{0}"'.format(guest_uuid))
         logger.info("Actual mapping info num: {0}".format(num))
         logger.info("Expected mapping info num: 1 for sat63 above and stage")
-        results.setdefault('step1', []).append(num == 1)
+        results.setdefault("step1", []).append(num == 1)
 
         logger.info(">>>step2: 'configs' is null value")
-        self.vw_option_update_value('configs', '', virtwho_conf)
+        self.vw_option_update_value("configs", "", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res1)
+        results.setdefault("step2", []).append(res1)
         # check virt-who has run config_file_2
         num = rhsm_output.count('"guestId": "{0}"'.format(guest_uuid))
         logger.info("Actual mapping info num: {0}".format(num))
         logger.info("Expected mapping info num: 1 for sat63 above and stage")
-        results.setdefault('step2', []).append(num == 1)
+        results.setdefault("step2", []).append(num == 1)
 
         logger.info(">>>step3: 'configs' is wrong value")
-        self.vw_option_update_value('configs', 'xxxxxx', virtwho_conf)
-        error_msg_1 = 'Unable to read configuration file'
-        error_msg_2 = 'No valid configuration file provided using -c/--config'
+        self.vw_option_update_value("configs", "xxxxxx", virtwho_conf)
+        error_msg_1 = "Unable to read configuration file"
+        error_msg_2 = "No valid configuration file provided using -c/--config"
         data, tty_output, rhsm_output = self.vw_start(exp_send=0, exp_error=True)
         res1 = self.op_normal_value(data, exp_error=2, exp_thread=0, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg_1, exp_exist=True)
         res3 = self.vw_msg_search(rhsm_output, error_msg_2, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
-        results.setdefault('step3', []).append(res3)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+        results.setdefault("step3", []).append(res3)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py	2023-03-06 06:16:11.385380 +0000
@@ -2,50 +2,53 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136731')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136731")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
         self.vw_option_enable("[defaults]", virtwho_conf)
         self.vw_option_enable("hypervisor_id", virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_name = self.get_hypervisor_hostname()
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        register_owner = register_config['owner']
+        register_type = register_config["type"]
+        register_owner = register_config["owner"]
 
         # Case Steps
-        logger.info(">>>step: hypervisor_id in /etc/virt-who.d/x.conf has high priority")
-        self.vw_option_update_value('hypervisor_id', 'uuid', virtwho_conf)
-        self.vw_option_add('hypervisor_id', 'hostname', config_file)
+        logger.info(
+            ">>>step: hypervisor_id in /etc/virt-who.d/x.conf has high priority"
+        )
+        self.vw_option_update_value("hypervisor_id", "uuid", virtwho_conf)
+        self.vw_option_add("hypervisor_id", "hostname", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step', []).append(res)
+        results.setdefault("step", []).append(res)
         if host_name in data[register_owner].keys():
             logger.info("Succeeded to search hypervisorId:{0}".format(host_name))
-            results.setdefault('step', []).append(True)
+            results.setdefault("step", []).append(True)
         else:
             logger.error("Failed to search hypervisorId:{0}".format(host_name))
-            results.setdefault('step', []).append(False)
+            results.setdefault("step", []).append(False)
         if "satellite" in register_type:
             self.vw_web_host_delete(host_name, host_uuid)
         if "stage" in register_type:
             self.stage_consumer_clean(self.ssh_host(), register_config)
 
         # Case Result
-        self.vw_case_result(results)
\ No newline at end of file
+        self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py	2023-03-06 06:16:11.540793 +0000
@@ -2,88 +2,111 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136724')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136724")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.24.6':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.24.6":
             self.vw_case_skip("virt-who version")
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         self.vw_option_enable("[defaults]", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         register_config = self.get_register_config()
-        register_env = register_config['env']
+        register_env = register_config["env"]
 
         # Case Steps
-        logger.info(">>>step1: disable env option in /etc/virt-who.d/, set correct env in /etc/virt-who.conf")
+        logger.info(
+            ">>>step1: disable env option in /etc/virt-who.d/, set correct env in /etc/virt-who.conf"
+        )
         self.vw_option_disable("env", config_file)
         self.vw_option_enable("env", virtwho_conf)
         self.vw_option_update_value("env", register_env, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
-        logger.info(">>>step2: disable env option in /etc/virt-who.d/, set env=xxxxxx in /etc/virt-who.conf")
+        logger.info(
+            ">>>step2: disable env option in /etc/virt-who.d/, set env=xxxxxx in /etc/virt-who.conf"
+        )
         self.vw_option_update_value("env", "xxxxxx", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env.*differs|env.* is different|Communication with subscription manager failed"]
+        msg_list = [
+            "env.*differs|env.* is different|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
-        logger.info(">>>step3: disable env option in /etc/virt-who.d/, set env=Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ in /etc/virt-who.conf")
+        logger.info(
+            ">>>step3: disable env option in /etc/virt-who.d/, set env=Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ in /etc/virt-who.conf"
+        )
         self.vw_option_update_value("env", "Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["codec can't decode|Communication with subscription manager failed|env.*differs"]
+        msg_list = [
+            "codec can't decode|Communication with subscription manager failed|env.*differs"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
-        logger.info(">>>step4: disable env option in /etc/virt-who.d/, set env= in /etc/virt-who.conf")
+        logger.info(
+            ">>>step4: disable env option in /etc/virt-who.d/, set env= in /etc/virt-who.conf"
+        )
         self.vw_option_update_value("env", "", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"]
+        msg_list = [
+            "env not in|env.* not set|virt-who can't be started|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
-        logger.info(">>>step5: correct env in /etc/virt-who.conf, but wrong env in /etc/virt-who.d/ config file")
+        logger.info(
+            ">>>step5: correct env in /etc/virt-who.conf, but wrong env in /etc/virt-who.d/ config file"
+        )
         self.vw_option_update_value("env", register_env, virtwho_conf)
         self.vw_option_enable("env", config_file)
         self.vw_option_update_value("env", "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["env.*differs|env.* is different|Communication with subscription manager failed"]
+        msg_list = [
+            "env.*differs|env.* is different|Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         # Case Result
         notes = list()
-        register_type = self.get_config('register_type')
+        register_type = self.get_config("register_type")
         if "stage" in register_type:
-            notes.append("Bug(Step2,Step3,Step4,Step5): Set env to wrong or special or null value, still can sent report normally for stage")
+            notes.append(
+                "Bug(Step2,Step3,Step4,Step5): Set env to wrong or special or null value, still can sent report normally for stage"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530426")
         else:
-            notes.append("Bug(Step4): Set env to null value, still can sent report normally for sat62/sat63")
+            notes.append(
+                "Bug(Step4): Set env to null value, still can sent report normally for sat62/sat63"
+            )
             notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1530290")
         self.vw_case_result(results, notes)
would reformat /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py	2023-03-06 05:02:18.595378 +0000
+++ /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py	2023-03-06 06:16:11.541447 +0000
@@ -5,86 +5,98 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136727')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136727")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         self.vw_option_enable("[defaults]", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         guest_uuid = self.get_hypervisor_guestuuid()
         register_config = self.get_register_config()
-        register_owner = register_config['owner']
+        register_owner = register_config["owner"]
 
         # Case Steps
-        logger.info(">>>step1: disable owner option in /etc/virt-who.d/, "
-                    "set correct owner in /etc/virt-who.conf")
+        logger.info(
+            ">>>step1: disable owner option in /etc/virt-who.d/, "
+            "set correct owner in /etc/virt-who.conf"
+        )
         self.vw_option_disable("owner", config_file)
         self.vw_option_enable("owner", virtwho_conf)
         self.vw_option_update_value("owner", register_owner, virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         res2 = self.vw_msg_search(rhsm_output, guest_uuid, exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
-        logger.info(">>>step2: disable owner option in /etc/virt-who.d/, "
-                    "set owner=xxxxxx in /etc/virt-who.conf")
+        logger.info(
+            ">>>step2: disable owner option in /etc/virt-who.d/, "
+            "set owner=xxxxxx in /etc/virt-who.conf"
+        )
         self.vw_option_update_value("owner", "xxxxxx", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner.* is different|"
-                    "Communication with subscription manager failed"]
+        msg_list = [
+            "owner.* is different|" "Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: skip this step because owner cannot be set to no-ascci")
         # logger.info(">>>step3: disable owner option in /etc/virt-who.d/, "
         #             "set owner=Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ in /etc/virt-who.conf")
         # self.vw_option_update_value("owner", "Á∫¢Â∏Ω¬©¬•¬Æ√∞œÄ‚àâ", virtwho_conf)
         # data, tty_output, rhsm_output = self.vw_start()
         # res1 = self.op_normal_value(data, exp_error="nz", exp_thread=1, exp_send=0)
         # results.setdefault('step3', []).append(res1)
 
-        logger.info(">>>step4: disable owner option in /etc/virt-who.d/, "
-                    "set owner= in /etc/virt-who.conf")
+        logger.info(
+            ">>>step4: disable owner option in /etc/virt-who.d/, "
+            "set owner= in /etc/virt-who.conf"
+        )
         self.vw_option_update_value("owner", "", virtwho_conf)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner not in|"
-                    "owner.* not set|"
-                    "virt-who can't be started|"
-                    "Communication with subscription manager failed"]
+        msg_list = [
+            "owner not in|"
+            "owner.* not set|"
+            "virt-who can't be started|"
+            "Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2|3", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step4', []).append(res1)
-        results.setdefault('step4', []).append(res2)
+        results.setdefault("step4", []).append(res1)
+        results.setdefault("step4", []).append(res2)
 
-        logger.info(">>>step5: correct owner in /etc/virt-who.conf, "
-                    "but wrong owner in /etc/virt-who.d/ config file")
+        logger.info(
+            ">>>step5: correct owner in /etc/virt-who.conf, "
+            "but wrong owner in /etc/virt-who.d/ config file"
+        )
         self.vw_option_update_value("owner", register_owner, virtwho_conf)
         self.vw_option_enable("owner", config_file)
         self.vw_option_update_value("owner", "xxxxxx", config_file)
         data, tty_output, rhsm_output = self.vw_start()
-        msg_list = ["owner.* is different|"
-                    "Communication with subscription manager failed"]
+        msg_list = [
+            "owner.* is different|" "Communication with subscription manager failed"
+        ]
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
         res2 = self.msg_validation(rhsm_output, msg_list, exp_exist=True)
-        results.setdefault('step5', []).append(res1)
-        results.setdefault('step5', []).append(res2)
+        results.setdefault("step5", []).append(res1)
+        results.setdefault("step5", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
 
 
would reformat /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py
--- /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py	2023-03-06 06:16:11.564460 +0000
@@ -2,61 +2,94 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137110')
-        hypervisor_type = self.get_config('hypervisor_type')
-        register_type = self.get_config('register_type')
-        if 'stage' in register_type:
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137110")
+        hypervisor_type = self.get_config("hypervisor_type")
+        register_type = self.get_config("register_type")
+        if "stage" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         virtwho_conf = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', virtwho_conf)
-        self.vw_option_enable('debug', virtwho_conf)
-        self.vw_option_update_value('debug', 'True', virtwho_conf)
+        self.vw_option_enable("[global]", virtwho_conf)
+        self.vw_option_enable("debug", virtwho_conf)
+        self.vw_option_update_value("debug", "True", virtwho_conf)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_name = self.get_hypervisor_hostname()
         register_config = self.get_register_config()
-        ssh_sat = register_config['ssh_sat']
-        default_org = 'Default_Organization'
-        extra_org = 'Virtwho_Org'
-        org_list = {'step1':default_org, 'step2':extra_org}
+        ssh_sat = register_config["ssh_sat"]
+        default_org = "Default_Organization"
+        extra_org = "Virtwho_Org"
+        org_list = {"step1": default_org, "step2": extra_org}
 
-        for step, org in sorted(org_list.items(), key=lambda item:item[0]):
+        for step, org in sorted(org_list.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run with owner={1}".format(step, org))
-            host_id = self.satellite_host_id(self.ssh_host(), register_config, host_name, host_uuid)
-            if 'libvirt-local' not in hypervisor_type and 'vdsm' not in hypervisor_type:
-                self.vw_option_update_value('owner', org, config_file)
+            host_id = self.satellite_host_id(
+                self.ssh_host(), register_config, host_name, host_uuid
+            )
+            if "libvirt-local" not in hypervisor_type and "vdsm" not in hypervisor_type:
+                self.vw_option_update_value("owner", org, config_file)
             if host_id is not None and host_id != "":
                 self.vw_web_host_delete(host_name, host_uuid)
             if org == extra_org:
-                register_config['owner'] = extra_org
+                register_config["owner"] = extra_org
             self.system_unregister(self.ssh_host())
             self.system_register(self.ssh_host(), register_type, register_config)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             if org == default_org:
-                res2 = self.satellite_hosts_search(ssh_sat, register_config, default_org, host_name, host_uuid, exp_exist=True)
-                res3 = self.satellite_hosts_search(ssh_sat, register_config, extra_org, host_name, host_uuid, exp_exist=False)
+                res2 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    default_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=True,
+                )
+                res3 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    extra_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=False,
+                )
             else:
-                res2 = self.satellite_hosts_search(ssh_sat, register_config, default_org, host_name, host_uuid, exp_exist=False)
-                res3 = self.satellite_hosts_search(ssh_sat, register_config, extra_org, host_name, host_uuid, exp_exist=True)
+                res2 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    default_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=False,
+                )
+                res3 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    extra_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=True,
+                )
             results.setdefault(step, []).append(res1)
             results.setdefault(step, []).append(res2)
             results.setdefault(step, []).append(res3)
 
         logger.info(">>>step finally: delete host and hypervisor from extra_org")
-        host_id = self.satellite_host_id(self.ssh_host(), register_config, host_name, host_uuid)
+        host_id = self.satellite_host_id(
+            self.ssh_host(), register_config, host_name, host_uuid
+        )
         if host_id is not None and host_id != "":
             self.vw_web_host_delete(host_name, host_uuid)
         self.system_unregister(self.ssh_host())
 
         # Case Result
would reformat /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py
--- /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py	2023-03-06 06:16:11.693111 +0000
@@ -2,35 +2,36 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137111')
-        hypervisor_type = self.get_config('hypervisor_type')
-        register_type = self.get_config('register_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137111")
+        hypervisor_type = self.get_config("hypervisor_type")
+        register_type = self.get_config("register_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
-        if 'stage' in register_type:
+        if "stage" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         self.system_unregister(self.ssh_host())
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
-        register_prefix = register_config['prefix']
-        ssh_sat = register_config['ssh_sat']
-        default_org = 'Default_Organization'
-        extra_org = 'Virtwho_Org'
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
+        register_prefix = register_config["prefix"]
+        ssh_sat = register_config["ssh_sat"]
+        default_org = "Default_Organization"
+        extra_org = "Virtwho_Org"
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_option_add("rhsm_hostname", register_server, config_file)
         self.vw_option_add("rhsm_port", "443", config_file)
@@ -38,48 +39,86 @@
         self.vw_option_add("rhsm_username", register_username, config_file)
         self.vw_option_add("rhsm_password", register_password, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_name = self.get_hypervisor_hostname()
 
-        org_list = {'step1':default_org, 'step2':extra_org}
-        for step, org in sorted(org_list.items(), key=lambda item:item[0]):
+        org_list = {"step1": default_org, "step2": extra_org}
+        for step, org in sorted(org_list.items(), key=lambda item: item[0]):
             logger.info(">>>{0}: run with owner={1}".format(step, org))
-            self.vw_option_update_value('owner', '{0}'.format(org), config_file)
-            host_id = self.satellite_host_id(self.ssh_host(), register_config, host_name, host_uuid)
+            self.vw_option_update_value("owner", "{0}".format(org), config_file)
+            host_id = self.satellite_host_id(
+                self.ssh_host(), register_config, host_name, host_uuid
+            )
             if host_id is not None and host_id != "":
                 self.vw_web_host_delete(host_name, host_uuid)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             if org == default_org:
-                res2 = self.satellite_hosts_search(ssh_sat, register_config, default_org, host_name, host_uuid, exp_exist=True)
-                res3 = self.satellite_hosts_search(ssh_sat, register_config, extra_org, host_name, host_uuid, exp_exist=False)
+                res2 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    default_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=True,
+                )
+                res3 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    extra_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=False,
+                )
             else:
-                res2 = self.satellite_hosts_search(ssh_sat, register_config, default_org, host_name, host_uuid, exp_exist=False)
-                res3 = self.satellite_hosts_search(ssh_sat, register_config, extra_org, host_name, host_uuid, exp_exist=True)
+                res2 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    default_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=False,
+                )
+                res3 = self.satellite_hosts_search(
+                    ssh_sat,
+                    register_config,
+                    extra_org,
+                    host_name,
+                    host_uuid,
+                    exp_exist=True,
+                )
             results.setdefault(step, []).append(res1)
             results.setdefault(step, []).append(res2)
             results.setdefault(step, []).append(res3)
 
-        logger.info(">>>step3: run with owner=%s and owner=%s" % (default_org, extra_org))
+        logger.info(
+            ">>>step3: run with owner=%s and owner=%s" % (default_org, extra_org)
+        )
         self.vw_web_host_delete(host_name, host_uuid)
         config_name_2 = "virtwho-config-2"
         config_file_2 = "/etc/virt-who.d/{0}.conf".format(config_name_2)
         cmd = "cp {0} {1}".format(config_file, config_file_2)
-        ret, output = self.runcmd(cmd, self.ssh_host(), desc='create config_file_2')
-        self.vw_option_update_value('[.*]', '[config_2]', config_file_2)
-        self.vw_option_update_value('owner', '{0}'.format(default_org), config_file)
-        self.vw_option_update_value('owner', '{0}'.format(extra_org), config_file_2)
+        ret, output = self.runcmd(cmd, self.ssh_host(), desc="create config_file_2")
+        self.vw_option_update_value("[.*]", "[config_2]", config_file_2)
+        self.vw_option_update_value("owner", "{0}".format(default_org), config_file)
+        self.vw_option_update_value("owner", "{0}".format(extra_org), config_file_2)
         data, tty_output, rhsm_output = self.vw_start(exp_send=2)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=2)
-        res2 = self.satellite_hosts_search(ssh_sat, register_config, default_org, host_name, host_uuid, exp_exist=True)
-        res3 = self.satellite_hosts_search(ssh_sat, register_config, extra_org, host_name, host_uuid, exp_exist=True)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
-        results.setdefault('step3', []).append(res3)
+        res2 = self.satellite_hosts_search(
+            ssh_sat, register_config, default_org, host_name, host_uuid, exp_exist=True
+        )
+        res3 = self.satellite_hosts_search(
+            ssh_sat, register_config, extra_org, host_name, host_uuid, exp_exist=True
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
+        results.setdefault("step3", []).append(res3)
 
         logger.info(">>>step finally: delete host/hypervisor from webui")
-        host_id = self.satellite_host_id(self.ssh_host(), register_config, host_name, host_uuid)
+        host_id = self.satellite_host_id(
+            self.ssh_host(), register_config, host_name, host_uuid
+        )
         if host_id is not None and host_id != "":
             self.vw_web_host_delete(host_name, host_uuid)
         self.vw_web_host_delete(host_name, host_uuid)
         self.system_unregister(self.ssh_host())
 
would reformat /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py
--- /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py	2023-03-06 06:16:11.814535 +0000
@@ -2,24 +2,25 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137102')
-        hypervisor_type = self.get_config('hypervisor_type')
-        register_type = self.get_config('register_type')
-        if 'stage' in register_type:
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137102")
+        hypervisor_type = self.get_config("hypervisor_type")
+        register_type = self.get_config("register_type")
+        if "stage" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         host_uuid = self.get_hypervisor_hostuuid()
@@ -30,54 +31,70 @@
 
         # Case Steps
         logger.info(">>>step1: run virt-who to send mappings")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: get guest_id and vw_host_uuid")
-        if 'libvirt-local' in hypervisor_type or 'vdsm' in hypervisor_type:
-            exp_list = {'hypervisor':'admin', 'guest':'admin'}
+        if "libvirt-local" in hypervisor_type or "vdsm" in hypervisor_type:
+            exp_list = {"hypervisor": "admin", "guest": "admin"}
         else:
             # vw_host_name = self.get_hostname(self.ssh_host())
             # out = self.satellite_hosts_get(self.ssh_host(), register_config, vw_host_name, "xxx")
             # vw_host_uuid = out['subscription_facet_attributes']['uuid']
             # hypervisor should be vw_host_uuid, but due to Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1455041
-            exp_list = {'hypervisor':'null', 'guest':'admin'}
+            exp_list = {"hypervisor": "null", "guest": "admin"}
 
         logger.info(">>>step3: check registered_by info for hypervisor and guest")
-        for check_type, exp in sorted(exp_list.items(), key=lambda item:item[0]):
+        for check_type, exp in sorted(exp_list.items(), key=lambda item: item[0]):
             logger.info(">>>check {0}".format(check_type))
             logger.info(">>>exp:{0}".format(exp))
             if check_type == "hypervisor":
-                output = self.satellite_hosts_get(self.ssh_host(), register_config,
-                                                  host_name, host_uuid, desc="get hypervisor info")
+                output = self.satellite_hosts_get(
+                    self.ssh_host(),
+                    register_config,
+                    host_name,
+                    host_uuid,
+                    desc="get hypervisor info",
+                )
             else:
-                output = self.satellite_hosts_get(self.ssh_host(), register_config,
-                                                  guest_name, guest_uuid, desc="get guest info")
+                output = self.satellite_hosts_get(
+                    self.ssh_host(),
+                    register_config,
+                    guest_name,
+                    guest_uuid,
+                    desc="get guest info",
+                )
             if output is not None:
                 user = output["subscription_facet_attributes"]["user"]
-                if user is not False and user is not None and 'login' in user.keys():
-                    registered_by = user['login']
+                if user is not False and user is not None and "login" in user.keys():
+                    registered_by = user["login"]
                     if registered_by == exp:
-                        logger.info("succeded to check registered_by is '{}'".format(exp))
-                        results.setdefault('step3', []).append(True)
+                        logger.info(
+                            "succeded to check registered_by is '{}'".format(exp)
+                        )
+                        results.setdefault("step3", []).append(True)
                     else:
-                        logger.error("failed to check registered_by is {0}, actually it's '{1}'" \
-                                .format(exp, registered_by))
-                        results.setdefault('step3', []).append(False)
+                        logger.error(
+                            "failed to check registered_by is {0}, actually it's '{1}'".format(
+                                exp, registered_by
+                            )
+                        )
+                        results.setdefault("step3", []).append(False)
                 else:
                     if output == exp:
-                        logger.info("succeded to check registered_by is '{}'".format(exp))
-                        results.setdefault('step3', []).append(True)
+                        logger.info(
+                            "succeded to check registered_by is '{}'".format(exp)
+                        )
+                        results.setdefault("step3", []).append(True)
             else:
                 logger.error("failed to get satellite {} info".format(check_type))
-                results.setdefault('step3', []).append(False)
+                results.setdefault("step3", []).append(False)
 
         # Case Result
         # notes = list()
         # if "libvirt-local" not in hypervisor_type and "vdsm" not in hypervisor_type:
         #     notes.append("Bug(step3): should show virt-who UUID under 'registered by' for hypervisor")
         #     notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1455041")
         # self.vw_case_result(results, notes)
         self.vw_case_result(results)
-
would reformat /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py
--- /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py	2023-03-06 06:16:11.900474 +0000
@@ -5,61 +5,60 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137103')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137103")
+        hypervisor_type = self.get_config("hypervisor_type")
         register_config = self.get_register_config()
-        register_type = register_config['type']
+        register_type = register_config["type"]
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # Case Steps
         logger.info(">>>step1: run virt-who to send mappings")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: delete virt-who host from webui")
         try:
             vw_host_name = self.get_hostname(self.ssh_host())
-            vw_host_uuid='xxx'
+            vw_host_uuid = "xxx"
             res1 = self.vw_web_host_delete(vw_host_name, vw_host_uuid)
             data, tty_output, rhsm_output = self.vw_start(exp_send=0, exp_error=True)
             res2 = self.op_normal_value(data, exp_error="1|2", exp_thread=1, exp_send=0)
-            error_msg = ["consumer no longer exists|"
-                         ".*has been deleted"]
+            error_msg = ["consumer no longer exists|" ".*has been deleted"]
             res3 = self.msg_validation(rhsm_output, error_msg, exp_exist=True)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
-            results.setdefault('step2', []).append(res3)
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
+            results.setdefault("step2", []).append(res3)
         except:
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
             pass
         finally:
             logger.info(">>>step3: re-register host and run virt-who")
             self.system_unregister(self.ssh_host())
             self.system_register(self.ssh_host(), register_type, register_config)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step3', []).append(res)
+            results.setdefault("step3", []).append(res)
 
         if "libvirt-local" not in hypervisor_type and "vdsm" not in hypervisor_type:
             logger.info(">>>step4: delete hypervisor from webui")
             host_uuid = self.get_hypervisor_hostuuid()
             host_name = self.get_hypervisor_hostname()
             self.vw_web_host_delete(host_name, host_uuid)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step3', []).append(res)
+            results.setdefault("step3", []).append(res)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py
--- /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py	2023-03-06 06:16:11.949758 +0000
@@ -2,96 +2,124 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137101')
-        hypervisor_type = self.get_config('hypervisor_type')
-        register_type = self.get_config('register_type')
-        if 'stage' in register_type:
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137101")
+        hypervisor_type = self.get_config("hypervisor_type")
+        register_type = self.get_config("register_type")
+        if "stage" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         host_uuid = self.get_hypervisor_hostuuid()
         host_name = self.get_hypervisor_hostname()
         register_config = self.get_register_config()
-        admin_user = register_config['username']
-        admin_passwd = register_config['password']
-        server = register_config['server']
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
-        default_org = register_config['owner']
-        api = register_config['api']
+        admin_user = register_config["username"]
+        admin_passwd = register_config["password"]
+        server = register_config["server"]
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
+        default_org = register_config["owner"]
+        api = register_config["api"]
 
         # Case Steps
         logger.info(">>>step1: run virt-who to send mappings")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
-        logger.info(">>>step2: attach physical vdc for hypervisor, then check subscriptions")
-        physical_sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        physical_pool_id = physical_sku_attrs['pool_id']
+        logger.info(
+            ">>>step2: attach physical vdc for hypervisor, then check subscriptions"
+        )
+        physical_sku_attrs = self.system_sku_attr(
+            self.ssh_host(), vdc_physical_sku, "physical"
+        )
+        physical_pool_id = physical_sku_attrs["pool_id"]
         self.vw_web_attach(host_name, host_uuid, physical_pool_id)
-        virtual_sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        virtual_pool_id = virtual_sku_attrs['pool_id']
-        katello_id = self.satellite_katello_id(self.ssh_host(), register_config, virtual_pool_id)
-        default_org_id = self.satellite_org_id_get(self.ssh_host(), register_config, default_org)
+        virtual_sku_attrs = self.system_sku_attr(
+            self.ssh_guest(), vdc_virtual_sku, "virtual"
+        )
+        virtual_pool_id = virtual_sku_attrs["pool_id"]
+        katello_id = self.satellite_katello_id(
+            self.ssh_host(), register_config, virtual_pool_id
+        )
+        default_org_id = self.satellite_org_id_get(
+            self.ssh_host(), register_config, default_org
+        )
 
         name_list = []
-        if 'libvirt-local' in hypervisor_type or 'vdsm' in hypervisor_type:
-            name_list = ['{0}'.format(host_name)]
+        if "libvirt-local" in hypervisor_type or "vdsm" in hypervisor_type:
+            name_list = ["{0}".format(host_name)]
         else:
-            key1 = 'virt-who-{0}'.format(host_name)
-            key2 = 'virt-who-{0}'.format(host_uuid)
+            key1 = "virt-who-{0}".format(host_name)
+            key2 = "virt-who-{0}".format(host_uuid)
             name_list = [key1, key2, key1.lower(), key2.lower()]
-        cmd = "curl -X GET -s -k -u {0}:{1} {2}/katello/api/organizations/{3}/subscriptions/{4}" \
-                .format(admin_user, admin_passwd, api ,default_org_id, katello_id)
+        cmd = "curl -X GET -s -k -u {0}:{1} {2}/katello/api/organizations/{3}/subscriptions/{4}".format(
+            admin_user, admin_passwd, api, default_org_id, katello_id
+        )
         ret, output = self.runcmd(cmd, self.ssh_host())
         output = self.is_json(output.strip())
         if ret == 0 and output is not False and output is not None:
-            if output["type"] == "STACK_DERIVED" and output["virt_only"] is True and \
-                    any(key in output["hypervisor"]["name"] for key in name_list):
+            if (
+                output["type"] == "STACK_DERIVED"
+                and output["virt_only"] is True
+                and any(key in output["hypervisor"]["name"] for key in name_list)
+            ):
                 logger.info("succeeded to check bonus pool coming from %s" % name_list)
-                results.setdefault('step2', []).append(True)
+                results.setdefault("step2", []).append(True)
             else:
                 logger.error("failed to check bonus pool coming from %s" % name_list)
-                results.setdefault('step2', []).append(False)
-            if output["available"] == -1 and output["quantity"] == -1 and output["consumed"] == 0:
-                logger.info("succeeded to check consumed status is '0 out of Unlimitted'")
-                results.setdefault('step2', []).append(True)
+                results.setdefault("step2", []).append(False)
+            if (
+                output["available"] == -1
+                and output["quantity"] == -1
+                and output["consumed"] == 0
+            ):
+                logger.info(
+                    "succeeded to check consumed status is '0 out of Unlimitted'"
+                )
+                results.setdefault("step2", []).append(True)
             else:
                 logger.error("failed to check consumed status is '0 out of Unlimitted'")
-                results.setdefault('step2', []).append(False)
+                results.setdefault("step2", []).append(False)
         else:
             logger.error("failed to get subscritons info")
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         logger.info(">>>step3: attach bonus vdc for guest, then check subscriptions")
         self.system_sku_attach(self.ssh_guest(), pool_id=virtual_pool_id)
         time.sleep(60)
         for i in range(3):
             ret, output = self.runcmd(cmd, self.ssh_host())
             output = self.is_json(output.strip())
             if ret == 0 and output is not False and output is not None:
-                if output["available"] == -2 or output["available"] == -1 and output["quantity"] == -1 and output["consumed"] == 1:
-                    logger.info("succeeded to check consumed status is '1 out of Unlimitted'")
-                    results.setdefault('step3', []).append(True)
+                if (
+                    output["available"] == -2
+                    or output["available"] == -1
+                    and output["quantity"] == -1
+                    and output["consumed"] == 1
+                ):
+                    logger.info(
+                        "succeeded to check consumed status is '1 out of Unlimitted'"
+                    )
+                    results.setdefault("step3", []).append(True)
                     break
                 logger.warning("webui has not been refreshed, try again after 60s...")
                 time.sleep(60)
-        if 'step3' not in results.keys():
+        if "step3" not in results.keys():
             logger.error("failed to check consumed status")
-            results.setdefault('step3', []).append(False)
+            results.setdefault("step3", []).append(False)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py
--- /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py	2023-03-06 06:16:11.976432 +0000
@@ -5,129 +5,152 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137100')
-        register_type = self.get_config('register_type')
-        if 'stage' in register_type:
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137100")
+        register_type = self.get_config("register_type")
+        if "stage" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         register_config = self.get_register_config()
-        ssh_sat = register_config['ssh_sat']
-        default_org = register_config['owner']
-        vdc_phys = register_config['vdc']
-        vdc_virt = register_config['vdc_bonus']
-        limit_sku = register_config['limit']
+        ssh_sat = register_config["ssh_sat"]
+        default_org = register_config["owner"]
+        vdc_phys = register_config["vdc"]
+        vdc_virt = register_config["vdc_bonus"]
+        limit_sku = register_config["limit"]
         phys_vdc_sku = self.system_sku_attr(self.ssh_host(), vdc_phys, "physical")
         phys_limit_sku = self.system_sku_attr(self.ssh_host(), limit_sku, "physical")
-        phys_vdc_pool_id = phys_vdc_sku['pool_id']
-        phys_limit_pool_id = phys_limit_sku['pool_id']
-        default_org_id = self.satellite_org_id_get(ssh_sat, register_config, default_org)
+        phys_vdc_pool_id = phys_vdc_sku["pool_id"]
+        phys_limit_pool_id = phys_limit_sku["pool_id"]
+        default_org_id = self.satellite_org_id_get(
+            ssh_sat, register_config, default_org
+        )
         ak_list = {
-            'libvirt-local':    'libvirt-local_ak',
-            'libvirt-remote':   'libvirt-remote_ak',
-            'esx':              'esx_ak',
-            'hyperv':           'hyperv_ak',
-            'xen':              'xen_ak',
-            'vdsm':             'vdsm_ak',
-            'rhevm':            'rhevm_ak',
-            'kubevirt':         'kubevirt_ak',
-            'ahv':              'ahv_ak'
-            }
+            "libvirt-local": "libvirt-local_ak",
+            "libvirt-remote": "libvirt-remote_ak",
+            "esx": "esx_ak",
+            "hyperv": "hyperv_ak",
+            "xen": "xen_ak",
+            "vdsm": "vdsm_ak",
+            "rhevm": "rhevm_ak",
+            "kubevirt": "kubevirt_ak",
+            "ahv": "ahv_ak",
+        }
         ak_name = ak_list[hypervisor_type]
         host_uuid = self.get_hypervisor_hostuuid()
         host_name = self.get_hypervisor_hostname()
         guest_name = self.get_hostname(self.ssh_guest())
         guest_uuid = self.get_hypervisor_guestuuid()
 
         # Case Steps
         try:
-            logger.info(">>>step1: create activation key and "
-                        "register virt-who host with activation key")
+            logger.info(
+                ">>>step1: create activation key and "
+                "register virt-who host with activation key"
+            )
             self.satellite_active_key_create(
-                ssh_sat, register_config, ak_name, default_org_id)
+                ssh_sat, register_config, ak_name, default_org_id
+            )
             self.system_register_with_ak(self.ssh_host(), register_config, ak_name)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step1', []).append(res)
+            results.setdefault("step1", []).append(res)
 
-            logger.info(">>>step2: Register guest with auto-attach enabled "
-                        "withou sku in the key, "
-                        "but virt_vdc_sku is available out of the key")
+            logger.info(
+                ">>>step2: Register guest with auto-attach enabled "
+                "withou sku in the key, "
+                "but virt_vdc_sku is available out of the key"
+            )
             # guest will be auto-attached the best matched pool from all available skus
             self.system_sku_unattach(self.ssh_host())
             self.vw_web_attach(host_name, host_uuid, phys_vdc_pool_id)
             virt_vdc_sku = self.system_sku_attr(self.ssh_guest(), vdc_virt, "virtual")
-            virt_vdc_pool_id = virt_vdc_sku['pool_id']
+            virt_vdc_pool_id = virt_vdc_sku["pool_id"]
             self.system_register_with_ak(self.ssh_guest(), register_config, ak_name)
             output = self.system_sku_consumed(self.ssh_guest())
             res1 = self.vw_msg_search(output, virt_vdc_pool_id, exp_exist=True)
-            results.setdefault('step2', []).append(res1)
+            results.setdefault("step2", []).append(res1)
 
-            logger.info(">>>step3: Register guest with auto-attach enabled "
-                        "with only virtual_limit_sku in the key "
-                        "and virt_vdc_sku out of the key")
+            logger.info(
+                ">>>step3: Register guest with auto-attach enabled "
+                "with only virtual_limit_sku in the key "
+                "and virt_vdc_sku out of the key"
+            )
             # guest will be auto-attached with the best matched pool in key
             self.vw_web_attach(host_name, host_uuid, phys_limit_pool_id)
-            virt_limit_sku = self.system_sku_attr(self.ssh_guest(), limit_sku, "virtual")
-            virt_limit_pool_id = virt_limit_sku['pool_id']
+            virt_limit_sku = self.system_sku_attr(
+                self.ssh_guest(), limit_sku, "virtual"
+            )
+            virt_limit_pool_id = virt_limit_sku["pool_id"]
             limit_katello_id = self.satellite_katello_id(
-                ssh_sat, register_config, virt_limit_pool_id)
+                ssh_sat, register_config, virt_limit_pool_id
+            )
             self.satellite_active_key_attach_sku(
-                ssh_sat, register_config, ak_name, limit_katello_id, default_org_id)
+                ssh_sat, register_config, ak_name, limit_katello_id, default_org_id
+            )
             self.system_register_with_ak(self.ssh_guest(), register_config, ak_name)
             output = self.system_sku_consumed(self.ssh_guest())
             res1 = self.vw_msg_search(output, virt_limit_pool_id, exp_exist=True)
             res2 = self.vw_msg_search(output, virt_vdc_pool_id, exp_exist=False)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
 
-            logger.info(">>>step4: Register guest with auto-attach disabled "
-                        "with both virt_vdc_sku and virt_limit_sku in the key")
+            logger.info(
+                ">>>step4: Register guest with auto-attach disabled "
+                "with both virt_vdc_sku and virt_limit_sku in the key"
+            )
             # guest will be auto-attached with both two skus
             vdc_katello_id = self.satellite_katello_id(
-                ssh_sat, register_config, virt_vdc_pool_id)
+                ssh_sat, register_config, virt_vdc_pool_id
+            )
             self.satellite_active_key_attach_sku(
-                ssh_sat, register_config, ak_name, vdc_katello_id, default_org_id)
+                ssh_sat, register_config, ak_name, vdc_katello_id, default_org_id
+            )
             self.satellite_active_key_auto_attach_enable(
-                ssh_sat, register_config, ak_name, default_org_id, auto_attach='false')
+                ssh_sat, register_config, ak_name, default_org_id, auto_attach="false"
+            )
             self.system_register_with_ak(self.ssh_guest(), register_config, ak_name)
             output = self.system_sku_consumed(self.ssh_guest())
             res1 = self.vw_msg_search(output, virt_limit_pool_id, exp_exist=True)
             res2 = self.vw_msg_search(output, virt_vdc_pool_id, exp_exist=True)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
 
-            logger.info(">>>step5: Register guest with auto-attach disabled "
-                        "without sku in the key, "
-                        "but both virt_vdc_sku and virt_limit_sku out of key")
+            logger.info(
+                ">>>step5: Register guest with auto-attach disabled "
+                "without sku in the key, "
+                "but both virt_vdc_sku and virt_limit_sku out of key"
+            )
             # guest will not be auto-attached to any sku
             self.satellite_active_key_unattach_sku(
-                ssh_sat, register_config, ak_name, limit_katello_id, default_org_id)
+                ssh_sat, register_config, ak_name, limit_katello_id, default_org_id
+            )
             self.satellite_active_key_unattach_sku(
-                ssh_sat, register_config, ak_name, vdc_katello_id, default_org_id)
+                ssh_sat, register_config, ak_name, vdc_katello_id, default_org_id
+            )
             self.system_register_with_ak(self.ssh_guest(), register_config, ak_name)
             output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
-            res1 = self.vw_msg_search(output, 'No consumed subscription pools')
-            results.setdefault('step5', []).append(res1)
+            res1 = self.vw_msg_search(output, "No consumed subscription pools")
+            results.setdefault("step5", []).append(res1)
 
         finally:
             logger.info(">>>Finally step: Clear environment")
             self.vw_web_host_delete(host_name, host_uuid)
             self.vw_web_host_delete(guest_name, guest_uuid)
             self.satellite_active_key_delete(
-                ssh_sat, register_config, ak_name, default_org_id)
+                ssh_sat, register_config, ak_name, default_org_id
+            )
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py
--- /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py	2023-03-06 06:16:12.077537 +0000
@@ -2,23 +2,26 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136708')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136708")
         self.vw_case_init()
 
         # Case Config
         results = dict()
         # Case Steps
         logger.info(">>>step1: run virt-who-password")
-        value1 = self.vw_encrypted(r'ad\"min')
-        value2 = self.vw_encrypted(r'ad\"min', "-p")
+        value1 = self.vw_encrypted(r"ad\"min")
+        value2 = self.vw_encrypted(r"ad\"min", "-p")
         value3 = self.vw_encrypted(r'"ad\"min"', "-p")
-        value4 = self.vw_encrypted(r'ad\"min', "--password")
+        value4 = self.vw_encrypted(r"ad\"min", "--password")
         value5 = self.vw_encrypted(r'"ad\"min"', "--password")
-        results.setdefault('step1', []).append(value1==value2==value3==value4==value5)
+        results.setdefault("step1", []).append(
+            value1 == value2 == value3 == value4 == value5
+        )
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py
--- /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py	2023-03-06 06:16:12.090996 +0000
@@ -2,71 +2,81 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-137101')
-        register_type = self.get_config('register_type')
-        if 'stage' in register_type:
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-137101")
+        register_type = self.get_config("register_type")
+        if "stage" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
         host_uuid = self.get_hypervisor_hostuuid()
         host_name = self.get_hypervisor_hostname()
-        register_owner = register_config['owner']
-        active_key = 'Virtwho_AK'
+        register_owner = register_config["owner"]
+        active_key = "Virtwho_AK"
         cmd = 'subscription-manager register  --org="{0}" --activationkey="{1}"'.format(
-            register_owner, active_key)
-        msg = 'System has been registered with ID.*'
+            register_owner, active_key
+        )
+        msg = "System has been registered with ID.*"
 
         # Case Steps
         logger.info(">>>step1: register host and guest using activation key")
         for system in [self.ssh_host(), self.ssh_guest()]:
             self.system_unregister(system)
             ret, output = self.runcmd(cmd, system)
             res1 = self.vw_msg_search(output, msg, exp_exist=True)
-            results.setdefault('step1', []).append(res1)
+            results.setdefault("step1", []).append(res1)
 
         logger.info(">>>step2: check temporary sku is attached by auto in guest")
         output = self.system_sku_consumed(self.ssh_guest())
-        res1 = self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=True)
-        results.setdefault('step2', []).append(res1)
+        res1 = self.vw_msg_search(
+            output, "Subscription Type: .*Temporary", exp_exist=True
+        )
+        results.setdefault("step2", []).append(res1)
 
-        logger.info(">>>step3: start virt-who service to check temporary sku disappeared")
+        logger.info(
+            ">>>step3: start virt-who service to check temporary sku disappeared"
+        )
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         output = self.system_sku_consumed(self.ssh_guest())
-        res2 = self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=False)
-        results.setdefault('step3', []).append(res1)
-        results.setdefault('step3', []).append(res2)
+        res2 = self.vw_msg_search(
+            output, "Subscription Type: .*Temporary", exp_exist=False
+        )
+        results.setdefault("step3", []).append(res1)
+        results.setdefault("step3", []).append(res2)
 
-        logger.info(">>>step4: attach physical sku for host/hypervisor  \
-                    then register guest using activation key again")
+        logger.info(
+            ">>>step4: attach physical sku for host/hypervisor  \
+                    then register guest using activation key again"
+        )
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        pool_id = sku_attrs['pool_id']
+        pool_id = sku_attrs["pool_id"]
         self.vw_web_unattach(host_name, host_uuid)
         self.vw_web_attach(host_name, host_uuid, pool_id)
         self.system_unregister(self.ssh_guest())
         ret, output = self.runcmd(cmd, self.ssh_guest())
         res = self.vw_msg_search(output, msg, exp_exist=True)
-        results.setdefault('step4', []).append(res)
+        results.setdefault("step4", []).append(res)
 
         logger.info(">>>step5: check stable virtual sku is attached by auto in guest")
         output = self.system_sku_consumed(self.ssh_guest())
         res = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        results.setdefault('step5', []).append(res)
+        results.setdefault("step5", []).append(res)
 
         # Case Result
-        self.vw_case_result(results)
\ No newline at end of file
+        self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py
--- /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py	2023-03-06 06:16:12.104387 +0000
@@ -2,65 +2,70 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-136708')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type != 'esx':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136708")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type != "esx":
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         config = self.get_hypervisor_config()
-        ssh_hypervisor = config['ssh_hypervisor']
+        ssh_hypervisor = config["ssh_hypervisor"]
         register_config = self.get_register_config()
-        register_type = register_config['type']
-        guest_name = config['guest_name']
+        register_type = register_config["type"]
+        guest_name = config["guest_name"]
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
-        hostname_non_domain = host_name.split('.')[0]
+        hostname_non_domain = host_name.split(".")[0]
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        self.vw_option_add('hypervisor_id', 'hostname', config_file)
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_add("hypervisor_id", "hostname", config_file)
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
 
         # case steps
         try:
             logger.info(">>>step1: run virt-who for hostname without domain name")
-            cert = self.vcenter_cert(config['server'], config['username'], config['password'])
+            cert = self.vcenter_cert(
+                config["server"], config["username"], config["password"]
+            )
             esx_host = self.vcenter_host_get(cert, ssh_hypervisor, guest_name)
             self.vcenter_fqdn_set(cert, ssh_hypervisor, esx_host, hostname_non_domain)
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             res2 = self.vw_msg_search(str(data), hostname_non_domain, exp_exist=True)
             res3 = self.vw_msg_search(str(data), host_name, exp_exist=False)
-            results.setdefault('step1', []).append(res1)
-            results.setdefault('step1', []).append(res2)
-            results.setdefault('step1', []).append(res3)
+            results.setdefault("step1", []).append(res1)
+            results.setdefault("step1", []).append(res2)
+            results.setdefault("step1", []).append(res3)
         except:
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
             pass
         finally:
             logger.info(">>>step2: start to recovery hostname")
             if "satellite" in register_type:
                 self.vw_web_host_delete(hostname_non_domain, host_uuid)
             if "stage" in register_type:
                 self.stage_consumer_clean(self.ssh_host(), register_config)
-            cert = self.vcenter_cert(config['server'], config['username'], config['password'])
+            cert = self.vcenter_cert(
+                config["server"], config["username"], config["password"]
+            )
             esx_host = self.vcenter_host_get(cert, ssh_hypervisor, guest_name)
             self.vcenter_fqdn_set(cert, ssh_hypervisor, esx_host, host_name)
             if self.get_hypervisor_hostname() == host_name:
-                logger.info('Succeeded to change back hostname')
-                results.setdefault('step2', []).append(True)
+                logger.info("Succeeded to change back hostname")
+                results.setdefault("step2", []).append(True)
             else:
-                logger.error('Failed to change back hostname')
-                results.setdefault('step2', []).append(False)
+                logger.error("Failed to change back hostname")
+                results.setdefault("step2", []).append(False)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py
--- /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py	2023-03-06 06:16:12.250853 +0000
@@ -2,41 +2,46 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
         self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136725")
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         if hypervisor_type in ("libvirt-local", "vdsm", "xen"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
         # self.vw_option_enable('debug', '/etc/virt-who.conf')
         # self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
-        self.vw_option_enable('interval', '/etc/virt-who.conf')
-        self.vw_option_update_value('interval', '60', '/etc/virt-who.conf')
+        self.vw_option_enable("interval", "/etc/virt-who.conf")
+        self.vw_option_update_value("interval", "60", "/etc/virt-who.conf")
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: virt-who host can access hyperivosr by default")
         self.vw_thread_clean()
         ret, output = self.run_service(self.ssh_host(), "virt-who", "restart")
         time.sleep(60)
         error_num, error_list = self.vw_callback_error_num()
         thread_num = self.vw_callback_thread_num()
         send_num = self.vw_callback_send_num()
-        logger.info("error_num: {0}, thread_num: {1}, send_num: {2}".format(error_num, thread_num, send_num))
-        results.setdefault('step1', []).append(error_num == 0)
-        results.setdefault('step1', []).append(thread_num == 1)
-        results.setdefault('step1', []).append(send_num == 1)
+        logger.info(
+            "error_num: {0}, thread_num: {1}, send_num: {2}".format(
+                error_num, thread_num, send_num
+            )
+        )
+        results.setdefault("step1", []).append(error_num == 0)
+        results.setdefault("step1", []).append(thread_num == 1)
+        results.setdefault("step1", []).append(send_num == 1)
 
         try:
             logger.info(">>>step2: disconnect virt-who host from hyperivosr")
             self.hypervisor_firewall_setup("off")
             start = time.time()
@@ -44,44 +49,62 @@
                 time.sleep(30)
                 end = time.time()
                 spend_time = int(end - start)
                 error_num, error_list = self.vw_callback_error_num()
                 thread_num = self.vw_callback_thread_num()
-                logger.info("error_num: {0}, thread_num: {1}".format(error_num, thread_num))
-                ret, rhsm_output = self.runcmd("cat /var/log/rhsm/rhsm.log", self.ssh_host(), desc="check rhsm.log")
+                logger.info(
+                    "error_num: {0}, thread_num: {1}".format(error_num, thread_num)
+                )
+                ret, rhsm_output = self.runcmd(
+                    "cat /var/log/rhsm/rhsm.log", self.ssh_host(), desc="check rhsm.log"
+                )
                 if thread_num == 0:
                     logger.info("virt-who is terminated by no thread")
-                    results.setdefault('step2', []).append(False)
+                    results.setdefault("step2", []).append(False)
                     break
-                if error_num != 0 or "timed out" in rhsm_output or "timeout" in rhsm_output:
+                if (
+                    error_num != 0
+                    or "timed out" in rhsm_output
+                    or "timeout" in rhsm_output
+                ):
                     logger.info("virt-who is disconnected from hyperivosr by timeout")
-                    results.setdefault('step2', []).append(True)
+                    results.setdefault("step2", []).append(True)
                     break
                 if spend_time >= 900:
                     logger.info("virt-who is timeout(900s)")
-                    results.setdefault('step2', []).append(False)
+                    results.setdefault("step2", []).append(False)
                     break
         except:
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
             pass
         finally:
             logger.info(">>>step3: connect virt-who host from hyperivosr again")
             self.hypervisor_firewall_setup("on")
             time.sleep(60)
-            ret, output = self.runcmd("rm -rf /var/log/rhsm/*", self.ssh_host(), desc="rhsm.log clean")
+            ret, output = self.runcmd(
+                "rm -rf /var/log/rhsm/*", self.ssh_host(), desc="rhsm.log clean"
+            )
             time.sleep(60)
-            ret, rhsm_output = self.runcmd("cat /var/log/rhsm/rhsm.log", self.ssh_host(), desc="check rhsm.log")
+            ret, rhsm_output = self.runcmd(
+                "cat /var/log/rhsm/rhsm.log", self.ssh_host(), desc="check rhsm.log"
+            )
             error_num, error_list = self.vw_callback_error_num()
             thread_num = self.vw_callback_thread_num()
             logger.info("error_num: {0}, thread_num: {1}".format(error_num, thread_num))
-            if thread_num == 1 and error_num == 0 and "timed out" not in rhsm_output and "timeout" not in rhsm_output:
+            if (
+                thread_num == 1
+                and error_num == 0
+                and "timed out" not in rhsm_output
+                and "timeout" not in rhsm_output
+            ):
                 logger.info("virt-who is connected to hyperivosr normally")
-                results.setdefault('step3', []).append(True)
+                results.setdefault("step3", []).append(True)
             else:
-                results.setdefault('step3', []).append(False)
+                results.setdefault("step3", []).append(False)
 
         # case result
         notes = list()
-        notes.append("(step2) No any response after xen hypervisor lost its connection with virt-who host")
+        notes.append(
+            "(step2) No any response after xen hypervisor lost its connection with virt-who host"
+        )
         notes.append("Bug: https://bugzilla.redhat.com/show_bug.cgi?id=2065097")
         self.vw_case_result(results, notes)
-
would reformat /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py
--- /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py	2023-03-06 06:16:12.263645 +0000
@@ -2,44 +2,59 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
         self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136726")
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '1.31.0':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "1.31.0":
             self.vw_case_skip("virt-who version")
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type != 'esx':
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type != "esx":
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         virt_config = "/etc/sysconfig/virt-who"
-        self.vw_option_enable("VIRTWHO_DEBUG",virt_config)
-        self.vw_option_update_value("VIRTWHO_DEBUG", '1', virt_config)
+        self.vw_option_enable("VIRTWHO_DEBUG", virt_config)
+        self.vw_option_update_value("VIRTWHO_DEBUG", "1", virt_config)
         self.vw_option_enable("VIRTWHO_INTERVAL", virt_config)
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         try:
-            logger.info(">>>step1: run virt-who with event(guest_suspend) for interval 60")
-            self.vw_option_update_value("VIRTWHO_INTERVAL", '60', virt_config)
-            data, tty_output, rhsm_output = self.vw_start(exp_send=2, event="guest_suspend")
-            res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=2, exp_interval=60)
-            results.setdefault('step1', []).append(res1)
+            logger.info(
+                ">>>step1: run virt-who with event(guest_suspend) for interval 60"
+            )
+            self.vw_option_update_value("VIRTWHO_INTERVAL", "60", virt_config)
+            data, tty_output, rhsm_output = self.vw_start(
+                exp_send=2, event="guest_suspend"
+            )
+            res1 = self.op_normal_value(
+                data, exp_error=0, exp_thread=1, exp_send=2, exp_interval=60
+            )
+            results.setdefault("step1", []).append(res1)
         except:
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
             pass
         finally:
-            logger.info(">>>step2: run virt-who with event(guest_resume) for interval 120")
-            self.vw_option_update_value("VIRTWHO_INTERVAL", '120', filename="/etc/sysconfig/virt-who")
-            data, tty_output, rhsm_output = self.vw_start(exp_send=2, event="guest_resume")
-            res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=2, exp_interval=120)
-            results.setdefault('step2', []).append(res1)
+            logger.info(
+                ">>>step2: run virt-who with event(guest_resume) for interval 120"
+            )
+            self.vw_option_update_value(
+                "VIRTWHO_INTERVAL", "120", filename="/etc/sysconfig/virt-who"
+            )
+            data, tty_output, rhsm_output = self.vw_start(
+                exp_send=2, event="guest_resume"
+            )
+            res1 = self.op_normal_value(
+                data, exp_error=0, exp_thread=1, exp_send=2, exp_interval=120
+            )
+            results.setdefault("step2", []).append(res1)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py
--- /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py	2023-03-06 06:16:12.292460 +0000
@@ -2,44 +2,47 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
         self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136781")
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         if "rhevm" not in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         self.vw_etc_d_mode_create(config_name, config_file)
         config = self.get_hypervisor_config()
-        hypervisor_server = config['server']
+        hypervisor_server = config["server"]
 
         # case steps
         logger.info(">>>step1: run virt-who for rhevm with ovirt-engine")
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: run virt-who for rhevm with ovirt-engine/")
-        self.vw_option_update_value("server", hypervisor_server+'/', config_file)
+        self.vw_option_update_value("server", hypervisor_server + "/", config_file)
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res)
+        results.setdefault("step2", []).append(res)
 
         logger.info(">>>step3: run virt-who for rhevm without /ovirt-engine")
-        self.vw_option_update_value("server", hypervisor_server.rstrip('/ovirt-engine'), config_file)
+        self.vw_option_update_value(
+            "server", hypervisor_server.rstrip("/ovirt-engine"), config_file
+        )
         data, tty_output, rhsm_output = self.vw_start()
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res)
+        results.setdefault("step3", []).append(res)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py
--- /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py	2023-03-06 06:16:12.405067 +0000
@@ -2,119 +2,136 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
         self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136733")
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('kubevirt', 'ahv'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("kubevirt", "ahv"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         register_config = self.get_register_config()
-        vdc_physical_sku = register_config['vdc']
-        vdc_virtual_sku = register_config['vdc_bonus']
+        vdc_physical_sku = register_config["vdc"]
+        vdc_virtual_sku = register_config["vdc_bonus"]
         host_name = self.get_hypervisor_hostname()
         host_uuid = self.get_hypervisor_hostuuid()
         guest_uuid = self.get_hypervisor_guestuuid()
-        owner = register_config['owner']
+        owner = register_config["owner"]
 
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
-        self.vw_option_enable('interval', '/etc/virt-who.conf')
-        self.vw_option_update_value('interval', '60', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
+        self.vw_option_enable("interval", "/etc/virt-who.conf")
+        self.vw_option_update_value("interval", "60", "/etc/virt-who.conf")
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: run virt-who and attach VDC for host/guest")
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
         sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")
-        self.vw_web_attach(host_name, host_uuid, sku_attrs['pool_id'])
+        self.vw_web_attach(host_name, host_uuid, sku_attrs["pool_id"])
         sku_attrs = self.system_sku_attr(self.ssh_guest(), vdc_virtual_sku, "virtual")
-        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs['pool_id'])
+        self.system_sku_attach(self.ssh_guest(), pool_id=sku_attrs["pool_id"])
         output = self.system_sku_consumed(self.ssh_guest())
         res2 = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
-        results.setdefault('step1', []).append(res1)
-        results.setdefault('step1', []).append(res2)
+        results.setdefault("step1", []).append(res1)
+        results.setdefault("step1", []).append(res2)
 
         try:
             logger.info(">>>step2: suspend guest, and then restart virt-who")
             self.hypervisor_guest_suspend()
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             if hypervisor_type in ("libvirt-remote", "libvirt-local", "hyperv", "esx"):
                 res2 = self.validate_guest_state(data, owner, guest_uuid, exp_state=3)
             else:
-                res2 = self.validate_guest_state(data, owner, guest_uuid, exp_state=False)
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+                res2 = self.validate_guest_state(
+                    data, owner, guest_uuid, exp_state=False
+                )
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
         except:
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
             pass
         finally:
             logger.info(">>>step3: resume guest, and then restart virt-who")
             self.hypervisor_guest_resume()
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             output = self.system_sku_consumed(self.ssh_guest())
             res2 = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
             res3 = self.validate_guest_state(data, owner, guest_uuid, exp_state=1)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
-            results.setdefault('step3', []).append(res3)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
+            results.setdefault("step3", []).append(res3)
 
         try:
             logger.info(">>>step4: stop guest, and then restart virt-who")
-            ret, output = self.runcmd("sync;sync;sync", self.ssh_guest(), desc="sync data")
+            ret, output = self.runcmd(
+                "sync;sync;sync", self.ssh_guest(), desc="sync data"
+            )
             self.hypervisor_guest_stop()
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            if hypervisor_type in ("libvirt-remote", "libvirt-local",  "hyperv", "esx"):
-                res2 = self.validate_guest_state(data, owner, guest_uuid, exp_state="3|4|5")
+            if hypervisor_type in ("libvirt-remote", "libvirt-local", "hyperv", "esx"):
+                res2 = self.validate_guest_state(
+                    data, owner, guest_uuid, exp_state="3|4|5"
+                )
             else:
-                res2 = self.validate_guest_state(data, owner, guest_uuid, exp_state=False)
-            results.setdefault('step4', []).append(res1)
-            results.setdefault('step4', []).append(res2)
+                res2 = self.validate_guest_state(
+                    data, owner, guest_uuid, exp_state=False
+                )
+            results.setdefault("step4", []).append(res1)
+            results.setdefault("step4", []).append(res2)
         except:
-            results.setdefault('step4', []).append(False)
+            results.setdefault("step4", []).append(False)
             pass
         finally:
             logger.info(">>>step5: start guest, and then restart virt-who")
             self.hypervisor_guest_start()
             data, tty_output, rhsm_output = self.vw_start()
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             output = self.system_sku_consumed(self.ssh_guest())
             res2 = self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True)
             res3 = self.validate_guest_state(data, owner, guest_uuid, exp_state=1)
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
-            results.setdefault('step5', []).append(res3)
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
+            results.setdefault("step5", []).append(res3)
 
         # case result
         self.vw_case_result(results)
 
     def validate_guest_state(self, data, owner, guest_uuid, exp_state):
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         if exp_state is False:
-            if hypervisor_type in ('libvirt-local', 'vdsm'):
+            if hypervisor_type in ("libvirt-local", "vdsm"):
                 state = guest_uuid in data.keys()
             else:
                 state = guest_uuid in data[owner].keys()
         else:
-            if hypervisor_type in ('libvirt-local', 'vdsm'):
-                state = data[guest_uuid]['state']
+            if hypervisor_type in ("libvirt-local", "vdsm"):
+                state = data[guest_uuid]["state"]
             else:
-                state = data[owner][guest_uuid]['state']
+                state = data[owner][guest_uuid]["state"]
         if str(state) in str(exp_state):
-            logger.info("Expected guest state({0}) is matched({1}) for {2}".format(exp_state, state, hypervisor_type))
+            logger.info(
+                "Expected guest state({0}) is matched({1}) for {2}".format(
+                    exp_state, state, hypervisor_type
+                )
+            )
             return True
         else:
-            logger.error("Expected guest state({0}) is not matched({1}) for {2}".format(exp_state, state, hypervisor_type))
+            logger.error(
+                "Expected guest state({0}) is not matched({1}) for {2}".format(
+                    exp_state, state, hypervisor_type
+                )
+            )
             return False
would reformat /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py
--- /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py	2023-03-06 06:16:12.461799 +0000
@@ -1,67 +1,68 @@
 # coding:utf-8
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
         self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136773")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         self.vw_etc_d_mode_create(config_name, config_file)
         register_config = self.get_register_config()
-        register_type = register_config['type']
+        register_type = register_config["type"]
 
         # case steps
         logger.info(">>>step1: start virt-who by run_service")
         self.vw_thread_clean()
         ret, output = self.run_service(self.ssh_host(), "virt-who", "restart")
         time.sleep(30)
         error_num, error_list = self.vw_callback_error_num()
         thread_num = self.vw_callback_thread_num()
-        logger.info("error_num: {0}, thread_num: {1}" .format(error_num, thread_num))
-        results.setdefault('step1', []).append(error_num == 0)
-        results.setdefault('step1', []).append(thread_num == 1)
+        logger.info("error_num: {0}, thread_num: {1}".format(error_num, thread_num))
+        results.setdefault("step1", []).append(error_num == 0)
+        results.setdefault("step1", []).append(thread_num == 1)
 
         logger.info(">>>step2: unregister, and the clean")
         cmd1 = "subscription-manager unregister"
         cmd2 = "subscription-manager clean"
         ret, output = self.runcmd(cmd1, self.ssh_host(), desc="unregister")
         time.sleep(15)
         ret, output = self.runcmd(cmd2, self.ssh_host(), desc="clean")
         time.sleep(30)
         error_num, error_list = self.vw_callback_error_num()
         thread_num = self.vw_callback_thread_num()
-        logger.info("error_num: {0}, thread_num: {1}" .format(error_num, thread_num))
-        results.setdefault('step2', []).append(thread_num == 1)
+        logger.info("error_num: {0}, thread_num: {1}".format(error_num, thread_num))
+        results.setdefault("step2", []).append(thread_num == 1)
 
         logger.info(">>>step3: register, start virt-who")
         self.system_register(self.ssh_host(), register_type, register_config)
         self.vw_thread_clean()
         ret, output = self.run_service(self.ssh_host(), "virt-who", "restart")
         time.sleep(30)
         error_num, error_list = self.vw_callback_error_num()
         thread_num = self.vw_callback_thread_num()
-        logger.info("error_num: {0}, thread_num: {1}" .format(error_num, thread_num))
-        results.setdefault('step3', []).append(error_num == 0)
-        results.setdefault('step3', []).append(thread_num == 1)
+        logger.info("error_num: {0}, thread_num: {1}".format(error_num, thread_num))
+        results.setdefault("step3", []).append(error_num == 0)
+        results.setdefault("step3", []).append(thread_num == 1)
 
         logger.info(">>>step4: unregister and clean together")
         cmd1 = "subscription-manager unregister; subscription-manager clean"
         ret, output = self.runcmd(cmd1, self.ssh_host(), desc="unregister and clean")
         time.sleep(30)
         error_num, error_list = self.vw_callback_error_num()
         thread_num = self.vw_callback_thread_num()
-        logger.info("error_num: {0}, thread_num: {1}" .format(error_num, thread_num))
-        results.setdefault('step4', []).append(thread_num == 1)
+        logger.info("error_num: {0}, thread_num: {1}".format(error_num, thread_num))
+        results.setdefault("step4", []).append(thread_num == 1)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py
--- /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py	2023-03-06 06:16:12.539538 +0000
@@ -5,48 +5,50 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-175019')
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-175019")
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
         option = "hypervisor_id"
         # bz1751603, only print war_msg for rhel8 using python3
         war_msg = "option '{0}' in section .* already exists".format(option)
 
         # Case Steps
-        logger.info(">>>step1: run virt-who with hypervisor_id=uuid "
-                    "and hypervisor_id=hostname together")
-        self.vw_option_add(option, 'uuid', config_file)
-        self.vw_option_add(option, 'hostname', config_file)
+        logger.info(
+            ">>>step1: run virt-who with hypervisor_id=uuid "
+            "and hypervisor_id=hostname together"
+        )
+        self.vw_option_add(option, "uuid", config_file)
+        self.vw_option_add(option, "hostname", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
         if "RHEL-8" in compose_id:
             res2 = self.vw_msg_search(rhsm_output, war_msg)
-            results.setdefault('step1', []).append(res2)
+            results.setdefault("step1", []).append(res2)
 
         logger.info(">>>step2: add another hypervisor_id=xxx")
         # if redundant options are configured, virt-who uses the last one
-        self.vw_option_add(option, 'xxx', config_file)
+        self.vw_option_add(option, "xxx", config_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-        res1 = self.op_normal_value(data, exp_error='nz', exp_thread=0, exp_send=0)
-        results.setdefault('step2', []).append(res1)
+        res1 = self.op_normal_value(data, exp_error="nz", exp_thread=0, exp_send=0)
+        results.setdefault("step2", []).append(res1)
         if "RHEL-8" in compose_id:
             res2 = self.vw_msg_search(rhsm_output, war_msg)
-            results.setdefault('step2', []).append(res2)
+            results.setdefault("step2", []).append(res2)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py
--- /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py	2023-03-06 05:02:18.596378 +0000
+++ /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py	2023-03-06 06:16:12.539689 +0000
@@ -2,55 +2,60 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
         self.vw_case_info(os.path.basename(__file__), case_id="RHEL-136771")
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type not in ('libvirt-local', 'vdsm'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type not in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         self.vw_etc_d_mode_create(config_name, config_file)
-        new_user ="tester"
+        new_user = "tester"
         new_passwd = "redhat"
 
         # case steps
         logger.info(">>>step1: create tester account")
-        cmd = "useradd {}" .format(new_user)
+        cmd = "useradd {}".format(new_user)
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="useradd account")
-        cmd = r'echo -e "{0}:{1}" | chpasswd' .format(new_user, new_passwd)
+        cmd = r'echo -e "{0}:{1}" | chpasswd'.format(new_user, new_passwd)
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="change password")
-        host_ip = self.ssh_host()['host']
+        host_ip = self.ssh_host()["host"]
         new_ssh = {"host": host_ip, "username": new_user, "password": new_passwd}
         ret, output = self.runcmd("rpm -qa kernel", new_ssh, desc="ssh connect check")
         if ret == 0 and "kernel" in output:
             logger.info("Succeeded to create tester account")
-            results.setdefault('step1', []).append(True)
+            results.setdefault("step1", []).append(True)
         else:
             logger.error("Failed to create tester account")
-            results.setdefault('step1', []).append(False)
+            results.setdefault("step1", []).append(False)
 
         logger.info(">>>step2: run virt-who service by tester account")
         self.vw_thread_clean()
         attrs = ["Password:|redhat"]
         ret, output = self.run_expect(new_ssh, "/sbin/service virt-who restart", attrs)
         time.sleep(60)
         error_num, error_list = self.vw_callback_error_num()
         thread_num = self.vw_callback_thread_num()
         send_num = self.vw_callback_send_num()
-        logger.info("error_num: {0}, thread_num: {1}, send_num: {2}" .format(error_num, thread_num, send_num))
-        results.setdefault('step2', []).append(error_num==0)
-        results.setdefault('step2', []).append(thread_num==1)
-        results.setdefault('step2', []).append(send_num==1)
+        logger.info(
+            "error_num: {0}, thread_num: {1}, send_num: {2}".format(
+                error_num, thread_num, send_num
+            )
+        )
+        results.setdefault("step2", []).append(error_num == 0)
+        results.setdefault("step2", []).append(thread_num == 1)
+        results.setdefault("step2", []).append(send_num == 1)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py
--- /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py	2023-03-06 06:16:12.569269 +0000
@@ -2,73 +2,83 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
         self.vw_case_info(os.path.basename(__file__), case_id="RHEL-171258")
-        hypervisor_type = self.get_config('hypervisor_type')
-        register_type = self.get_config('register_type')
-        if 'esx' not in hypervisor_type:
+        hypervisor_type = self.get_config("hypervisor_type")
+        register_type = self.get_config("register_type")
+        if "esx" not in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
-        if 'satellite' not in register_type:
+        if "satellite" not in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # case config
         results = dict()
         register_config = self.get_register_config()
-        register_server = register_config['server']
-        register_username = register_config['username']
-        register_password = register_config['password']
+        register_server = register_config["server"]
+        register_username = register_config["username"]
+        register_password = register_config["password"]
 
         # case steps
         logger.info(">>>step1: create json data")
         json_file = "/root/test.json"
         json_data = self.vw_gen_json(hypervisors=100, guests=30)
-        with open(json_file, 'w') as f:
+        with open(json_file, "w") as f:
             json.dump(json_data, f)
         self.paramiko_putfile(self.ssh_host(), json_file, json_file)
 
         logger.info(">>>step2: post json data")
-        curl_header = '-H "accept:application/json,version=2" -H "content-type:application/json"'
-        curl_cert = '--cert /etc/pki/consumer/cert.pem --key /etc/pki/consumer/key.pem'
+        curl_header = (
+            '-H "accept:application/json,version=2" -H "content-type:application/json"'
+        )
+        curl_cert = "--cert /etc/pki/consumer/cert.pem --key /etc/pki/consumer/key.pem"
         curl_json = '-d @"{0}"'.format(json_file)
-        curl_host = 'https://{0}/rhsm/hypervisors'.format(register_server)
-        cmd = "curl -X POST -s -k {0} {1} {2} {3}".format(curl_header, curl_cert, curl_json, curl_host)
+        curl_host = "https://{0}/rhsm/hypervisors".format(register_server)
+        cmd = "curl -X POST -s -k {0} {1} {2} {3}".format(
+            curl_header, curl_cert, curl_json, curl_host
+        )
         ret, output = self.runcmd(cmd, self.ssh_host())
         if ret == 0 and "error" not in output:
             logger.info("Succeeded to 600 hypervisors and 18000 guests to satellite")
-            results.setdefault('step2', []).append(True)
+            results.setdefault("step2", []).append(True)
         elif "foreman_tasks_sync_task_timeout" in output:
-            task_id = re.findall(r'waiting for task (.*?) to finish exceeded', output)[-1]
-            logger.info('task id: {}'.format(task_id))
+            task_id = re.findall(r"waiting for task (.*?) to finish exceeded", output)[
+                -1
+            ]
+            logger.info("task id: {}".format(task_id))
             if task_id:
                 cmd = "curl -X GET -s -k -u {0}:{1} https://{2}/foreman_tasks/api/tasks/{3}".format(
-                        register_username, register_password, register_server, task_id) 
-                start=time.time()
+                    register_username, register_password, register_server, task_id
+                )
+                start = time.time()
                 while True:
                     ret, output = self.runcmd(cmd, self.ssh_host())
                     time.sleep(30)
-                    end=time.time()
-                    spend_time = int(end-start)
+                    end = time.time()
+                    spend_time = int(end - start)
                     data = self.is_json(output.strip())
-                    logger.info('task state: {}'.format(data['state']))
-                    logger.info('task result: {}'.format(data['result']))
+                    logger.info("task state: {}".format(data["state"]))
+                    logger.info("task result: {}".format(data["result"]))
                     if spend_time >= 900:
-                        results.setdefault('step2', []).append(False)
+                        results.setdefault("step2", []).append(False)
                         logger.info("Post timeout(900s)")
                         break
-                    if data['state'] == 'stopped':
-                        logger.info('task started_at: {}'.format(data['started_at']))
-                        logger.info('task ended_at: {}'.format(data['ended_at']))
-                        logger.info("Succeeded to 600 hypervisors and 18000 guests to satellite")
-                        results.setdefault('step2', []).append(True)
+                    if data["state"] == "stopped":
+                        logger.info("task started_at: {}".format(data["started_at"]))
+                        logger.info("task ended_at: {}".format(data["ended_at"]))
+                        logger.info(
+                            "Succeeded to 600 hypervisors and 18000 guests to satellite"
+                        )
+                        results.setdefault("step2", []).append(True)
                         break
         else:
             logger.warning("Failed to post json to satellite")
             logger.warning(output)
-            results.setdefault('step2', []).append(False)
+            results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py
--- /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py	2023-03-06 06:16:12.660868 +0000
@@ -5,54 +5,56 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-175032')
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] < '0.25.7':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-175032")
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] < "0.25.7":
             self.vw_case_skip("virt-who version")
-        hypervisor_type = self.get_config('hypervisor_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        hypervisor_type = self.get_config("hypervisor_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        compose_id = self.get_config('rhel_compose')
+        compose_id = self.get_config("rhel_compose")
 
         # Case Steps
         logger.info(">>>step1: run virt-who with all good configurations")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
 
         logger.info(">>>step2: add useless line with tab spaces after type=")
         cmd = "sed -i '/^type=/a \\\txxx=xxx' {0}".format(config_file)
         ret, output = self.runcmd(cmd, self.ssh_host(), desc="add new line with tab")
         data, tty_output, rhsm_output = self.vw_start(exp_send=0)
         msg = "virt-who can't be started"
         res1 = self.op_normal_value(data, exp_error="1|2", exp_thread=0, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, msg)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: comment out the useless line")
         cmd = 'sed -i "s/xxx/#xxx/" {0}'.format(config_file)
         ret, output = self.runcmd(cmd, self.ssh_host())
         if "RHEL-7" in compose_id:
-            war_msg = "A line continuation (line starts with space) that is commented " \
-                      "out was detected in file"
+            war_msg = (
+                "A line continuation (line starts with space) that is commented "
+                "out was detected in file"
+            )
             data, tty_output, rhsm_output = self.vw_start(exp_send=0)
             res1 = self.op_normal_value(data, exp_error=1, exp_thread=0, exp_send=0)
         else:
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step3', []).append(res1)
+        results.setdefault("step3", []).append(res1)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py
--- /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py	2023-03-06 06:16:12.755424 +0000
@@ -5,19 +5,19 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-175058')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-175058")
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         json_file = "/tmp/fake.json"
         conf_file = "/etc/virt-who.d/fake.conf"
 
         # case steps
         logger.info(">>>step1: create json file with bad is_hypervisor")
@@ -32,29 +32,31 @@
         logger.info(">>>step2: run virt-who with fake conf")
         error_msg = "Fake virt file.*is not properly formed"
         data, tty_output, rhsm_output = self.vw_start(exp_send=0)
         res1 = self.op_normal_value(data, exp_error=2, exp_thread=0, exp_send=0)
         res2 = self.vw_msg_search(rhsm_output, error_msg)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         logger.info(">>>step3: disabel is_hypervisor option")
-        war_msg = 'Required option: "is_hypervisor" is missing in: ' \
-                  '"fake" using default "True"'
-        self.vw_option_disable('is_hypervisor', conf_file)
+        war_msg = (
+            'Required option: "is_hypervisor" is missing in: '
+            '"fake" using default "True"'
+        )
+        self.vw_option_disable("is_hypervisor", conf_file)
         if hypervisor_type in ("libvirt-local", "vdsm"):
             data, tty_output, rhsm_output = self.vw_start(exp_send=0)
             res1 = self.op_normal_value(data, exp_error=2, exp_thread=0, exp_send=0)
             res2 = self.vw_msg_search(rhsm_output, error_msg)
             res3 = self.vw_msg_search(rhsm_output, war_msg)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
-            results.setdefault('step3', []).append(res3)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
+            results.setdefault("step3", []).append(res3)
         else:
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
             res2 = self.vw_msg_search(rhsm_output, war_msg)
-            results.setdefault('step3', []).append(res1)
-            results.setdefault('step3', []).append(res2)
+            results.setdefault("step3", []).append(res1)
+            results.setdefault("step3", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py
--- /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py	2023-03-06 06:16:12.757317 +0000
@@ -2,51 +2,58 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-195890')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-195890")
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-9" in compose_id:
             self.vw_case_skip("RHEL-9")
         self.vw_case_init()
 
         # case config
         results = dict()
         sysconf_file = "/etc/sysconfig/virt-who"
         config_file = "/etc/virt-who.conf"
-        self.vw_option_enable('[global]', config_file)
-        self.vw_option_enable('debug', config_file)
-        self.vw_option_update_value('debug', 'True', config_file)
-        self.vw_etc_d_mode_create('virtwho-config', '/etc/virt-who.d/virtwho-config.conf')
+        self.vw_option_enable("[global]", config_file)
+        self.vw_option_enable("debug", config_file)
+        self.vw_option_update_value("debug", "True", config_file)
+        self.vw_etc_d_mode_create(
+            "virtwho-config", "/etc/virt-who.d/virtwho-config.conf"
+        )
 
         # case steps
         logger.info(">>>step1: check the prompt in /etc/sysconfig/virt-who")
-        cmd = 'cat {}'.format(sysconf_file)
-        ret, output = self.runcmd(cmd,self.ssh_host())
-        msg = 'The use of this file is deprecated and will be ignored in the next major'
+        cmd = "cat {}".format(sysconf_file)
+        ret, output = self.runcmd(cmd, self.ssh_host())
+        msg = "The use of this file is deprecated and will be ignored in the next major"
         res1 = self.vw_msg_search(output, msg)
-        results.setdefault('step1', []).append(res1)
+        results.setdefault("step1", []).append(res1)
 
         logger.info(">>>step2: check the prompt in /var/log/rhsm.log")
         data, tty_output, rhsm_output = self.vw_start()
         res2 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res2)
-        msg2 ='The use of environment variables and the use of the sysconfig file ' \
-              'to configure virt-who are deprecated. ' \
-              'Their use will be ignored in the next major release'
+        results.setdefault("step1", []).append(res2)
+        msg2 = (
+            "The use of environment variables and the use of the sysconfig file "
+            "to configure virt-who are deprecated. "
+            "Their use will be ignored in the next major release"
+        )
         res3 = self.vw_msg_search(rhsm_output, msg2)
-        results.setdefault('step2', []).append(res3)
+        results.setdefault("step2", []).append(res3)
 
         logger.info(">>>step3: check the prompt in man virt-who")
-        ret, output = self.runcmd("man virt-who", self.ssh_host(), desc="run man virt-who")
-        msg3 = 'Their use is deprecated'
-        msg4 = 'and will be ignored in the next major release'
+        ret, output = self.runcmd(
+            "man virt-who", self.ssh_host(), desc="run man virt-who"
+        )
+        msg3 = "Their use is deprecated"
+        msg4 = "and will be ignored in the next major release"
         res4 = self.vw_msg_search(output, msg3)
         res5 = self.vw_msg_search(output, msg4)
-        results.setdefault('step3', []).append(res4)
-        results.setdefault('step3', []).append(res5)
+        results.setdefault("step3", []).append(res4)
+        results.setdefault("step3", []).append(res5)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py
--- /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py	2023-03-06 06:16:12.840624 +0000
@@ -5,28 +5,28 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-188359')
-        hypervisor_type = self.get_config('hypervisor_type')
-        register_type = self.get_config('register_type')
-        if hypervisor_type in ('libvirt-local', 'vdsm'):
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-188359")
+        hypervisor_type = self.get_config("hypervisor_type")
+        register_type = self.get_config("register_type")
+        if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_case_skip(hypervisor_type)
         if "stage" in register_type:
             self.vw_case_skip(register_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         register_config = self.get_register_config()
-        server = register_config['server']
-        ssh_user = register_config['ssh_user']
-        ssh_passwd = register_config['ssh_passwd']
+        server = register_config["server"]
+        ssh_user = register_config["ssh_user"]
+        ssh_passwd = register_config["ssh_passwd"]
         ssh_register = {"host": server, "username": ssh_user, "password": ssh_passwd}
-        admin_user = register_config['username']
-        admin_passwd = register_config['password']
+        admin_user = register_config["username"]
+        admin_passwd = register_config["password"]
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
         self.vw_option_add("hypervisor_id", "hostname", config_file)
         json_file = "/tmp/fake.json"
@@ -41,32 +41,36 @@
         self.vw_fake_conf_create(conf_file, json_file, True)
 
         logger.info(">>>step2: run virt-who with fake conf")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step2', []).append(res1)
+        results.setdefault("step2", []).append(res1)
 
         logger.info(">>>step3: use hammer command to check hypervisor's fqdn")
-        cmd = "hammer -u {0} -p {1} host list --search 'name ~ virt-who*'".format(admin_user, admin_passwd)
+        cmd = "hammer -u {0} -p {1} host list --search 'name ~ virt-who*'".format(
+            admin_user, admin_passwd
+        )
         _, result = self.runcmd(cmd, ssh_register)
         logger.info(result)
-        res2 = self.vw_msg_search(result, "virt-who-"+host_name)
-        results.setdefault('step3', []).append(res2)
+        res2 = self.vw_msg_search(result, "virt-who-" + host_name)
+        results.setdefault("step3", []).append(res2)
 
         logger.info(">>>step4: run virt-who with the new hypervisor's fqdn")
         new_name = "new" + str(random.randint(1, 10000)) + ".rhts.eng.pek2.redhat.com"
         self.vw_fake_json_update(host_name, new_name, json_file)
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res3 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step4', []).append(res3)
+        results.setdefault("step4", []).append(res3)
 
         logger.info(">>>step5: use hammer command to check the new hypervisor's fqdn")
-        cmd = "hammer -u {0} -p {1} host list --search 'name ~ virt-who*'".format(admin_user, admin_passwd)
+        cmd = "hammer -u {0} -p {1} host list --search 'name ~ virt-who*'".format(
+            admin_user, admin_passwd
+        )
         _, result = self.runcmd(cmd, ssh_register)
         logger.info(result)
-        res4 = self.vw_msg_search(result, "virt-who-"+new_name)
-        res5 = self.vw_msg_search(result, "virt-who-"+host_name, False)
-        results.setdefault('step5', []).append(res4)
-        results.setdefault('step5', []).append(res5)
+        res4 = self.vw_msg_search(result, "virt-who-" + new_name)
+        res5 = self.vw_msg_search(result, "virt-who-" + host_name, False)
+        results.setdefault("step5", []).append(res4)
+        results.setdefault("step5", []).append(res5)
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py
--- /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py	2023-03-06 06:16:12.841142 +0000
@@ -5,38 +5,40 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-198374')
-        compose_id = self.get_config('rhel_compose')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-198374")
+        compose_id = self.get_config("rhel_compose")
         if "RHEL-9" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # case config
         results = dict()
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
-        hypervisor_type = self.get_config('hypervisor_type')
+        hypervisor_type = self.get_config("hypervisor_type")
         json_file = "/tmp/fake.json"
         fake_config_file = "/etc/virt-who.d/fake.conf"
 
         # case steps
         logger.info(">>>step1: create json file")
         self.vw_fake_json_create("virt-who -d -p", json_file)
         self.vw_etc_d_delete_all()
 
-        logger.info(">>>step2: check the mapping in json file is same with debug output")
+        logger.info(
+            ">>>step2: check the mapping in json file is same with debug output"
+        )
         if hypervisor_type in ("libvirt-local", "vdsm"):
             self.vw_fake_conf_create(fake_config_file, json_file, is_hypervisor=False)
         else:
             self.vw_fake_conf_create(fake_config_file, json_file, is_hypervisor=True)
-        data, tty_output, rhsm_output = self.vw_start(cli='virt-who -do', exp_send=1)
+        data, tty_output, rhsm_output = self.vw_start(cli="virt-who -do", exp_send=1)
         ret, fake_json = self.runcmd("cat {0}".format(json_file), self.ssh_host())
-        fake_json_lines = fake_json.split('\n')
+        fake_json_lines = fake_json.split("\n")
         for line in fake_json_lines:
-            results.setdefault('step2', []).append(line in tty_output)
+            results.setdefault("step2", []).append(line in tty_output)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py
--- /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py	2023-03-06 06:16:12.849447 +0000
@@ -5,67 +5,85 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-196078')
-        hypervisor_type = self.get_config('hypervisor_type')
-        register_type = self.get_config('register_type')
-        if hypervisor_type != 'esx':
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-196078")
+        hypervisor_type = self.get_config("hypervisor_type")
+        register_type = self.get_config("register_type")
+        if hypervisor_type != "esx":
             self.vw_case_skip(hypervisor_type)
         self.vw_case_init()
 
         # Case Config
         results = dict()
         config = self.get_hypervisor_config()
-        ssh_hypervisor = config['ssh_hypervisor']
+        ssh_hypervisor = config["ssh_hypervisor"]
         register_config = self.get_register_config()
-        server = register_config['server']
-        ssh_user = register_config['ssh_user']
-        ssh_passwd = register_config['ssh_passwd']
+        server = register_config["server"]
+        ssh_user = register_config["ssh_user"]
+        ssh_passwd = register_config["ssh_passwd"]
         ssh_register = {"host": server, "username": ssh_user, "password": ssh_passwd}
 
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         host_uuid = self.get_hypervisor_hostuuid()
         host_name = self.get_hypervisor_hostname()
 
-        cert = self.vcenter_cert(config['server'], config['username'], config['password'])
+        cert = self.vcenter_cert(
+            config["server"], config["username"], config["password"]
+        )
         cluster_name = deploy.vcenter.cluster
-        new_cluster_name = "virtwho/test-" + ''.join(random.sample(string.digits, 6))
+        new_cluster_name = "virtwho/test-" + "".join(random.sample(string.digits, 6))
 
         # Case Steps
         try:
             logger.info(">>>step1: change the vcenter cluster name to: virtwho/test")
-            self.vcenter_cluster_name_set(cert, ssh_hypervisor, cluster_name, new_cluster_name)
+            self.vcenter_cluster_name_set(
+                cert, ssh_hypervisor, cluster_name, new_cluster_name
+            )
 
             logger.info(">>>step2: run virt-who service with the new cluster name")
             data, tty_output, rhsm_output = self.vw_start(exp_error=0, exp_send=1)
             res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            res2 = self.vw_msg_search(rhsm_output, '"hypervisor.cluster": "{0}"'.format(new_cluster_name))
-            results.setdefault('step2', []).append(res1)
-            results.setdefault('step2', []).append(res2)
+            res2 = self.vw_msg_search(
+                rhsm_output, '"hypervisor.cluster": "{0}"'.format(new_cluster_name)
+            )
+            results.setdefault("step2", []).append(res1)
+            results.setdefault("step2", []).append(res2)
 
             logger.info(">>>step3: check the hyperivsor facts")
             if "satellite" in register_type:
-                output = self.satellite_hosts_get(self.ssh_host(), register_config,
-                                                  host_name, host_uuid, desc="get hypervisor info")
-                cmd = "hammer host facts --name {}".format(output['name'])
+                output = self.satellite_hosts_get(
+                    self.ssh_host(),
+                    register_config,
+                    host_name,
+                    host_uuid,
+                    desc="get hypervisor info",
+                )
+                cmd = "hammer host facts --name {}".format(output["name"])
                 _, result = self.runcmd(cmd, ssh_register)
             else:
-                output = self.stage_consumer_get(self.ssh_host(), register_config,
-                                                 host_name, host_uuid, desc="get hypervisor info")
-                result = output['facts']['hypervisor.cluster']
+                output = self.stage_consumer_get(
+                    self.ssh_host(),
+                    register_config,
+                    host_name,
+                    host_uuid,
+                    desc="get hypervisor info",
+                )
+                result = output["facts"]["hypervisor.cluster"]
             res = self.vw_msg_search(result, new_cluster_name)
-            results.setdefault('step3', []).append(res)
+            results.setdefault("step3", []).append(res)
 
         finally:
             logger.info(">>>step finally: change back the vcenter cluster name")
-            self.vcenter_cluster_name_set(cert, ssh_hypervisor, new_cluster_name, cluster_name)
+            self.vcenter_cluster_name_set(
+                cert, ssh_hypervisor, new_cluster_name, cluster_name
+            )
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py
--- /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py	2023-03-06 05:02:18.597378 +0000
+++ /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py	2023-03-06 06:16:12.921847 +0000
@@ -5,13 +5,13 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-198375')
-        compose_id = self.get_config('rhel_compose')
-        if 'RHEL-9' not in compose_id:
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-198375")
+        compose_id = self.get_config("rhel_compose")
+        if "RHEL-9" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # Case Config
         results = dict()
@@ -24,57 +24,76 @@
 
         # Case Steps
         try:
             logger.info(">>>step1: configure and backup /etc/virt-who.conf")
             self.vw_etc_conf_disable_all()
-            self.runcmd('cp {0} {1}'.format(conf_file, conf_file_backup), self.ssh_host())
+            self.runcmd(
+                "cp {0} {1}".format(conf_file, conf_file_backup), self.ssh_host()
+            )
 
             logger.info(">>>step2: create /etc/sysconfig/virt-who file")
-            cmd = ('cat <<EOF > {0}\n'
-                   'VIRTWHO_DEBUG = 1\n'
-                   'VIRTWHO_ONE_SHOT = 0\n'
-                   'VIRTWHO_INTERVAL = 120\n'
-                   'http_proxy = {1}:{2}\n'
-                   'no_proxy = *\n'
-                   'EOF'
-                   ).format(sysconfig_file, deploy.proxy.server, deploy.proxy.port)
+            cmd = (
+                "cat <<EOF > {0}\n"
+                "VIRTWHO_DEBUG = 1\n"
+                "VIRTWHO_ONE_SHOT = 0\n"
+                "VIRTWHO_INTERVAL = 120\n"
+                "http_proxy = {1}:{2}\n"
+                "no_proxy = *\n"
+                "EOF"
+            ).format(sysconfig_file, deploy.proxy.server, deploy.proxy.port)
             self.runcmd(cmd, self.ssh_host())
 
             logger.info(">>>step3: run migrateconfiguration.py script")
             cmd = "/usr/bin/python3 /usr/lib/python3.9/site-packages/virtwho/migrate/migrateconfiguration.py"
             self.runcmd(cmd, self.ssh_host())
 
-            logger.info(">>>step4: check the configurations in {0} are migrated to {1}"
-                        .format(sysconfig_file, conf_file))
+            logger.info(
+                ">>>step4: check the configurations in {0} are migrated to {1}".format(
+                    sysconfig_file, conf_file
+                )
+            )
             ret, output = self.runcmd("cat {0}".format(conf_file), self.ssh_host())
-            msg1 = "[global]\n" \
-                   "#migrated\n" \
-                   "interval=120\n" \
-                   "#migrated\n" \
-                   "debug=True\n" \
-                   "#migrated\n" \
-                   "oneshot=False"
-            msg2 = "[system_environment]\n" \
-                   "#migrated\n" \
-                   "http_proxy=squid.corp.redhat.com:3128\n" \
-                   "#migrated\n" \
-                   "no_proxy=*"
-            results.setdefault('step4', []).append(msg1 in output)
-            results.setdefault('step4', []).append(msg2 in output)
+            msg1 = (
+                "[global]\n"
+                "#migrated\n"
+                "interval=120\n"
+                "#migrated\n"
+                "debug=True\n"
+                "#migrated\n"
+                "oneshot=False"
+            )
+            msg2 = (
+                "[system_environment]\n"
+                "#migrated\n"
+                "http_proxy=squid.corp.redhat.com:3128\n"
+                "#migrated\n"
+                "no_proxy=*"
+            )
+            results.setdefault("step4", []).append(msg1 in output)
+            results.setdefault("step4", []).append(msg2 in output)
 
-            logger.info(">>>step5: run virt-who to test the migrated options working well")
+            logger.info(
+                ">>>step5: run virt-who to test the migrated options working well"
+            )
             data, tty_output, rhsm_output = self.vw_start(exp_send=1)
-            res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=120)
+            res1 = self.op_normal_value(
+                data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=120
+            )
             res2 = self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]")
-            results.setdefault('step5', []).append(res1)
-            results.setdefault('step5', []).append(res2)
-
+            results.setdefault("step5", []).append(res1)
+            results.setdefault("step5", []).append(res2)
 
         finally:
             logger.info(">>>step6: recover environments")
-            self.runcmd('cp {0} {1} ; rm -f {0}'.format(conf_file_backup, conf_file),
-                        self.ssh_host(), desc="recover the /etc/virt-who.conf file")
-            self.runcmd('rm -f {0}'.format(sysconfig_file),
-                        self.ssh_host(), desc="remove the /etc/sysconfig/virt-who file")
+            self.runcmd(
+                "cp {0} {1} ; rm -f {0}".format(conf_file_backup, conf_file),
+                self.ssh_host(),
+                desc="recover the /etc/virt-who.conf file",
+            )
+            self.runcmd(
+                "rm -f {0}".format(sysconfig_file),
+                self.ssh_host(),
+                desc="remove the /etc/sysconfig/virt-who file",
+            )
 
         # Case Result
         self.vw_case_result(results)
would reformat /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py
--- /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py	2023-03-06 05:02:18.598378 +0000
+++ /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py	2023-03-06 06:16:12.948556 +0000
@@ -5,33 +5,35 @@
 from virt_who.testing import Testing
 
 
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-198867')
-        compose_id = self.get_config('rhel_compose')
-        hypervisor_type = self.get_config('hypervisor_type')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-198867")
+        compose_id = self.get_config("rhel_compose")
+        hypervisor_type = self.get_config("hypervisor_type")
         if "kubevirt" not in hypervisor_type:
             self.vw_case_skip(hypervisor_type)
         if "RHEL-9" not in compose_id:
             self.vw_case_skip(compose_id)
         self.vw_case_init()
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', "/etc/virt-who.conf")
-        self.vw_option_enable('debug', "/etc/virt-who.conf")
-        self.vw_option_update_value('debug', 'True', "/etc/virt-who.conf")
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_name = "virtwho-config"
         config_file = "/etc/virt-who.d/{0}.conf".format(config_name)
         self.vw_etc_d_mode_create(config_name, config_file)
 
         # case steps
         logger.info(">>>step1: configure kubeconfig without cert and run virt-who")
         kube_config_file = "/root/kube.conf_no_cert"
         kube_config_url = deploy.kubevirt.kube_config_url_no_cert
-        cmd = "rm -f {1}; curl -L {0} -o {1}; sync".format(kube_config_url, kube_config_file)
+        cmd = "rm -f {1}; curl -L {0} -o {1}; sync".format(
+            kube_config_url, kube_config_file
+        )
         self.runcmd(cmd, self.ssh_host())
         self.vw_option_update_value("kubeconfig", kube_config_file, config_file)
 
         for option in ("none", "", "0", "False"):
             if option == "none":
@@ -41,21 +43,21 @@
                 logger.info("> configure virt-who run with insecure={0}".format(option))
             data, tty_output, rhsm_output = self.vw_start(exp_error=True, exp_send=0)
             error_msg = "certificate verify failed"
             res1 = self.op_normal_value(data, exp_error=1, exp_thread=1, exp_send=0)
             res2 = self.vw_msg_search(rhsm_output, error_msg)
-            results.setdefault('step1', []).append(res1)
-            results.setdefault('step1', []).append(res2)
+            results.setdefault("step1", []).append(res1)
+            results.setdefault("step1", []).append(res2)
             self.vw_option_del("insecure", config_file)
 
         logger.info(">>>step2: test insecure=1/True can ignore checking cert")
         for option in ("1", "True"):
             logger.info("> configure virt-who run with insecure={0}".format(option))
             self.vw_option_add("insecure", option, config_file)
             data, tty_output, rhsm_output = self.vw_start(exp_error=False, exp_send=1)
             res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-            results.setdefault('step2', []).append(res)
+            results.setdefault("step2", []).append(res)
             self.vw_option_del("insecure", config_file)
 
         self.runcmd("rm -rf {0}".format(kube_config_file), self.ssh_host())
 
         # case result
would reformat /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py
--- /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py	2023-03-06 05:02:18.598378 +0000
+++ /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py	2023-03-06 06:16:12.956887 +0000
@@ -2,43 +2,51 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133743')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133743")
         hypervisor1_type = self.get_exported_param("HYPERVISOR_01_TYPE")
         hypervisor2_type = self.get_exported_param("HYPERVISOR_02_TYPE")
         if not hypervisor1_type or not hypervisor2_type:
             raise FailException("This case needs two hypervisors for testing")
-        if any(key in ('libvirt-local', 'vdsm') for key in (hypervisor1_type, hypervisor2_type)):
+        if any(
+            key in ("libvirt-local", "vdsm")
+            for key in (hypervisor1_type, hypervisor2_type)
+        ):
             self.vw_case_skip("libvirt-local or vdsm")
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
-        self.vw_case_init(uid='01')
+        self.vw_case_init(uid="01")
 
         # case config
         results = dict()
         config_file = "/etc/sysconfig/virt-who"
         self.vw_option_enable("VIRTWHO_DEBUG", filename=config_file)
-        self.vw_option_update_value("VIRTWHO_DEBUG", '1', filename=config_file)
-        self.vw_etc_sys_mode_enable(uid='01')
-        self.vw_etc_sys_mode_enable(uid='02')
+        self.vw_option_update_value("VIRTWHO_DEBUG", "1", filename=config_file)
+        self.vw_etc_sys_mode_enable(uid="01")
+        self.vw_etc_sys_mode_enable(uid="02")
 
         # case steps
         logger.info(">>>step1: check reporter sent and no error msg")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check how many modes in rhsm.log")
         modes = re.findall(r'Using configuration.*\("(.*?)" mode\)', rhsm_output)
         if len(modes) == 1:
-            logger.info("Succeeded to check, only one mode in rhsm.log: {0}".format(modes))
-            results.setdefault('step2', []).append(True)
+            logger.info(
+                "Succeeded to check, only one mode in rhsm.log: {0}".format(modes)
+            )
+            results.setdefault("step2", []).append(True)
         else:
-            logger.error("Failed to check, the modes number is not matched: {0}".format(modes))
-            results.setdefault('step2', []).append(False)
+            logger.error(
+                "Failed to check, the modes number is not matched: {0}".format(modes)
+            )
+            results.setdefault("step2", []).append(False)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py
--- /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py	2023-03-06 05:02:18.598378 +0000
+++ /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py	2023-03-06 06:16:12.970254 +0000
@@ -2,46 +2,50 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133733')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133733")
         hypervisor1_type = self.get_exported_param("HYPERVISOR_01_TYPE")
         hypervisor2_type = self.get_exported_param("HYPERVISOR_02_TYPE")
         if not hypervisor1_type or not hypervisor2_type:
             raise FailException("This case needs two hypervisors for testing")
-        if any(key in ('libvirt-local', 'vdsm') for key in (hypervisor1_type, hypervisor2_type)):
+        if any(
+            key in ("libvirt-local", "vdsm")
+            for key in (hypervisor1_type, hypervisor2_type)
+        ):
             self.vw_case_skip("libvirt-local or vdsm")
-        self.vw_case_init(uid='01')
+        self.vw_case_init(uid="01")
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_01_name = "virtwho-config-{0}".format(hypervisor1_type)
         config_01_file = "/etc/virt-who.d/{0}.conf".format(config_01_name)
         config_02_name = "virtwho-config-{0}".format(hypervisor2_type)
         config_02_file = "/etc/virt-who.d/{0}.conf".format(config_02_name)
-        guest_01_uuid = self.get_hypervisor_guestuuid(uid='01')
-        guest_02_uuid = self.get_hypervisor_guestuuid(uid='02')
-        
+        guest_01_uuid = self.get_hypervisor_guestuuid(uid="01")
+        guest_02_uuid = self.get_hypervisor_guestuuid(uid="02")
+
         # case steps
         logger.info(">>>step1: create config file include two different hypervisors")
-        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid='01')
-        self.vw_etc_d_mode_create(config_02_name, config_02_file, uid='02')
-        cmd = 'cat {0} >> {1} && rm -rf {0}'.format(config_02_file, config_01_file)
+        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid="01")
+        self.vw_etc_d_mode_create(config_02_name, config_02_file, uid="02")
+        cmd = "cat {0} >> {1} && rm -rf {0}".format(config_02_file, config_01_file)
         ret, output = self.runcmd(cmd, self.ssh_host())
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check mapping info included two hypervisors")
         res1 = self.vw_msg_search(str(data), guest_01_uuid, exp_exist=True)
         res2 = self.vw_msg_search(str(data), guest_02_uuid, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py
--- /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py	2023-03-06 05:02:18.598378 +0000
+++ /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py	2023-03-06 06:16:13.039995 +0000
@@ -2,41 +2,45 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133740')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133740")
         hypervisor1_type = self.get_exported_param("HYPERVISOR_01_TYPE")
         hypervisor2_type = self.get_exported_param("HYPERVISOR_02_TYPE")
         if not hypervisor1_type or not hypervisor2_type:
             raise FailException("This case needs two hypervisors for testing")
-        if any(key in ('libvirt-local', 'vdsm') for key in (hypervisor1_type, hypervisor2_type)):
+        if any(
+            key in ("libvirt-local", "vdsm")
+            for key in (hypervisor1_type, hypervisor2_type)
+        ):
             self.vw_case_skip("libvirt-local or vdsm")
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
-        self.vw_case_init(uid='01')
+        self.vw_case_init(uid="01")
 
         # case config
         results = dict()
         config_01_name = "virtwho-config-{0}".format(hypervisor1_type)
         config_01_file = "/etc/virt-who.d/{0}.conf".format(config_01_name)
-        guest_01_uuid = self.get_hypervisor_guestuuid(uid='01')
-        guest_02_uuid = self.get_hypervisor_guestuuid(uid='02')
+        guest_01_uuid = self.get_hypervisor_guestuuid(uid="01")
+        guest_02_uuid = self.get_hypervisor_guestuuid(uid="02")
 
         # case Steps
         logger.info(">>>step1: create a extra hypervisors in virt-who.d and run cli -d")
-        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid='01')
-        cmd = self.vw_cli_base(uid='02') + "-d"
+        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid="01")
+        cmd = self.vw_cli_base(uid="02") + "-d"
         data, tty_output, rhsm_output = self.vw_start(cmd, exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check mapping info included two hypervisors")
         res1 = self.vw_msg_search(str(data), guest_01_uuid, exp_exist=True)
         res2 = self.vw_msg_search(str(data), guest_02_uuid, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py
--- /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py	2023-03-06 05:02:18.598378 +0000
+++ /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py	2023-03-06 06:16:13.042627 +0000
@@ -2,44 +2,50 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133737')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133737")
         hypervisor1_type = self.get_exported_param("HYPERVISOR_01_TYPE")
         hypervisor2_type = self.get_exported_param("HYPERVISOR_02_TYPE")
         if not hypervisor1_type or not hypervisor2_type:
             raise FailException("This case needs two hypervisors for testing")
-        if any(key in ('libvirt-local', 'vdsm') for key in (hypervisor1_type, hypervisor2_type)):
+        if any(
+            key in ("libvirt-local", "vdsm")
+            for key in (hypervisor1_type, hypervisor2_type)
+        ):
             self.vw_case_skip("libvirt-local or vdsm")
-        if self.pkg_check(self.ssh_host(), 'virt-who')[9:15] >= '0.23.3':
+        if self.pkg_check(self.ssh_host(), "virt-who")[9:15] >= "0.23.3":
             self.vw_case_skip("virt-who version")
-        self.vw_case_init(uid='01')
+        self.vw_case_init(uid="01")
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_01_name = "virtwho-config-{0}".format(hypervisor1_type)
         config_01_file = "/etc/virt-who.d/{0}.conf".format(config_01_name)
-        guest_01_uuid = self.get_hypervisor_guestuuid(uid='01')
-        guest_02_uuid = self.get_hypervisor_guestuuid(uid='02')
+        guest_01_uuid = self.get_hypervisor_guestuuid(uid="01")
+        guest_02_uuid = self.get_hypervisor_guestuuid(uid="02")
 
         # case steps
-        logger.info(">>>step1: enable mode in /etc/sysconfig/virt-who and config another mode in /etc/virt-who.d/")
-        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid='01')
-        self.vw_etc_sys_mode_enable(uid='02')
+        logger.info(
+            ">>>step1: enable mode in /etc/sysconfig/virt-who and config another mode in /etc/virt-who.d/"
+        )
+        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid="01")
+        self.vw_etc_sys_mode_enable(uid="02")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check mapping info included two hypervisors")
         res1 = self.vw_msg_search(str(data), guest_01_uuid, exp_exist=True)
         res2 = self.vw_msg_search(str(data), guest_02_uuid, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py
--- /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py	2023-03-06 05:02:18.598378 +0000
+++ /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py	2023-03-06 06:16:13.054841 +0000
@@ -2,44 +2,48 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133731')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133731")
         hypervisor1_type = self.get_exported_param("HYPERVISOR_01_TYPE")
         hypervisor2_type = self.get_exported_param("HYPERVISOR_02_TYPE")
         if not hypervisor1_type or not hypervisor2_type:
             raise FailException("This case needs two hypervisors for testing")
-        if any(key in ('libvirt-local', 'vdsm') for key in (hypervisor1_type, hypervisor2_type)):
+        if any(
+            key in ("libvirt-local", "vdsm")
+            for key in (hypervisor1_type, hypervisor2_type)
+        ):
             self.vw_case_skip("libvirt-local or vdsm")
-        self.vw_case_init(uid='01')
+        self.vw_case_init(uid="01")
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_01_name = "virtwho-config-{0}".format(hypervisor1_type)
         config_01_file = "/etc/virt-who.d/{0}.conf".format(config_01_name)
         config_02_name = "virtwho-config-{0}".format(hypervisor2_type)
         config_02_file = "/etc/virt-who.d/{0}.conf".format(config_02_name)
-        guest_01_uuid = self.get_hypervisor_guestuuid(uid='01')
-        guest_02_uuid = self.get_hypervisor_guestuuid(uid='02')
+        guest_01_uuid = self.get_hypervisor_guestuuid(uid="01")
+        guest_02_uuid = self.get_hypervisor_guestuuid(uid="02")
 
         # case steps
         logger.info(">>>step1: create two config files for two different hypervisors")
-        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid='01')
-        self.vw_etc_d_mode_create(config_02_name, config_02_file, uid='02')
+        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid="01")
+        self.vw_etc_d_mode_create(config_02_name, config_02_file, uid="02")
         data, tty_output, rhsm_output = self.vw_start(exp_send=1)
         res = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        results.setdefault('step1', []).append(res)
+        results.setdefault("step1", []).append(res)
 
         logger.info(">>>step2: check mapping info included two hypervisors")
         res1 = self.vw_msg_search(str(data), guest_01_uuid, exp_exist=True)
         res2 = self.vw_msg_search(str(data), guest_02_uuid, exp_exist=True)
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py
--- /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py	2023-03-06 05:02:18.598378 +0000
+++ /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py	2023-03-06 06:16:13.091968 +0000
@@ -2,51 +2,55 @@
 from virt_who import *
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
 
+
 class Testcase(Testing):
     def test_run(self):
-        self.vw_case_info(os.path.basename(__file__), case_id='RHEL-133742')
+        self.vw_case_info(os.path.basename(__file__), case_id="RHEL-133742")
         hypervisor1_type = self.get_exported_param("HYPERVISOR_01_TYPE")
         hypervisor2_type = self.get_exported_param("HYPERVISOR_02_TYPE")
         if not hypervisor1_type or not hypervisor2_type:
             raise FailException("This case needs two hypervisors for testing")
-        if any(key in ('libvirt-local', 'vdsm') for key in (hypervisor1_type, hypervisor2_type)):
+        if any(
+            key in ("libvirt-local", "vdsm")
+            for key in (hypervisor1_type, hypervisor2_type)
+        ):
             self.vw_case_skip("libvirt-local or vdsm")
-        self.vw_case_init(uid='01')
+        self.vw_case_init(uid="01")
 
         # case config
         results = dict()
-        self.vw_option_enable('[global]', '/etc/virt-who.conf')
-        self.vw_option_enable('debug', '/etc/virt-who.conf')
-        self.vw_option_update_value('debug', 'True', '/etc/virt-who.conf')
+        self.vw_option_enable("[global]", "/etc/virt-who.conf")
+        self.vw_option_enable("debug", "/etc/virt-who.conf")
+        self.vw_option_update_value("debug", "True", "/etc/virt-who.conf")
         config_01_name = "virtwho-config-{0}".format(hypervisor1_type)
         config_01_file = "/etc/virt-who.d/{0}.conf".format(config_01_name)
         config_02_name = "virtwho-config-{0}".format(hypervisor2_type)
         config_02_file = "/etc/virt-who.d/{0}.conf".format(config_02_name)
-        host_01_uuid = self.get_hypervisor_hostuuid(uid='01')
-        host_02_uuid = self.get_hypervisor_hostuuid(uid='02')
-        guest_01_uuid = self.get_hypervisor_guestuuid(uid='01')
-        guest_02_uuid = self.get_hypervisor_guestuuid(uid='02')
+        host_01_uuid = self.get_hypervisor_hostuuid(uid="01")
+        host_02_uuid = self.get_hypervisor_hostuuid(uid="02")
+        guest_01_uuid = self.get_hypervisor_guestuuid(uid="01")
+        guest_02_uuid = self.get_hypervisor_guestuuid(uid="02")
         json_file = "/tmp/fake.json"
         fake_conf_file = "/etc/virt-who.d/fake.conf"
 
         # case steps
         logger.info(">>>step1: create json file and fake config file")
-        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid='01')
-        self.vw_etc_d_mode_create(config_02_name, config_02_file, uid='02')
+        self.vw_etc_d_mode_create(config_01_name, config_01_file, uid="01")
+        self.vw_etc_d_mode_create(config_02_name, config_02_file, uid="02")
         self.vw_fake_json_create("virt-who", json_file)
         self.vw_etc_d_delete_all()
         self.vw_fake_conf_create(fake_conf_file, json_file, is_hypervisor=True)
 
         logger.info(">>>step2: run virt-who with fake conf")
         data, tty_output, rhsm_output = self.vw_start()
         res1 = self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1)
-        res2 = self.vw_rhsm_associate(data, host_01_uuid, guest_01_uuid, uid='01')
-        res3 = self.vw_rhsm_associate(data, host_02_uuid, guest_02_uuid, uid='02')
-        results.setdefault('step2', []).append(res1)
-        results.setdefault('step2', []).append(res2)
-        results.setdefault('step2', []).append(res3)
+        res2 = self.vw_rhsm_associate(data, host_01_uuid, guest_01_uuid, uid="01")
+        res3 = self.vw_rhsm_associate(data, host_02_uuid, guest_02_uuid, uid="02")
+        results.setdefault("step2", []).append(res1)
+        results.setdefault("step2", []).append(res2)
+        results.setdefault("step2", []).append(res3)
 
         # case result
         self.vw_case_result(results)
would reformat /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py

Oh no! üí• üíî üí•
182 files would be reformatted, 7 files would be left unchanged.


[32m‚úÖ Linted [REPOSITORY] files with [dustilock] successfully - (0.03s)[0m
- Using [dustilock v1.2.0] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_dustilock
- MegaLinter key: [REPOSITORY_DUSTILOCK]
- Rules config: identified by [dustilock]

[32m‚úÖ Linted [REPOSITORY] files with [secretlint] successfully - (1.9s)[0m
- Using [secretlint v6.2.3] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_secretlint
- MegaLinter key: [REPOSITORY_SECRETLINT]
- Rules config: [.secretlintrc.json]
- Ignore file: [.secretlintignore]

[31m‚ùå Linted [PYTHON] files with [bandit]: Found 86 error(s) - (3.73s)[0m
- Using [bandit v1.7.4] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/python_bandit
- MegaLinter key: [PYTHON_BANDIT]
- Rules config: [.bandit.yml]
- Number of files analyzed: [189]
--Error detail:
[main]	INFO	profile include tests: None
[main]	INFO	profile exclude tests: None
[main]	INFO	cli include tests: None
[main]	INFO	cli exclude tests: None
[main]	INFO	using config: /action/lib/.automation/.bandit.yml
[main]	INFO	running on Python 3.11.2
189 [0.. 50.. 100.. 150.. ]
Run started:2023-03-06 06:16:16.835476

Test results:
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:38:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
37	        data, tty_output, rhsm_output = self.vw_start(exp_send=1)
38	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
39	        assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=False))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:39:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
38	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
39	        assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=False))
40	        self.vw_option_update_value('debug', 'True', self.global_file)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:42:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
41	        data, tty_output, rhsm_output = self.vw_start(exp_send=1)
42	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
43	        assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=True))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:43:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
42	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
43	        assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG\]", exp_exist=True))
44	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:48:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
47	            'virt-who -o', exp_send=1, oneshot=True)
48	        assert(self.op_normal_value(data, exp_error=0, exp_thread=0, exp_send=1))
49	        data, tty_output, rhsm_output = self.vw_start(

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:51:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
50	            'virt-who', exp_send=1, oneshot=False)
51	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
52	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:57:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
56	        data, tty_output, rhsm_output = self.vw_start(exp_send=1, exp_loopnum=1)
57	        assert(self.op_normal_value(
58	            data, exp_error=0, exp_thread=1, exp_send=1, exp_interval=60,
59	            exp_loopnum=1, exp_looptime=60))
60	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:72:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
71	            data, tty_output, rhsm_output = self.vw_start()
72	            assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
73	            if option == "hwuuid":

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:79:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
78	                hypervisorId = self.host_uuid
79	            assert(hypervisorId in data[register_owner].keys())
80	            self.vw_option_del("hypervisor_id", self.config_file)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:92:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
91	        data, tty_output, rhsm_output = self.vw_start(exp_send=1)
92	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
93	        self.system_register(self.ssh_host(), register_type, register_config)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:101:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
100	        data, tty_output, rhsm_output = self.vw_start()
101	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
102	        sku_attrs = self.system_sku_attr(self.ssh_host(), vdc_physical_sku, "physical")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:107:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
106	        output = self.system_sku_consumed(self.ssh_guest())
107	        assert(self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True))
108	        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:110:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
109	        if "stage" in register_type:
110	            assert(self.vw_msg_search(output, "Available Repositories" , exp_exist=True))
111	        else:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:112:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
111	        else:
112	            assert(self.vw_msg_search(output, "no repositories available" , exp_exist=True))
113	        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:114:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
113	        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())
114	        assert(self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True))
115	        assert(self.vw_msg_search(output, "Invalid" , exp_exist=False))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/gating/test_virtwho_gating.py:115:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
114	        assert(self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True))
115	        assert(self.vw_msg_search(output, "Invalid" , exp_exist=False))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:46:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
45	        logger.info(f"---data is: {data}---")
46	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
47	        assert (self.register_owner in data.keys())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:47:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
46	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
47	        assert (self.register_owner in data.keys())
48	        assert (self.host_uuid in data[self.register_owner].keys())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:48:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
47	        assert (self.register_owner in data.keys())
48	        assert (self.host_uuid in data[self.register_owner].keys())
49	        assert (self.guest_uuid in data[self.register_owner].keys())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:49:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
48	        assert (self.host_uuid in data[self.register_owner].keys())
49	        assert (self.guest_uuid in data[self.register_owner].keys())
50	
51	        # test hypervisor facts
52	        facts_items = ['socket', 'type', 'dmi', 'version']

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:57:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
56	        for item in facts_items:
57	            assert (item in facts_dic.keys())
58	            assert (facts_dic[item] is not None)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:58:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
57	            assert (item in facts_dic.keys())
58	            assert (facts_dic[item] is not None)
59	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:62:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
61	        data, tty_output, rhsm_output = self.vw_start(exp_send=1)
62	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
63	        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:63:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
62	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
63	        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))
64	        assert (self.vw_web_associate(self.host_name, self.host_uuid, self.guest_name, self.guest_uuid))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:64:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
63	        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))
64	        assert (self.vw_web_associate(self.host_name, self.host_uuid, self.guest_name, self.guest_uuid))
65	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/sca/test_virtwho_sca.py:68:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
67	        ret, output = self.runcmd(cmd='subscription-manager status', ssh=self.ssh_guest())
68	        assert ('Content Access Mode is set to Simple Content Access' in output)
69	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:38:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
37	        data, tty_output, rhsm_output = self.vw_start(exp_send=1)
38	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
39	        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:39:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
38	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
39	        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))
40	        assert (self.vw_web_associate(self.host_name, self.host_uuid, self.guest_name, self.guest_uuid))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:40:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
39	        assert (self.vw_rhsm_associate(data, self.host_uuid, self.guest_uuid))
40	        assert (self.vw_web_associate(self.host_name, self.host_uuid, self.guest_name, self.guest_uuid))
41	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:54:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
53	        data, tty_output, rhsm_output = self.vw_start(exp_send=1)
54	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
55	        self.system_register(self.ssh_host(), register_type, self.register_config)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:70:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
69	            data, tty_output, rhsm_output = self.vw_start(exp_send=1)
70	            assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
71	            assert (self.vw_msg_search(rhsm_output, "Using proxy.*{0}".format(proxy_server)))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:71:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
70	            assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
71	            assert (self.vw_msg_search(rhsm_output, "Using proxy.*{0}".format(proxy_server)))
72	            self.vw_option_disable(option, self.global_file)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:99:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
98	            data, tty_output, rhsm_output = self.vw_start()
99	            assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
100	            assert (ids[0] in data[register_owner].keys())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:100:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
99	            assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
100	            assert (ids[0] in data[register_owner].keys())
101	            logger.info(">>> check only single hypervisor name on Satellite WebUI")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:108:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
107	            ret, result = self.runcmd(cmd, ssh_sat)
108	            assert (self.vw_msg_search(result, "virt-who-" + ids[0]), True)
109	            assert (self.vw_msg_search(result, "virt-who-" + ids[1], False))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:109:12
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
108	            assert (self.vw_msg_search(result, "virt-who-" + ids[0]), True)
109	            assert (self.vw_msg_search(result, "virt-who-" + ids[1], False))
110	            if 'hwuuid' in hypervisor_ids:

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:111:16
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
110	            if 'hwuuid' in hypervisor_ids:
111	                assert (self.vw_msg_search(result, "virt-who-" + ids[2], False))
112	            self.vw_option_del("hypervisor_id", self.config_file)

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:118:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
117	        data, tty_output, rhsm_output = self.vw_start()
118	        assert(self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
119	        logger.info(">>> attach virtual vdc pool for guest")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:126:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
125	        output = self.system_sku_consumed(self.ssh_guest())
126	        assert(self.vw_msg_search(output, vdc_virtual_sku, exp_exist=True))
127	        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:128:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
127	        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())
128	        assert(self.vw_msg_search(output, "no repositories available" , exp_exist=True))
129	        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:130:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
129	        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())
130	        assert(self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True))
131	        assert(self.vw_msg_search(output, "Invalid" , exp_exist=False))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:131:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
130	        assert(self.vw_msg_search(output, "Overall Status: Current" , exp_exist=True))
131	        assert(self.vw_msg_search(output, "Invalid" , exp_exist=False))
132	        logger.info(">>> virtual vdc pool is revoked after unattach physical sku")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:135:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
134	        output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
135	        assert (self.vw_msg_search(output, vdc_virtual_sku, exp_exist=False))
136	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:140:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
139	        data, tty_output, rhsm_output = self.vw_start()
140	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
141	        logger.info(">>> attach virtual limited pool for guest")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:148:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
147	        output = self.system_sku_consumed(self.ssh_guest())
148	        assert (self.vw_msg_search(output, limited_sku))
149	        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:150:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
149	        ret, output = self.runcmd('subscription-manager repos --list', self.ssh_guest())
150	        assert (self.vw_msg_search(output, "no repositories available"))
151	        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:152:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
151	        ret, output = self.runcmd('subscription-manager status', self.ssh_guest())
152	        assert (self.vw_msg_search(output, "Overall Status: Current"))
153	        assert (self.vw_msg_search(output, "Invalid", exp_exist=False))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:153:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
152	        assert (self.vw_msg_search(output, "Overall Status: Current"))
153	        assert (self.vw_msg_search(output, "Invalid", exp_exist=False))
154	        logger.info(">>> no virtual limit pool for guest any more")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:156:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
155	        output = self.system_sku_attr(self.ssh_guest(), limited_sku, "virtual", exp_exist=False)
156	        assert (self.vw_msg_search(str(output), limited_sku, exp_exist=False))
157	        logger.info(">>> limit bonus pool is revoked after unattach physical sku")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:160:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
159	        output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
160	        assert (self.vw_msg_search(output, limited_sku, exp_exist=False))
161	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:165:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
164	        data, tty_output, rhsm_output = self.vw_start()
165	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
166	        logger.info(">>> attach virtual unlimit pool for guest")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:173:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
172	        output = self.system_sku_consumed(self.ssh_guest())
173	        assert (self.vw_msg_search(output, unlimited_sku))
174	        logger.info(">>>  virtual unlimit sku can be listed in guest ")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:176:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
175	        output = self.system_sku_attr(self.ssh_guest(), unlimited_sku, "virtual")
176	        assert (self.vw_msg_search(str(output), unlimited_sku))
177	        logger.info(">>> virtual unlimit pool is revoked after unattach physical sku")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:180:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
179	        output = self.system_sku_consumed(self.ssh_guest(), exp_exist=False)
180	        assert (self.vw_msg_search(output, unlimited_sku, exp_exist=False))
181	

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:185:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
184	        logger.info(">>> set cpu.cpu_socket(s) to 8 in guest")
185	        assert (self.system_custom_facts_create(self.ssh_guest(), 'cpu.cpu_socket(s)', '8'))
186	        logger.info(">>> attach physical instance sku for guest without quantity")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:191:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
190	        output = self.system_sku_consumed(self.ssh_guest())
191	        assert (self.vw_msg_search(output, instance_sku))
192	        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:192:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
191	        assert (self.vw_msg_search(output, instance_sku))
192	        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))
193	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:193:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
192	        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))
193	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
194	        logger.info(">>> attach physical instance sku for guest with quantity=1")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:199:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
198	        output = self.system_sku_consumed(self.ssh_guest())
199	        assert (self.vw_msg_search(output, instance_sku))
200	        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:200:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
199	        assert (self.vw_msg_search(output, instance_sku))
200	        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))
201	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:201:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
200	        assert (self.vw_msg_search(output, 'Quantity Used:.*1'))
201	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
202	        logger.info(">>> attach physical instance sku for guest with quantity=2")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:207:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
206	        output = self.system_sku_consumed(self.ssh_guest())
207	        assert (self.vw_msg_search(output, instance_sku))
208	        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:208:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
207	        assert (self.vw_msg_search(output, instance_sku))
208	        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))
209	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:209:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
208	        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))
209	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
210	        logger.info(">>> attach physical instance sku for guest with quantity=6")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:214:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
213	        output = self.system_sku_consumed(self.ssh_guest())
214	        assert (self.vw_msg_search(output, instance_sku, exp_exist=True))
215	        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:215:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
214	        assert (self.vw_msg_search(output, instance_sku, exp_exist=True))
215	        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))
216	        assert (self.vw_msg_search(output, 'Quantity Used:.*6'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:216:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
215	        assert (self.vw_msg_search(output, 'Quantity Used:.*2'))
216	        assert (self.vw_msg_search(output, 'Quantity Used:.*6'))
217	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:217:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
216	        assert (self.vw_msg_search(output, 'Quantity Used:.*6'))
217	        assert (self.vw_msg_search(output, 'Status Details:.*Subscription is current'))
218	        self.system_custom_facts_remove(self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:224:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
223	        ret, output = self.runcmd("subscription-manager list --av", self.ssh_guest())
224	        assert (self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=True))
225	        logger.info(">>> run virt-who service and check temporary sku disappear")

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:227:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
226	        data, tty_output, rhsm_output = self.vw_start(exp_send=1)
227	        assert (self.op_normal_value(data, exp_error=0, exp_thread=1, exp_send=1))
228	        self.system_sku_refresh(self.ssh_guest())

--------------------------------------------------
>> Issue: [B101:assert_used] Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
   Severity: Low   Confidence: High
   CWE: CWE-703 (https://cwe.mitre.org/data/definitions/703.html)
   Location: /tmp/lint/smoke/test_virtwho_smoke.py:230:8
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b101_assert_used.html
229	        ret, output = self.runcmd("subscription-manager list --av", self.ssh_guest())
230	        assert (self.vw_msg_search(output, 'Subscription Type: .*Temporary', exp_exist=False))

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:15:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
14	        results = dict()
15	        json_file = "/tmp/file.json"
16	        host_uuid = self.get_hypervisor_hostuuid()

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:18:22
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
17	        config_name = "virtwho-config"
18	        config_file = "/tmp/{0}.conf".format(config_name)
19	        self.vw_etc_d_mode_create(config_name, config_file)

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'redhat'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   Location: /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:14:19
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b105_hardcoded_password_string.html
13	        results = dict()
14	        password = "redhat"
15	
16	        # case steps
17	        encrypt_1 = self.vw_encrypted(password)

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:22:22
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
21	        config_name = "virtwho-config"
22	        config_file = "/tmp/{0}.conf".format(config_name)
23	        self.vw_etc_d_mode_create(config_name, config_file)

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:20:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
19	        guest_uuid = self.get_hypervisor_guestuuid()
20	        json_file = "/tmp/fake.json"
21	        conf_file = "/etc/virt-who.d/fake.conf"

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:22:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
21	        guest_uuid = self.get_hypervisor_guestuuid()
22	        json_file = "/tmp/fake.json"
23	        conf_file = "/etc/virt-who.d/fake.conf"

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:22:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
21	        guest_uuid = self.get_hypervisor_guestuuid()
22	        json_file = "/tmp/fake.json"
23	        conf_file = "/etc/virt-who.d/fake.conf"

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: ''
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   Location: /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:26:29
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b105_hardcoded_password_string.html
25	        msg_list = '"encrypted_password" cannot be decrypted|'
26	        encrypted_pwd_null = ''
27	        encrypted_pwd_wrong = 'xxxxxx'

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'xxxxxx'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   Location: /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:27:30
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b105_hardcoded_password_string.html
26	        encrypted_pwd_null = ''
27	        encrypted_pwd_wrong = 'xxxxxx'
28	        steps = {'step2': encrypted_pwd_null, 'step3': encrypted_pwd_wrong}

--------------------------------------------------
>> Issue: [B105:hardcoded_password_string] Possible hardcoded password: 'redhat'
   Severity: Low   Confidence: Medium
   CWE: CWE-259 (https://cwe.mitre.org/data/definitions/259.html)
   Location: /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:24:21
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b105_hardcoded_password_string.html
23	        new_user ="tester"
24	        new_passwd = "redhat"
25	
26	        # case steps
27	        logger.info(">>>step1: create tester account")

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:19:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
18	        hypervisor_type = self.get_config('hypervisor_type')
19	        json_file = "/tmp/fake.json"
20	        conf_file = "/etc/virt-who.d/fake.conf"

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:32:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
31	        self.vw_option_add("hypervisor_id", "hostname", config_file)
32	        json_file = "/tmp/fake.json"
33	        conf_file = "/etc/virt-who.d/fake.conf"

--------------------------------------------------
>> Issue: [B311:blacklist] Standard pseudo-random generators are not suitable for security/cryptographic purposes.
   Severity: Low   Confidence: High
   CWE: CWE-330 (https://cwe.mitre.org/data/definitions/330.html)
   Location: /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:56:31
   More Info: https://bandit.readthedocs.io/en/1.7.4/blacklists/blacklist_calls.html#b311-random
55	        logger.info(">>>step4: run virt-who with the new hypervisor's fqdn")
56	        new_name = "new" + str(random.randint(1, 10000)) + ".rhts.eng.pek2.redhat.com"
57	        self.vw_fake_json_update(host_name, new_name, json_file)

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:22:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
21	        hypervisor_type = self.get_config('hypervisor_type')
22	        json_file = "/tmp/fake.json"
23	        fake_config_file = "/etc/virt-who.d/fake.conf"

--------------------------------------------------
>> Issue: [B108:hardcoded_tmp_directory] Probable insecure usage of temp file/directory.
   Severity: Medium   Confidence: Medium
   CWE: CWE-377 (https://cwe.mitre.org/data/definitions/377.html)
   Location: /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:31:20
   More Info: https://bandit.readthedocs.io/en/1.7.4/plugins/b108_hardcoded_tmp_directory.html
30	        guest_02_uuid = self.get_hypervisor_guestuuid(uid='02')
31	        json_file = "/tmp/fake.json"
32	        fake_conf_file = "/etc/virt-who.d/fake.conf"

--------------------------------------------------

Code scanned:
	Total lines of code: 9775
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 76
		Medium: 10
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 0
		Medium: 14
		High: 72
Files skipped (0):


[31m‚ùå Linted [SPELL] files with [misspell]: Found 1 error(s) - (0.06s)[0m
- Using [misspell v0.3.4] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/spell_misspell
- MegaLinter key: [SPELL_MISSPELL]
- Rules config: identified by [misspell]
- Number of files analyzed: [189]
--Error detail:
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:34:56: "unconsistent" is a misspelling of "inconsistent"
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:62:37: "succeded" is a misspelling of "succeeded"
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:70:37: "succeded" is a misspelling of "succeeded"


[32m‚úÖ Linted [REPOSITORY] files with [syft] successfully - (7.49s)[0m
- Using [syft v0.74.0] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_syft
- MegaLinter key: [REPOSITORY_SYFT]
- Rules config: identified by [syft]

[33m‚úÖ Linted [PYTHON] files with [isort]: Found 130 non blocking error(s) - (0.56s)[0m
- Using [isort v5.12.0] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/python_isort
- MegaLinter key: [PYTHON_ISORT]
- Rules config: [.isort.cfg]
- Number of files analyzed: [189]
--Error detail:
ERROR: /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
--- /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:before	2023-03-06 05:02:18.572378
+++ /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:after	2023-03-06 06:16:23.644960
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:before	2023-03-06 05:02:18.573378
+++ /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:after	2023-03-06 06:16:23.646771
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:before	2023-03-06 05:02:18.573378
+++ /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:after	2023-03-06 06:16:23.650685
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:before	2023-03-06 05:02:18.573378
+++ /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:after	2023-03-06 06:16:23.652474
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:before	2023-03-06 05:02:18.573378
+++ /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:after	2023-03-06 06:16:23.654482
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:before	2023-03-06 05:02:18.574378
+++ /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:after	2023-03-06 06:16:23.656166
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:before	2023-03-06 05:02:18.574378
+++ /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:after	2023-03-06 06:16:23.657893
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:before	2023-03-06 05:02:18.575378
+++ /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:after	2023-03-06 06:16:23.668763
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:before	2023-03-06 05:02:18.575378
+++ /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:after	2023-03-06 06:16:23.673165
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:before	2023-03-06 05:02:18.575378
+++ /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:after	2023-03-06 06:16:23.675898
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:after	2023-03-06 06:16:23.677559
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:after	2023-03-06 06:16:23.679317
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:after	2023-03-06 06:16:23.681019
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:after	2023-03-06 06:16:23.682793
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:after	2023-03-06 06:16:23.685056
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:after	2023-03-06 06:16:23.687289
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.688865
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:after	2023-03-06 06:16:23.690612
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.692282
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:after	2023-03-06 06:16:23.694913
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:after	2023-03-06 06:16:23.697384
@@ -3,6 +3,7 @@
ERROR: /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:before	2023-03-06 05:02:18.576378
+++ /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:after	2023-03-06 06:16:23.698870
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.700732
@@ -2,6 +2,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.703344
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.705477
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.707896
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.712357
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.714601
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.716766
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.718882
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.721501
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.723320
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.577378
+++ /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.725584
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.728026
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.730081
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.732063
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.733875
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.735555
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.737502
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.739414
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
ERROR: /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py Imports are incorrectly sorted and/or formatted.
+++ /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.742351
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.744385
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.746564
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.748259
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.749858
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.751448
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.753206
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.578378
+++ /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.755301
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.757085
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.759312
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.761520
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:after	2023-03-06 06:16:23.763754
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:after	2023-03-06 06:16:23.768303
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:after	2023-03-06 06:16:23.770646
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:after	2023-03-06 06:16:23.772545
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:before	2023-03-06 05:02:18.579378
+++ /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:after	2023-03-06 06:16:23.774577
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:after	2023-03-06 06:16:23.776346
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:after	2023-03-06 06:16:23.778728
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:after	2023-03-06 06:16:23.781245
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:after	2023-03-06 06:16:23.783464
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
ERROR: /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py Imports are incorrectly sorted and/or formatted.
--- /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:after	2023-03-06 06:16:23.785479
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:after	2023-03-06 06:16:23.787429
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:after	2023-03-06 06:16:23.789528
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:after	2023-03-06 06:16:23.792059
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:before	2023-03-06 05:02:18.589378
+++ /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:after	2023-03-06 06:16:23.794321
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:after	2023-03-06 06:16:23.796573
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:after	2023-03-06 06:16:23.799484
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:after	2023-03-06 06:16:23.802087
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:after	2023-03-06 06:16:23.804876
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:after	2023-03-06 06:16:23.806926
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:after	2023-03-06 06:16:23.809635
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:after	2023-03-06 06:16:23.812233
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:after	2023-03-06 06:16:23.814452
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:after	2023-03-06 06:16:23.816588
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:after	2023-03-06 06:16:23.818563
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:after	2023-03-06 06:16:23.821538
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:before	2023-03-06 05:02:18.590378
+++ /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:after	2023-03-06 06:16:23.828270
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:before	2023-03-06 05:02:18.591378
+++ /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:after	2023-03-06 06:16:23.831368
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:before	2023-03-06 05:02:18.591378
+++ /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:after	2023-03-06 06:16:23.834744
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:before	2023-03-06 05:02:18.591378
ERROR: /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
+++ /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:after	2023-03-06 06:16:23.837156
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.591378
+++ /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.840641
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:before	2023-03-06 05:02:18.591378
+++ /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:after	2023-03-06 06:16:23.843214
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:before	2023-03-06 05:02:18.591378
+++ /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:after	2023-03-06 06:16:23.845821
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:before	2023-03-06 05:02:18.591378
+++ /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:after	2023-03-06 06:16:23.849904
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:before	2023-03-06 05:02:18.591378
+++ /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:after	2023-03-06 06:16:23.854938
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:before	2023-03-06 05:02:18.592378
+++ /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:after	2023-03-06 06:16:23.870531
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:before	2023-03-06 05:02:18.592378
+++ /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:after	2023-03-06 06:16:23.875138
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:before	2023-03-06 05:02:18.592378
+++ /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:after	2023-03-06 06:16:23.879116
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:before	2023-03-06 05:02:18.592378
+++ /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:after	2023-03-06 06:16:23.883274
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:before	2023-03-06 05:02:18.592378
+++ /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:after	2023-03-06 06:16:23.887380
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:before	2023-03-06 05:02:18.594378
+++ /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:after	2023-03-06 06:16:23.891525
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.594378
+++ /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.898622
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.594378
+++ /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.904478
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.594378
+++ /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.909153
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.594378
+++ /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.915717
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:before	2023-03-06 05:02:18.594378
+++ /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:after	2023-03-06 06:16:23.918819
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.923376
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.932774
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.935513
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.938448
@@ -3,6 +3,7 @@
 from virt_who.base import Base
ERROR: /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py Imports are incorrectly sorted and/or formatted.
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.940375
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.942441
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:after	2023-03-06 06:16:23.944567
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:after	2023-03-06 06:16:23.946618
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:after	2023-03-06 06:16:23.950583
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:after	2023-03-06 06:16:23.952877
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:after	2023-03-06 06:16:23.955813
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:after	2023-03-06 06:16:23.961210
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:before	2023-03-06 05:02:18.595378
+++ /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:after	2023-03-06 06:16:23.963468
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:after	2023-03-06 06:16:23.965754
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:after	2023-03-06 06:16:23.968628
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:after	2023-03-06 06:16:23.973733
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:after	2023-03-06 06:16:23.976369
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:after	2023-03-06 06:16:23.980143
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:after	2023-03-06 06:16:23.982717
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:after	2023-03-06 06:16:23.984686
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:after	2023-03-06 06:16:23.987560
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:after	2023-03-06 06:16:23.990945
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:after	2023-03-06 06:16:23.993232
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:before	2023-03-06 05:02:18.596378
+++ /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:after	2023-03-06 06:16:23.995224
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:before	2023-03-06 05:02:18.596378
ERROR: /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py Imports are incorrectly sorted and/or formatted.
ERROR: /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py Imports are incorrectly sorted and/or formatted.
+++ /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:after	2023-03-06 06:16:23.997388
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:before	2023-03-06 05:02:18.597378
+++ /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:after	2023-03-06 06:16:24.000105
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:before	2023-03-06 05:02:18.597378
+++ /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:after	2023-03-06 06:16:24.002903
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:before	2023-03-06 05:02:18.597378
+++ /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:after	2023-03-06 06:16:24.010293
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:before	2023-03-06 05:02:18.598378
+++ /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:after	2023-03-06 06:16:24.019305
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.598378
+++ /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:after	2023-03-06 06:16:24.021532
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.598378
+++ /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:after	2023-03-06 06:16:24.023645
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:before	2023-03-06 05:02:18.598378
+++ /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:after	2023-03-06 06:16:24.025781
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:before	2023-03-06 05:02:18.598378
+++ /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:after	2023-03-06 06:16:24.027735
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):
--- /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:before	2023-03-06 05:02:18.598378
+++ /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:after	2023-03-06 06:16:24.030098
@@ -3,6 +3,7 @@
 from virt_who.base import Base
 from virt_who.register import Register
 from virt_who.testing import Testing
+
 
 class Testcase(Testing):
     def test_run(self):


[31m‚ùå Linted [REPOSITORY] files with [git_diff]: Found 1 error(s) - (0.01s)[0m
- Using [git_diff v2.38.4] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_git_diff
- MegaLinter key: [REPOSITORY_GIT_DIFF]
- Rules config: identified by [git_diff]
--Error detail:
warning: Not a git repository. Use --no-index to compare two paths outside a working tree
usage: git diff --no-index [<options>] <path> <path>

Diff output format options
    -p, --patch           generate patch
    -s, --no-patch        suppress diff output
    -u                    generate patch
    -U, --unified[=<n>]   generate diffs with <n> lines context
    -W, --function-context
                          generate diffs with <n> lines context
    --raw                 generate the diff in raw format
    --patch-with-raw      synonym for '-p --raw'
    --patch-with-stat     synonym for '-p --stat'
    --numstat             machine friendly --stat
    --shortstat           output only the last line of --stat
    -X, --dirstat[=<param1,param2>...]
                          output the distribution of relative amount of changes for each sub-directory
    --cumulative          synonym for --dirstat=cumulative
    --dirstat-by-file[=<param1,param2>...]
                          synonym for --dirstat=files,param1,param2...
    --check               warn if changes introduce conflict markers or whitespace errors
    --summary             condensed summary such as creations, renames and mode changes
    --name-only           show only names of changed files
    --name-status         show only names and status of changed files
    --stat[=<width>[,<name-width>[,<count>]]]
                          generate diffstat
    --stat-width <width>  generate diffstat with a given width
    --stat-name-width <width>
                          generate diffstat with a given name width
    --stat-graph-width <width>
                          generate diffstat with a given graph width
    --stat-count <count>  generate diffstat with limited lines
    --compact-summary     generate compact summary in diffstat
    --binary              output a binary diff that can be applied
    --full-index          show full pre- and post-image object names on the "index" lines
    --color[=<when>]      show colored diff
    --ws-error-highlight <kind>
                          highlight whitespace errors in the 'context', 'old' or 'new' lines in the diff
    -z                    do not munge pathnames and use NULs as output field terminators in --raw or --numstat
    --abbrev[=<n>]        use <n> digits to display object names
    --src-prefix <prefix>
                          show the given source prefix instead of "a/"
    --dst-prefix <prefix>
                          show the given destination prefix instead of "b/"
    --line-prefix <prefix>
                          prepend an additional prefix to every line of output
    --no-prefix           do not show any source or destination prefix
    --inter-hunk-context <n>
                          show context between diff hunks up to the specified number of lines
    --output-indicator-new <char>
                          specify the character to indicate a new line instead of '+'
    --output-indicator-old <char>
                          specify the character to indicate an old line instead of '-'
    --output-indicator-context <char>
                          specify the character to indicate a context instead of ' '

Diff rename options
    -B, --break-rewrites[=<n>[/<m>]]
                          break complete rewrite changes into pairs of delete and create
    -M, --find-renames[=<n>]
                          detect renames
    -D, --irreversible-delete
                          omit the preimage for deletes
    -C, --find-copies[=<n>]
                          detect copies
    --find-copies-harder  use unmodified files as source to find copies
    --no-renames          disable rename detection
    --rename-empty        use empty blobs as rename source
    --follow              continue listing the history of a file beyond renames
    -l <n>                prevent rename/copy detection if the number of rename/copy targets exceeds given limit

Diff algorithm options
    --minimal             produce the smallest possible diff
    -w, --ignore-all-space
                          ignore whitespace when comparing lines
    -b, --ignore-space-change
                          ignore changes in amount of whitespace
    --ignore-space-at-eol
                          ignore changes in whitespace at EOL
    --ignore-cr-at-eol    ignore carrier-return at the end of line
    --ignore-blank-lines  ignore changes whose lines are all blank
    -I, --ignore-matching-lines <regex>
                          ignore changes whose all lines match <regex>
    --indent-heuristic    heuristic to shift diff hunk boundaries for easy reading
    --patience            generate diff using the "patience diff" algorithm
    --histogram           generate diff using the "histogram diff" algorithm
    --diff-algorithm <algorithm>
                          choose a diff algorithm
    --anchored <text>     generate diff using the "anchored diff" algorithm
    --word-diff[=<mode>]  show word diff, using <mode> to delimit changed words
    --word-diff-regex <regex>
                          use <regex> to decide what a word is
    --color-words[=<regex>]
                          equivalent to --word-diff=color --word-diff-regex=<regex>
    --color-moved[=<mode>]
                          moved lines of code are colored differently
    --color-moved-ws <mode>
                          how white spaces are ignored in --color-moved

Other diff options
    --relative[=<prefix>]
                          when run from subdir, exclude changes outside and show relative paths
    -a, --text            treat all files as text
    -R                    swap two inputs, reverse the diff
    --exit-code           exit with 1 if there were differences, 0 otherwise
    --quiet               disable all output of the program
    --ext-diff            allow an external diff helper to be executed
    --textconv            run external text conversion filters when comparing binary files
    --ignore-submodules[=<when>]
                          ignore changes to submodules in the diff generation
    --submodule[=<format>]
                          specify how differences in submodules are shown
    --ita-invisible-in-index
                          hide 'git add -N' entries from the index
    --ita-visible-in-index
                          treat 'git add -N' entries as real in the index
    -S <string>           look for differences that change the number of occurrences of the specified string
    -G <regex>            look for differences that change the number of occurrences of the specified regex
    --pickaxe-all         show all changes in the changeset with -S or -G
    --pickaxe-regex       treat <string> in -S as extended POSIX regular expression
    -O <file>             control the order in which files appear in the output
    --rotate-to <path>    show the change in the specified path first
    --skip-to <path>      skip the output to the specified path
    --find-object <object-id>
                          look for differences that change the number of occurrences of the specified object
    --diff-filter [(A|C|D|M|R|T|U|X|B)...[*]]
                          select files by diff type
    --output <file>       output to a specific file



[31m‚ùå Linted [SPELL] files with [cspell]: Found 2582 error(s) - (61.61s)[0m
- Using [cspell v6.28.0] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/spell_cspell
- MegaLinter key: [SPELL_CSPELL]
- Rules config: identified by [cspell]
- Number of files analyzed: [190]
--Error detail:
  1/190 ./tmp/lint/__init__.py 731.00ms
  2/190 ./tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt 1919.90ms X
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:3:23      - Unknown word (virtwho)    -- tmp lint gating test virtwho gating
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:5:20      - Unknown word (virtwho)    -- tmp lint sca test virtwho sca
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:7:22      - Unknown word (virtwho)    -- tmp lint smoke test virtwho smoke
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:9:31      - Unknown word (virtwho)    -- tier1 tc 1001 check virtwho is shipped by different
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:10:31     - Unknown word (virtwho)    -- tier1 tc 1002 check virtwho can be installed and
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:12:39     - Unknown word (virtwhoconfig) -- tc 1004 check virtwho virtwhoconfig man page and help exist
	 Suggestions: []
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:15:66     - Unknown word (sysconfig)     -- and send function by sysconfig
	 Suggestions: [jsconfig, tsconfig, gitconfig, ifconfig, ipconfig]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:19:57     - Unknown word (sysconfig)     -- virtwho debug function by sysconfig
	 Suggestions: [jsconfig, tsconfig, gitconfig, ifconfig, ipconfig]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:20:39     - Unknown word (oneshot)       -- tc 1012 check virtwho oneshot function by cli
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:21:39     - Unknown word (oneshot)       -- tc 1013 check virtwho oneshot function by sysconfig
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:21:59     - Unknown word (sysconfig)     -- oneshot function by sysconfig
	 Suggestions: [jsconfig, tsconfig, gitconfig, ifconfig, ipconfig]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:23:56     - Unknown word (sysconfig)     -- interval function by etc sysconfig
	 Suggestions: [jsconfig, tsconfig, gitconfig, ifconfig, ipconfig]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:32:39     - Unknown word (sysconfig)     -- tc 1024 check virtwho sysconfig and pid files permission
	 Suggestions: [jsconfig, tsconfig, gitconfig, ifconfig, ipconfig]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:34:39     - Unknown word (executabe)     -- tc 1026 check virtwho executabe file can be insteaded
	 Suggestions: [executable, executables, executant, executive, execute]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:34:61     - Unknown word (insteaded)     -- executabe file can be insteaded or not
	 Suggestions: [instead, instated, intended, steaded, insheathed]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:36:60     - Unknown word (rhsmcertd)     -- status after restart rhsmcertd service
	 Suggestions: []
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:38:49     - Unknown word (dconf)         -- check mapping info with dconf and sysconf for the
	 Suggestions: [conf, dcopy, dione, drone, deon]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:38:59     - Unknown word (sysconf)       -- info with dconf and sysconf for the same mode
	 Suggestions: [sysco, Sysco, sysctl, systole, syslog]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:43:31     - Unknown word (virt)          -- tier1 tc 1040 check virt who password function
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:45:31     - Unknown word (rhsm)          -- tier1 tc 1042 check rhsm username and rhsm password
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:45:49     - Unknown word (rhsm)          -- check rhsm username and rhsm password option in etc
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:46:31     - Unknown word (rhsm)          -- tier1 tc 1043 check rhsm username and rhsm encrypted
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:46:49     - Unknown word (rhsm)          -- check rhsm username and rhsm encrypted password option
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:47:31     - Unknown word (rhsm)          -- tier1 tc 1044 check rhsm hostname port prefix
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:62:38     - Unknown word (oneshot)       -- tc 1059 check global oneshot option in etc virtwho
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:74:57     - Unknown word (reregister)    -- log and thread after reregister host
	 Suggestions: [deregister, preregister, register, preregisters, unregister]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:79:50     - Unknown word (rhsmlog)       -- check associated info by rhsmlog and webui
	 Suggestions: [rheology, rhyming, syslog, homolog, isolog]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:79:62     - Unknown word (webui)         -- info by rhsmlog and webui
	 Suggestions: [webkit, web's, webby, weber, webb]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:105:60    - Unknown word (reconfig)      -- threads number after reconfig libvirt
	 Suggestions: [rbconfig, reconfirm, reconsign, ifconfig, ipconfig]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:112:30    - Unknown word (virt)          -- lint tier1 tc 1110 send virt who version in the User
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:137:34    - Unknown word (encryped)      -- tier2 tc 2021 validate encryped password option by virtwho
	 Suggestions: [encrypted, encrypts, encrypt, encamped, necrosed]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:153:41    - Unknown word (oneshot)       -- 037 validate global oneshot by virtwho conf
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:161:66    - Unknown word (webui)         -- subscriptions in satellite webui
	 Suggestions: [webkit, web's, webby, weber, webb]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:162:63    - Unknown word (webui)         -- by item in satellite webui
	 Suggestions: [webkit, web's, webby, weber, webb]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:163:81    - Unknown word (webui)         -- hypervisor from server webui
	 Suggestions: [webkit, web's, webby, weber, webb]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:164:46    - Unknown word (activaiton)    -- register system with activaiton key
	 Suggestions: [activation, activations, activator, activation's, activating]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:166:34    - Unknown word (virt)          -- tier2 tc 2051 validate virt who password commandline
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:166:52    - Unknown word (commandline)   -- validate virt who password commandline
	 Suggestions: [commanding, commandment, Commandment, commandant, commingling]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:170:34    - Unknown word (rhevm)         -- tier2 tc 2055 validate rhevm url without ovirt engine
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:170:52    - Unknown word (ovirt)         -- validate rhevm url without ovirt engine
	 Suggestions: [overt, ovine, ovid, ovary, overs]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:181:59    - Unknown word (virt)          -- options migration during virt who upgrade
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:182:25    - Unknown word (valide)        -- tmp lint tier2 tc 2069 valide insecure option for
	 Suggestions: [valid, valine, valise, halide, validly]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:182:52    - Unknown word (kubevirt)      -- insecure option for kubevirt
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:187:49    - Unknown word (dconf)         -- check mapping info with dconf and sysconf for two
	 Suggestions: [conf, dcopy, dione, drone, deon]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:187:59    - Unknown word (sysconf)       -- info with dconf and sysconf for two modes
	 Suggestions: [sysco, Sysco, sysctl, systole, syslog]
/tmp/lint/e1cb76e3-6516-4e51-bb94-05fa8cc50d9b-megalinter_file_names_cspell.txt:188:49    - Unknown word (dconf)         -- check mapping info with dconf and cli for two modes
	 Suggestions: [conf, dcopy, dione, drone, deon]
  3/190 ./tmp/lint/gating/__init__.py 2.10ms
  4/190 ./tmp/lint/gating/test_virtwho_gating.py 880.71ms X
/tmp/lint/gating/test_virtwho_gating.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/gating/test_virtwho_gating.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/gating/test_virtwho_gating.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/gating/test_virtwho_gating.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/gating/test_virtwho_gating.py:8:7       - Unknown word (Virt)       -- class VirtWhoGatingTestCase(Testing
	 Suggestions: [Virtu, Vert, Airt, Dirt, Girt]
/tmp/lint/gating/test_virtwho_gating.py:12:15     - Unknown word (Virt)       -- super(VirtWhoGatingTestCase, cls
	 Suggestions: [Virtu, Vert, Airt, Dirt, Girt]
/tmp/lint/gating/test_virtwho_gating.py:13:28     - Unknown word (virtwho)    -- cls.config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/gating/test_virtwho_gating.py:14:33     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/virtwo_gating
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/gating/test_virtwho_gating.py:14:44     - Unknown word (virtwo)     -- file = "/etc/virt-who.d/virtwo_gating.conf"
	 Suggestions: [vitro, virtue, virtus, virtu, virago]
/tmp/lint/gating/test_virtwho_gating.py:18:44     - Unknown word (hostuuid)   -- cls.get_hypervisor_hostuuid(cls())
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/gating/test_virtwho_gating.py:19:18     - Unknown word (hwuuid)     -- cls.host_hwuuid = cls.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/gating/test_virtwho_gating.py:19:46     - Unknown word (hwuuid)     -- cls.get_hypervisor_hwuuid(cls())
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/gating/test_virtwho_gating.py:21:45     - Unknown word (guestuuid)  -- cls.get_hypervisor_guestuuid(cls())
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/gating/test_virtwho_gating.py:35:14     - Unknown word (virtwho)    -- def test_virtwho_debug(self):
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/gating/test_virtwho_gating.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/gating/test_virtwho_gating.py:39:35     - Unknown word (rhsm)       -- assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/gating/test_virtwho_gating.py:41:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/gating/test_virtwho_gating.py:43:35     - Unknown word (rhsm)       -- assert(self.vw_msg_search(rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/gating/test_virtwho_gating.py:45:14     - Unknown word (virtwho)    -- def test_virtwho_oneshot(self):
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/gating/test_virtwho_gating.py:45:22     - Unknown word (oneshot)    -- def test_virtwho_oneshot(self):
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/gating/test_virtwho_gating.py:46:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/gating/test_virtwho_gating.py:47:40     - Unknown word (oneshot)    -- who -o', exp_send=1, oneshot=True)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/gating/test_virtwho_gating.py:50:37     - Unknown word (oneshot)    -- virt-who', exp_send=1, oneshot=False)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/gating/test_virtwho_gating.py:53:14     - Unknown word (virtwho)    -- def test_virtwho_interval(self):
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/gating/test_virtwho_gating.py:56:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/gating/test_virtwho_gating.py:59:17     - Unknown word (loopnum)    -- exp_loopnum=1, exp_looptime=60)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/gating/test_virtwho_gating.py:59:32     - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=60))
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
/tmp/lint/gating/test_virtwho_gating.py:61:14     - Unknown word (virtwho)    -- def test_virtwho_hypervisor_id(self)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/gating/test_virtwho_gating.py:67:40     - Unknown word (rhevm)      -- hypervisor_type in ('esx', 'rhevm'):
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/gating/test_virtwho_gating.py:68:31     - Unknown word (hwuuid)     -- steps['step3'] = 'hwuuid'
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/gating/test_virtwho_gating.py:73:27     - Unknown word (hwuuid)     -- if option == "hwuuid":
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/gating/test_virtwho_gating.py:74:42     - Unknown word (hwuuid)     -- hypervisorId = self.host_hwuuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/gating/test_virtwho_gating.py:108:28    - Unknown word (runcmd)     -- ret, output = self.runcmd('subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/gating/test_virtwho_gating.py:113:28    - Unknown word (runcmd)     -- ret, output = self.runcmd('subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
  5/190 ./tmp/lint/sca/__init__.py 2.70ms
  6/190 ./tmp/lint/sca/test_virtwho_sca.py 542.92ms X
/tmp/lint/sca/test_virtwho_sca.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/sca/test_virtwho_sca.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/sca/test_virtwho_sca.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/sca/test_virtwho_sca.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/sca/test_virtwho_sca.py:8:7       - Unknown word (Virt)       -- class VirtWhoSCATestCase(Testing
	 Suggestions: [Virtu, Vert, Airt, Dirt, Girt]
/tmp/lint/sca/test_virtwho_sca.py:12:15     - Unknown word (Virt)       -- super(VirtWhoSCATestCase, cls)
	 Suggestions: [Virtu, Vert, Airt, Dirt, Girt]
/tmp/lint/sca/test_virtwho_sca.py:23:42     - Unknown word (virtwho)    -- mode_create(cls(), 'virtwho-config', '/etc/virt
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/sca/test_virtwho_sca.py:23:65     - Unknown word (virt)       -- virtwho-config', '/etc/virt-who.d/virtwo_sca.conf
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/sca/test_virtwho_sca.py:23:76     - Unknown word (virtwo)     -- config', '/etc/virt-who.d/virtwo_sca.conf')
	 Suggestions: [vitro, virtue, virtus, virtu, virago]
/tmp/lint/sca/test_virtwho_sca.py:27:44     - Unknown word (hostuuid)   -- cls.get_hypervisor_hostuuid(cls())
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/sca/test_virtwho_sca.py:30:45     - Unknown word (guestuuid)  -- cls.get_hypervisor_guestuuid(cls())
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/sca/test_virtwho_sca.py:44:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/sca/test_virtwho_sca.py:53:59     - Unknown word (rhevm)      -- hypervisor_type') in ('esx', 'rhevm', 'ahv'):
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/sca/test_virtwho_sca.py:61:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/sca/test_virtwho_sca.py:63:25     - Unknown word (rhsm)       -- assert (self.vw_rhsm_associate(data, self
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/sca/test_virtwho_sca.py:66:20     - Unknown word (entilement) -- def test_guest_entilement_with_sca_enabled(self
	 Suggestions: [entitlement, enticement, entitlements, enticements, entailment]
/tmp/lint/sca/test_virtwho_sca.py:67:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd='subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
  7/190 ./tmp/lint/smoke/__init__.py 1.53ms
  8/190 ./tmp/lint/smoke/test_virtwho_smoke.py 751.36ms X
/tmp/lint/smoke/test_virtwho_smoke.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/smoke/test_virtwho_smoke.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/smoke/test_virtwho_smoke.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/smoke/test_virtwho_smoke.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/smoke/test_virtwho_smoke.py:8:7       - Unknown word (Virt)       -- class VirtWhoSmokeTestCase(Testing
	 Suggestions: [Virtu, Vert, Airt, Dirt, Girt]
/tmp/lint/smoke/test_virtwho_smoke.py:12:15     - Unknown word (Virt)       -- super(VirtWhoSmokeTestCase, cls
	 Suggestions: [Virtu, Vert, Airt, Dirt, Girt]
/tmp/lint/smoke/test_virtwho_smoke.py:13:28     - Unknown word (virtwho)    -- cls.config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/smoke/test_virtwho_smoke.py:14:33     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/virtwo_smoke.conf
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/smoke/test_virtwho_smoke.py:14:44     - Unknown word (virtwo)     -- file = "/etc/virt-who.d/virtwo_smoke.conf"
	 Suggestions: [vitro, virtue, virtus, virtu, virago]
/tmp/lint/smoke/test_virtwho_smoke.py:19:44     - Unknown word (hostuuid)   -- cls.get_hypervisor_hostuuid(cls())
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/smoke/test_virtwho_smoke.py:20:18     - Unknown word (hwuuid)     -- cls.host_hwuuid = cls.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/smoke/test_virtwho_smoke.py:20:46     - Unknown word (hwuuid)     -- cls.get_hypervisor_hwuuid(cls())
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/smoke/test_virtwho_smoke.py:22:45     - Unknown word (guestuuid)  -- cls.get_hypervisor_guestuuid(cls())
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/smoke/test_virtwho_smoke.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/smoke/test_virtwho_smoke.py:39:25     - Unknown word (rhsm)       -- assert (self.vw_rhsm_associate(data, self
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/smoke/test_virtwho_smoke.py:42:17     - Unknown word (rhsm)       -- def test_vw_rhsm_options(self):
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/smoke/test_virtwho_smoke.py:44:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/smoke/test_virtwho_smoke.py:48:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", self.register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/smoke/test_virtwho_smoke.py:49:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", "443", self.config
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/smoke/test_virtwho_smoke.py:76:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/smoke/test_virtwho_smoke.py:79:40     - Unknown word (rhevm)      -- hypervisor_type in ('esx', 'rhevm'):
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/smoke/test_virtwho_smoke.py:80:52     - Unknown word (hwuuid)     -- uuid', 'hostname', 'hwuuid']
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/smoke/test_virtwho_smoke.py:84:17     - Unknown word (hwuuid)     -- if 'hwuuid' in hypervisor_ids:
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/smoke/test_virtwho_smoke.py:86:70     - Unknown word (hwuuid)     -- host_name, self.host_hwuuid]
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/smoke/test_virtwho_smoke.py:107:32    - Unknown word (runcmd)     -- ret, result = self.runcmd(cmd, ssh_sat)
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/smoke/test_virtwho_smoke.py:120:25    - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/smoke/test_virtwho_smoke.py:127:28    - Unknown word (runcmd)     -- ret, output = self.runcmd('subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/smoke/test_virtwho_smoke.py:129:28    - Unknown word (runcmd)     -- ret, output = self.runcmd('subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/smoke/test_virtwho_smoke.py:132:60    - Unknown word (unattach)   -- pool is revoked after unattach physical sku")
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/smoke/test_virtwho_smoke.py:133:21    - Unknown word (unattach)   -- self.vw_web_unattach(self.host_name, self
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/smoke/test_virtwho_smoke.py:137:14    - Unknown word (virtwho)    -- def test_virtwho_limited_subscription
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/smoke/test_virtwho_smoke.py:142:25    - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/smoke/test_virtwho_smoke.py:149:28    - Unknown word (runcmd)     -- ret, output = self.runcmd('subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/smoke/test_virtwho_smoke.py:151:28    - Unknown word (runcmd)     -- ret, output = self.runcmd('subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/smoke/test_virtwho_smoke.py:157:60    - Unknown word (unattach)   -- pool is revoked after unattach physical sku")
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/smoke/test_virtwho_smoke.py:162:14    - Unknown word (virtwho)    -- def test_virtwho_unlimited_subscription
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/smoke/test_virtwho_smoke.py:163:47    - Unknown word (unlimit)    -- self.register_config['unlimit']
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/smoke/test_virtwho_smoke.py:166:41    - Unknown word (unlimit)    -- ">>> attach virtual unlimit pool for guest")
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/smoke/test_virtwho_smoke.py:174:35    - Unknown word (unlimit)    -- logger.info(">>> virtual unlimit sku can be listed in
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/smoke/test_virtwho_smoke.py:177:34    - Unknown word (unlimit)    -- logger.info(">>> virtual unlimit pool is revoked after
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/smoke/test_virtwho_smoke.py:182:14    - Unknown word (virtwho)    -- def test_virtwho_instance_subscription
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
  9/190 ./tmp/lint/tier1/__init__.py 1.92ms
 10/190 ./tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py 41.81ms X
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:17:48     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:28:18     - Unknown word (aarch)      -- 'aarch64',
	 Suggestions: [anarch, arch, larch, march, March]
 11/190 ./tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py 141.26ms X
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:11:38     - Unknown word (rhev)       -- trigger_type in ('trigger-rhev', 'trigger-brew', 'trigger
	 Suggestions: [rhea, rhee, rhel, rheo, rhet]
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:11:70     - Unknown word (multiarch)  -- trigger-brew', 'trigger-multiarch'):
	 Suggestions: [plutarch, Plutarch, multiparty, multipara, multipart]
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:16:48     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')
	 Suggestions: [virtu, vert, airt, dirt, girt]
 12/190 ./tmp/lint/tier1/tc_1003_check_virtwho_package_info.py 99.78ms X
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:11:52     - Unknown word (virt)       -- info(self.ssh_host(), 'virt-who')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:49:28     - Unknown word (runcmd)     -- ret, output = self.runcmd('virt-who --version
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 13/190 ./tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py 324.76ms X
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:12:21     - Unknown word (rhev)       -- if "trigger-rhev" in trigger_type:
	 Suggestions: [rhea, rhee, rhel, rheo, rhet]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:16:32     - Unknown word (virt)       -- logger.info(">>>step1: virt-who have correct man
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:20:28     - Unknown word (runcmd)     -- ret, output = self.runcmd("man virt-who", self
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:24:28     - Unknown word (runcmd)     -- ret, output = self.runcmd("man virt-who-config
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:27:49     - Unknown word (rhevm)      -- names: libvirt, esx, rhevm, hyperv, fake, xen,
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:27:56     - Unknown word (hyperv)     -- libvirt, esx, rhevm, hyperv, fake, xen, or kube
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:29:54     - Unknown word (hyperv)     -- ahv, libvirt, esx, hyperv, fake, or kubevirt.
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:29:71     - Unknown word (kubevirt)   -- esx, hyperv, fake, or kubevirt."
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:31:58     - Unknown word (rhevm)      -- ahv, libvirt, esx, rhevm, hyperv, fake, or kube
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:31:65     - Unknown word (hyperv)     -- libvirt, esx, rhevm, hyperv, fake, or kube.*\n.
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:33:54     - Unknown word (rhevm)      -- ahv, libvirt, esx, rhevm, hyperv, fake, xen,
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:33:61     - Unknown word (hyperv)     -- libvirt, esx, rhevm, hyperv, fake, xen, or.*\n.
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:33:88     - Unknown word (kubevirt)   -- fake, xen, or.*\n.*kubevirt"
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:37:28     - Unknown word (runcmd)     -- ret, output = self.runcmd("virt-who --help", self
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 14/190 ./tmp/lint/tier1/tc_1005_check_virtwho_service_function.py 585.37ms X
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:25:31     - Unknown word (condrestart) -- steps['step6'] = "condrestart"
	 Suggestions: [contestant, codestar, do_restart]
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:41:72     - Unknown word (WONTFIX)     -- due to Bug 1638182 WONTFIX')
	 Suggestions: [POSTFIX, HOTFIX, PONTIFF, PONTIFEX, WONTING]
 15/190 ./tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py 175.39ms X
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:12:38     - Unknown word (rhev)       -- trigger_type in ('trigger-rhev', 'trigger-brew', 'trigger
	 Suggestions: [rhea, rhee, rhel, rheo, rhet]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:12:70     - Unknown word (multiarch)  -- trigger-brew', 'trigger-multiarch'):
	 Suggestions: [plutarch, Plutarch, multiparty, multipara, multipart]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:18:46     - Unknown word (virt)       -- uninstall(self.ssh_host(), 'virt-who')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:26:35     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:28:35     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:29:54     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:31:43     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, 'Error in libvirt
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:34:43     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, 'Error in libvirt
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 16/190 ./tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py 525.19ms X
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:10:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:16:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:17:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:20:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_DEBUG", filename=config
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:21:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_DEBUG", '1', filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:25:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:29:67     - Unknown word (rhsm)       -- guest association in rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:30:23     - Unknown word (rhsm)       -- res = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 17/190 ./tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py 386.87ms X
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:14:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:20:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:25:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:29:67     - Unknown word (rhsm)       -- guest association in rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:30:23     - Unknown word (rhsm)       -- res = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 18/190 ./tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py 373.92ms X
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:15:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:16:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:21:28     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:22:33     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:32:67     - Unknown word (rhsm)       -- guest association in rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:33:23     - Unknown word (rhsm)       -- res = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 19/190 ./tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py 414.24ms X
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:20:28     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:21:33     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:35:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:44:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:45:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 20/190 ./tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py 308.44ms X
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:11:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '1.3
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:17:9      - Unknown word (sysconf)    -- sysconf_file = "/etc/sysconfig
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:23:51     - Unknown word (VIRTWHO)    -- Run virt-who with "VIRTWHO_DEBUG=1"')
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:24:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_DEBUG", filename=sysconf
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:24:57     - Unknown word (sysconf)    -- VIRTWHO_DEBUG", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:25:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_DEBUG", "1", filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:25:68     - Unknown word (sysconf)    -- DEBUG", "1", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:28:42     - Unknown word (rhsm)       -- vw_msg_search(output=rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:32:51     - Unknown word (VIRTWHO)    -- Run virt-who with "VIRTWHO_DEBUG=0"')
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:33:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_DEBUG", "0", filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:33:68     - Unknown word (sysconf)    -- DEBUG", "0", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:36:42     - Unknown word (rhsm)       -- vw_msg_search(output=rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:41:58     - Unknown word (sysconf)    -- VIRTWHO_DEBUG", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:42:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 21/190 ./tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py 490.43ms X
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:18:17     - Unknown word (oneshot)    -- cmd_oneshot = self.vw_cli_base(
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:20:28     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:21:33     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:24:17     - Unknown word (oneshot)    -- cmd_oneshot = "virt-who -o"
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:28:59     - Unknown word (oneshot)    -- = self.vw_start(cmd_oneshot, exp_send=1,
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:29:55     - Unknown word (oneshot)    -- oneshot=True)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:34:72     - Unknown word (oneshot)    -- start(cmd, exp_send=1, oneshot=False)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:41:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:42:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 22/190 ./tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py 382.95ms X
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:11:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '1.3
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:17:9      - Unknown word (sysconf)    -- sysconf_file = "/etc/sysconfig
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:23:51     - Unknown word (VIRTWHO)    -- Run virt-who with "VIRTWHO_ONE_SHOT=1"')
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:24:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_ONE_SHOT", filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:24:60     - Unknown word (sysconf)    -- ONE_SHOT", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:25:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_ONE_SHOT", "1", filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:25:71     - Unknown word (sysconf)    -- SHOT", "1", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:26:67     - Unknown word (oneshot)    -- vw_start(exp_send=1, oneshot=True)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:30:51     - Unknown word (VIRTWHO)    -- Run virt-who with "VIRTWHO_ONE_SHOT=0"')
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:31:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_ONE_SHOT", "0", filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:31:71     - Unknown word (sysconf)    -- SHOT", "0", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:32:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:32:67     - Unknown word (oneshot)    -- vw_start(exp_send=1, oneshot=False)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:37:61     - Unknown word (sysconf)    -- ONE_SHOT", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:38:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:38:67     - Unknown word (oneshot)    -- vw_start(exp_send=1, oneshot=False)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
 23/190 ./tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py 549.55ms X
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:22:28     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:23:33     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:32:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:40:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:48:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:48:81     - Unknown word (loopnum)    -- 60, exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:50:57     - Unknown word (loopnum)    -- exp_interval=60, exp_loopnum=1, exp_looptime=60)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:50:72     - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=60)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:54:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:55:59     - Unknown word (loopnum)    -- exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:57:58     - Unknown word (loopnum)    -- exp_interval=120, exp_loopnum=1, exp_looptime=120
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:57:73     - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=120)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:63:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:64:44     - Unknown word (kubeconfig) -- append("(step1,2,3,4) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 24/190 ./tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py 425.67ms X
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:11:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '1.3
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:17:26     - Unknown word (VIRTWHO)    -- option_tested = "VIRTWHO_INTERVAL"
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:18:9      - Unknown word (sysconf)    -- sysconf_file = "/etc/sysconfig
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:19:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_DEBUG", filename=sysconf
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:19:57     - Unknown word (sysconf)    -- VIRTWHO_DEBUG", filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:20:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_DEBUG", '1', filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:20:68     - Unknown word (sysconf)    -- DEBUG", '1', filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:26:40     - Unknown word (VIRTWHO)    -- info(">>>step1: disable VIRTWHO_INTERVAL option")
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:27:56     - Unknown word (sysconf)    -- option_tested, filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:33:39     - Unknown word (VIRTWHO)    -- info(">>>step2: enable VIRTWHO_INTERVAL and set to
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:34:55     - Unknown word (sysconf)    -- option_tested, filename=sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:43:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:43:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:46:34     - Unknown word (loopnum)    -- exp_interval=60, exp_loopnum=1, exp_looptime=60)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:46:49     - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=60)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:51:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:51:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:54:35     - Unknown word (loopnum)    -- exp_interval=120, exp_loopnum=1, exp_looptime=120
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:54:50     - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=120)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
 25/190 ./tmp/lint/tier1/tc_1016_check_print_function_by_cli.py 756.35ms X
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:16:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:17:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:24:28     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:25:33     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:37:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:41:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("cat {0}".format(json
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:45:58     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:52:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:53:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 26/190 ./tmp/lint/tier1/tc_1017_check_config_function_by_cli.py 95.24ms X
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:22:36     - Unknown word (virt)       -- info(">>>step1: run virt-who with -c option"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:24:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 27/190 ./tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py 698.25ms X
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:18:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:25:38     - Unknown word (virt)       -- logger.info(">>>{0}: run virt-who cli to check log
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:26:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:29:32     - Unknown word (runcmd)     -- ret, output = self.runcmd('ls /var/log/rhsm/virtwho
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:29:52     - Unknown word (rhsm)       -- runcmd('ls /var/log/rhsm/virtwho*', self.ssh
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:29:57     - Unknown word (virtwho)    -- runcmd('ls /var/log/rhsm/virtwho*', self.ssh_host())
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:31:55     - Unknown word (rhsm)       -- Failed to find /var/log/rhsm/virtwho* files")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:31:60     - Unknown word (virtwho)    -- to find /var/log/rhsm/virtwho* files")
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:36:48     - Unknown word (virtwho)    -- info("Succeeded to find virtwho.destination file")
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:38:46     - Unknown word (virtwho)    -- error("Failed to find virtwho.destination file")
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:41:48     - Unknown word (virtwho)    -- info("Succeeded to find virtwho.main file")
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:45:21     - Unknown word (rhsm)       -- if any("rhsm_log" in fd for fd in
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:46:56     - Unknown word (rhsm)       -- Succeeded to find virtwho.rhsm_log file")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:53:36     - Unknown word (runcmd)     -- ret, output = self.runcmd("cat {0}".format(fd
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:75:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:76:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 28/190 ./tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py 679.08ms X
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:18:29     - Unknown word (rhsm)       -- log_dir = "/var/log/rhsm/virtwho/"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:18:34     - Unknown word (virtwho)    -- dir = "/var/log/rhsm/virtwho/"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:19:30     - Unknown word (rhsm)       -- log_file = "/var/log/rhsm/virtwho/rhsm.log"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:19:35     - Unknown word (virtwho)    -- file = "/var/log/rhsm/virtwho/rhsm.log"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:19:43     - Unknown word (rhsm)       -- var/log/rhsm/virtwho/rhsm.log"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:20:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:27:38     - Unknown word (virt)       -- logger.info(">>>{0}: run virt-who cli to check log
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:28:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:31:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("ls {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:33:36     - Unknown word (runcmd)     -- ret, output = self.runcmd("cat {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:45:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:46:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 29/190 ./tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py 658.06ms X
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:17:29     - Unknown word (rhsm)       -- log_dir = "/var/log/rhsm/virtwho"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:17:34     - Unknown word (virtwho)    -- dir = "/var/log/rhsm/virtwho"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:18:30     - Unknown word (rhsm)       -- log_file = "/var/log/rhsm/virtwho/virtwho.log
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:18:35     - Unknown word (virtwho)    -- file = "/var/log/rhsm/virtwho/virtwho.log"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:18:43     - Unknown word (virtwho)    -- var/log/rhsm/virtwho/virtwho.log"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:19:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:26:38     - Unknown word (virt)       -- logger.info(">>>{0}: run virt-who cli to check log
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:27:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:30:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("ls {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:32:36     - Unknown word (runcmd)     -- ret, output = self.runcmd("cat {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:44:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:45:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 30/190 ./tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py 413.19ms X
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:18:24     - Unknown word (virtwho)    -- reporter_id = "virtwho_reporter_id_tc1021"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:25:38     - Unknown word (virt)       -- logger.info(">>>{0}: run virt-who cli to check reporter
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:26:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:41:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:42:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 31/190 ./tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py 148.81ms X
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:22:43     - Unknown word (runcmd)     -- threading.Thread(target=self.runcmd, args=(cmd, self.ssh
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:35:32     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 32/190 ./tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py 151.36ms X
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:29:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 33/190 ./tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py 90.50ms X
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:16:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] < '1.31
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:21:32     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:34:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 34/190 ./tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py 150.64ms X
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:28:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:38:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 35/190 ./tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py 186.38ms X
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:31:36     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:33:36     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:36:33     - Unknown word (libexec)    -- '#!/usr/libexec/platform-python\n'
	 Suggestions: [liberec, Liberec, libeled, libelee, libeler]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:40:36     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:41:29     - Unknown word (libexec)    -- cmd = "/usr/libexec/platform-python {0}
	 Suggestions: [liberec, Liberec, libeled, libelee, libeler]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:42:36     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:50:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 36/190 ./tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py 513.54ms X
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:17:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:19:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:24:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:37:60     - Unknown word (guestids)   -- } {2}/consumers/{3}/guestids/{4}".format(
	 Suggestions: [guesting, guested, guest's, guests, eustis]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:39:32     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:50:32     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 37/190 ./tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py 270.29ms X
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:14:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:30:40     - Unknown word (rhsmcertd)  -- info(">>>step2: restart rhsmcertd service , check virt
	 Suggestions: []
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:31:58     - Unknown word (rhsmcertd)  -- service(self.ssh_host(), "rhsmcertd", "restart")
	 Suggestions: []
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:38:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 38/190 ./tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py 94.76ms X
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 39/190 ./tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py 294.93ms X
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:24:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:37:15     - Unknown word (rhsm)       -- num = rhsm_output.count('"guestId
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 40/190 ./tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py 103.17ms X
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:31:33     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "test.conf.swp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:34:56     - Unknown word (rhsm)       -- check how many modes in rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:35:70     - Unknown word (rhsm)       -- *\("(.*?)" mode\)', rhsm_output)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:37:63     - Unknown word (rhsm)       -- check, only one mode in rhsm.log: {0}".format(modes
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 41/190 ./tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py 353.51ms X
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:24:38     - Unknown word (virt)       -- logger.info(">>>{0}: run virt-who cli to check sam
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:26:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:35:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:36:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
 42/190 ./tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py 208.83ms X
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:10:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:18:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_DEBUG", filename=config
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:19:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_DEBUG", '1', filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:20:27     - Unknown word (VIRTWHO)    -- steps = {'step1':'VIRTWHO_SAM', 'step2':'VIRTWHO
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:20:50     - Unknown word (VIRTWHO)    -- VIRTWHO_SAM', 'step2':'VIRTWHO_SATELLITE6'}
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:27:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 43/190 ./tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py 106.97ms X
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:10:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '1.3
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:20:36     - Unknown word (virtwho)    -- vw_etc_d_mode_create('virtwho-config', '/etc/virt
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:20:70     - Unknown word (virtwho)    -- config', '/etc/virt-who.d/virtwho-config.conf')
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:38:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:40:37     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "Connection
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:41:37     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "Using proxy
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:48:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:50:38     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, error_msg, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 44/190 ./tmp/lint/tier1/tc_1040_check_virt_who_password_function.py 19.36ms X
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
 45/190 ./tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py 263.17ms X
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:1:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:12:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:27:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:35:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 46/190 ./tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py 112.15ms X
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:31:53     - Unknown word (rhsm)       -- run virt-who without rhsm_username and rhsm_password
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:31:71     - Unknown word (rhsm)       -- without rhsm_username and rhsm_password")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:32:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:36:50     - Unknown word (rhsm)       -- : run virt-who with rhsm_username and rhsm_password
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:36:68     - Unknown word (rhsm)       -- with rhsm_username and rhsm_password good value
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 47/190 ./tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py 112.71ms X
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:31:50     - Unknown word (rhsm)       -- : run virt-who with rhsm_username and rhsm_password
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:31:68     - Unknown word (rhsm)       -- with rhsm_username and rhsm_password good value
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:32:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:33:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", "443", config
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:34:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_prefix", register_prefix
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 48/190 ./tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py 112.99ms X
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:31:50     - Unknown word (rhsm)       -- : run virt-who with rhsm_hostname, rhsm_port
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:31:65     - Unknown word (rhsm)       -- with rhsm_hostname, rhsm_port, rhsm_prefix good
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:31:76     - Unknown word (rhsm)       -- hostname, rhsm_port, rhsm_prefix good value")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:32:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:33:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", "443", config
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 49/190 ./tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py 190.84ms X
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:16:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:28:32     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:37:45     - Unknown word (rhsm)       -- ">>>step1: set /etc/rhsm/rhsm.conf with good
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:37:50     - Unknown word (rhsm)       -- step1: set /etc/rhsm/rhsm.conf with good proxy
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:38:79     - Unknown word (rhsm)       -- proxy_server, '/etc/rhsm/rhsm.conf')
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:38:84     - Unknown word (rhsm)       -- proxy_server, '/etc/rhsm/rhsm.conf')
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:39:73     - Unknown word (rhsm)       -- , proxy_port, '/etc/rhsm/rhsm.conf')
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:85:58     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
 50/190 ./tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py 215.99ms X
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:37:33     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, host_str, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:42:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:45:33     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, host_str, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 51/190 ./tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py 214.20ms X
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:37:33     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, host_str, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:42:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:45:33     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, host_str, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 52/190 ./tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py 249.40ms X
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:24:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:24:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:34:94     - Unknown word (hwuuid)     -- (.*?)'".format(host_hwuuid), rhsm_output)[-1]
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:34:103    - Unknown word (rhsm)       -- format(host_hwuuid), rhsm_output)[-1]
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:35:66     - Unknown word (hwuuid)     -- 1}:{2}".format(host_hwuuid, domain_id, host_uuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:39:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:47:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 53/190 ./tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py 266.77ms X
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:24:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:24:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:27:50     - Unknown word (exlude)     -- : run virt-who with exlude_host_parents=* to get
	 Suggestions: [exclude, exude, elude, excluded, exuded]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:34:94     - Unknown word (hwuuid)     -- (.*?)'".format(host_hwuuid), rhsm_output)[-1]
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:34:103    - Unknown word (rhsm)       -- format(host_hwuuid), rhsm_output)[-1]
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:35:66     - Unknown word (hwuuid)     -- 1}:{2}".format(host_hwuuid, domain_id, host_uuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:40:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:48:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 54/190 ./tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py 211.53ms X
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:27:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:45:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:56:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 55/190 ./tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py 241.05ms X
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:24:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:24:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:40:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 56/190 ./tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py 277.71ms X
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:24:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:24:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:29:41     - Unknown word (rhevm)      -- hypervisor_type or "rhevm" in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:30:67     - Unknown word (hwuuid)     -- hostname', 'step3':'hwuuid'}
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:38:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:41:27     - Unknown word (hwuuid)     -- if option == "hwuuid":
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:42:37     - Unknown word (hwuuid)     -- hypervisorId = host_hwuuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
 57/190 ./tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py 270.08ms X
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:24:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:24:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:29:41     - Unknown word (rhevm)      -- hypervisor_type or "rhevm" in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:30:67     - Unknown word (hwuuid)     -- hostname', 'step3':'hwuuid'}
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:38:27     - Unknown word (hwuuid)     -- if option == "hwuuid":
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:39:37     - Unknown word (hwuuid)     -- hypervisorId = host_hwuuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:45:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 58/190 ./tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py 276.32ms X
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:24:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:24:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:29:41     - Unknown word (rhevm)      -- hypervisor_type or "rhevm" in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:30:67     - Unknown word (hwuuid)     -- hostname', 'step3':'hwuuid'}
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:38:27     - Unknown word (hwuuid)     -- if option == "hwuuid":
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:39:37     - Unknown word (hwuuid)     -- hypervisorId = host_hwuuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:45:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 59/190 ./tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py 92.03ms X
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:15:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:21:52     - Unknown word (virtwho)    -- [global]", filename=virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:22:49     - Unknown word (virtwho)    -- enable("debug", filename=virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:23:63     - Unknown word (virtwho)    -- debug", 'True', filename=virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:24:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:26:42     - Unknown word (rhsm)       -- vw_msg_search(output=rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 60/190 ./tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py 216.56ms X
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:32:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:32:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:33:102    - Unknown word (loopnum)    -- exp_interval=60, exp_loopnum=1, exp_looptime=60)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:33:117    - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=60)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:38:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:38:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:39:103    - Unknown word (loopnum)    -- exp_interval=120, exp_loopnum=1, exp_looptime=120
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:39:118    - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=120)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
 61/190 ./tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py 94.63ms X
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:31:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 62/190 ./tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py 100.51ms X
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:16:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:22:40     - Unknown word (virtwho)    -- option_enable("debug", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:23:54     - Unknown word (virtwho)    -- value("debug", 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:24:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:26:42     - Unknown word (rhsm)       -- vw_msg_search(output=rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:32:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:34:42     - Unknown word (rhsm)       -- vw_msg_search(output=rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:40:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 63/190 ./tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py 246.06ms X
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:23:51     - Unknown word (onestho)    -- Run virt-who with "onestho=True"')
	 Suggestions: [onset's, onsets, onset, oneself, olestra]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:24:32     - Unknown word (oneshot)    -- self.vw_option_enable("oneshot", virtwho_conf)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:25:38     - Unknown word (oneshot)    -- option_update_value("oneshot", 'True', virtwho_conf
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:26:67     - Unknown word (oneshot)    -- vw_start(exp_send=1, oneshot=True)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:30:51     - Unknown word (oneshot)    -- Run virt-who with "oneshot=False"')
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:31:38     - Unknown word (oneshot)    -- option_update_value("oneshot", 'False', virtwho_conf
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:32:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:38:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 64/190 ./tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py 360.39ms X
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:27:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:30:28     - Unknown word (runcmd)     -- ret, output = self.runcmd('ls /var/log/rhsm/virtwho
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:30:48     - Unknown word (rhsm)       -- runcmd('ls /var/log/rhsm/virtwho*', self.ssh
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:32:65     - Unknown word (rhsm)       -- unexpected /var/log/rhsm/virtwho* files exist
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:35:67     - Unknown word (rhsm)       -- unexpected /var/log/rhsm/virtwho* files not exist
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:40:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:43:28     - Unknown word (runcmd)     -- ret, output = self.runcmd('ls /var/log/rhsm/virtwho
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:65:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("cat {0}".format(fd
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 65/190 ./tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py 357.27ms X
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:22:29     - Unknown word (rhsm)       -- log_dir = "/var/log/rhsm/virtwho/"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:23:30     - Unknown word (rhsm)       -- log_file = "/var/log/rhsm/virtwho/rhsm.log"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:23:43     - Unknown word (rhsm)       -- var/log/rhsm/virtwho/rhsm.log"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:32:28     - Unknown word (runcmd)     -- ret, output = self.runcmd("ls {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:35:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("cat {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 66/190 ./tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py 361.91ms X
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:22:29     - Unknown word (rhsm)       -- log_dir = "/var/log/rhsm/virtwho/"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:23:30     - Unknown word (rhsm)       -- log_file = "/var/log/rhsm/virtwho/rhsm.log"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:23:43     - Unknown word (rhsm)       -- var/log/rhsm/virtwho/rhsm.log"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:34:28     - Unknown word (runcmd)     -- ret, output = self.runcmd("ls {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:37:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("cat {0}".format(log
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 67/190 ./tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py 268.35ms X
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:17:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:17:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:18:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:19:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:20:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:24:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:32:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 68/190 ./tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py 268.43ms X
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:28:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 69/190 ./tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py 273.67ms X
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:32:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 70/190 ./tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py 279.53ms X
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:10:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:16:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:17:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:18:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:19:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:23:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:33:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:35:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:43:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:45:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 71/190 ./tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py 276.03ms X
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:17:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:17:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:18:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:19:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:20:45     - Unknown word (virtwho)    -- enable("[defaults]", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:21:48     - Unknown word (virtwho)    -- enable("hypervisor_id", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:26:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:27:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:27:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:32:41     - Unknown word (rhevm)      -- hypervisor_type or "rhevm" in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:33:67     - Unknown word (hwuuid)     -- hostname', 'step3':'hwuuid'}
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:41:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:44:27     - Unknown word (hwuuid)     -- if option == "hwuuid":
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:45:37     - Unknown word (hwuuid)     -- hypervisorId = host_hwuuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
 72/190 ./tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py 412.67ms X
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:18:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:19:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:28:51     - Unknown word (vdsm)       -- hypervisor_type or "vdsm" in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:36:24     - Unknown word (rhsm)       -- res2 = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 73/190 ./tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py 411.36ms X
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:19:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:30:51     - Unknown word (vdsm)       -- hypervisor_type or "vdsm" in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:38:24     - Unknown word (rhsm)       -- res2 = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 74/190 ./tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py 402.26ms X
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:19:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:30:51     - Unknown word (vdsm)       -- hypervisor_type or "vdsm" in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:38:24     - Unknown word (rhsm)       -- res2 = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 75/190 ./tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py 362.91ms X
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:25:45     - Unknown word (servie)     -- step1: Run virt-who servie when virt-who host is
	 Suggestions: [servia, service, servile, Servia, serve]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:37:45     - Unknown word (servie)     -- step2: Run virt-who servie when virt-who host is
	 Suggestions: [servia, service, servile, Servia, serve]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:38:28     - Unknown word (runcmd)     -- ret, output = self.runcmd('subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:48:14     - Unknown word (rhsm)       -- ret, rhsm_output = self.runcmd
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:48:33     - Unknown word (runcmd)     -- rhsm_output = self.runcmd('cat /var/log/rhsm/rhsm
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:48:54     - Unknown word (rhsm)       -- runcmd('cat /var/log/rhsm/rhsm.log', self.ssh
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:48:59     - Unknown word (rhsm)       -- runcmd('cat /var/log/rhsm/rhsm.log', self.ssh_host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:49:34     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, 'system is not
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:52:45     - Unknown word (servie)     -- step3: Run virt-who servie when virt-who host is
	 Suggestions: [servia, service, servile, Servia, serve]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:53:24     - Unknown word (isregister) -- if self.system_isregister(self.ssh_host(), register
	 Suggestions: [misregister, deregister, unregister, register, registers]
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:55:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 76/190 ./tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py 302.87ms X
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:18:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:18:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:19:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:20:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:21:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:25:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:30:66     - Unknown word (rhsm)       -- service to check the rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 77/190 ./tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py 226.33ms X
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:15:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:23:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:23:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:24:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:25:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:26:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:27:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:30:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:33:45     - Unknown word (servie)     -- step1: Run virt-who servie to check hypervisor
	 Suggestions: [servia, service, servile, Servia, serve]
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 78/190 ./tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py 92.93ms X
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:23:55     - Unknown word (rhsm)       -- Run virt-who to check 'rhsm.connection' info")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:24:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:26:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, '[rhsm.connection
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:26:50     - Unknown word (rhsm)       -- search(rhsm_output, '[rhsm.connection INFO]', exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 79/190 ./tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py 572.15ms X
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:21:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:25:18     - Unknown word (rhevm)      -- 'rhevm' :'kvm'
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:27:18     - Unknown word (hyperv)     -- 'hyperv' :'hyperv
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:27:39     - Unknown word (hyperv)     -- hyperv' :'hyperv',
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:29:18     - Unknown word (kubevirt)   -- 'kubevirt' :'kvm',
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:30:39     - Unknown word (nutanix)    -- ahv' :'nutanix_ahv'
	 Suggestions: [nutting, nutation, lutanist, mutandis, natant]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:36:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:43:27     - Unknown word (runcmd)     -- _, output1 = self.runcmd("virt-what",
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:45:27     - Unknown word (runcmd)     -- _, output2 = self.runcmd("subscription-manager
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:56:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 80/190 ./tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py 391.26ms X
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:24:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:32:67     - Unknown word (rhsm)       -- guest association in rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:33:23     - Unknown word (rhsm)       -- res = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:36:67     - Unknown word (webui)      -- guest association in webui")
	 Suggestions: [webkit, web's, webby, weber, webb]
 81/190 ./tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py 191.74ms X
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:27:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
 82/190 ./tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py 262.82ms X
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:25:42     - Unknown word (unlimit)    -- sku = register_config['unlimit']
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 83/190 ./tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py 349.79ms X
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:26:42     - Unknown word (unlimit)    -- sku = register_config['unlimit']
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:49:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:58:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:63:50     - Unknown word (unlimit)    -- : available virtual unlimit sku can be listed in
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
 84/190 ./tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py 258.96ms X
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:26:42     - Unknown word (unlimit)    -- sku = register_config['unlimit']
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 85/190 ./tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py 348.91ms X
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:25:42     - Unknown word (unlimit)    -- sku = register_config['unlimit']
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:46:32     - Unknown word (unattach)   -- logger.info(">>>step4: unattach physical sku from host
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:47:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
 86/190 ./tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py 279.68ms X
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:25:42     - Unknown word (unlimit)    -- sku = register_config['unlimit']
	 Suggestions: [ulimit, unlimited, unlit, delimit, limit]
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 87/190 ./tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py 205.96ms X
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 88/190 ./tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py 263.42ms X
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:55:95     - Unknown word (baseos)     -- repo 'rhel-8-for-x86_64-baseos-rpms'")
	 Suggestions: [base's, bases, bassos, paseos, basso]
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:55:102    - Unknown word (rpms)       -- 8-for-x86_64-baseos-rpms'")
	 Suggestions: [rams, rems, rims, roms, rums]
 89/190 ./tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py 287.15ms X
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 90/190 ./tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py 299.16ms X
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:46:32     - Unknown word (unattach)   -- logger.info(">>>step4: unattach physical sku from host
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:47:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
 91/190 ./tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py 217.72ms X
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
 92/190 ./tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py 252.60ms X
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:11:54     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:17:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:17:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:18:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:19:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:20:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:39:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:52:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
 93/190 ./tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py 296.01ms X
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:33:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:43:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:56:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
 94/190 ./tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py 303.00ms X
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:22:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:49:51     - Unknown word (vdsm)       -- hypervisor_type or "vdsm" in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:51:32     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:59:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:68:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 95/190 ./tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py 290.69ms X
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:35:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
 96/190 ./tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py 372.85ms X
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:36:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:45:46     - Unknown word (vitual)     -- Succeeded to check, vitual sku({0}) Available(
	 Suggestions: [vital, visual, victual, virtual, ritual]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:48:44     - Unknown word (vitual)     -- error("Failed to check, vitual sku({0}) Available(
	 Suggestions: [vital, visual, victual, virtual, ritual]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:62:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:71:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
 97/190 ./tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py 293.55ms X
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:36:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:45:46     - Unknown word (vitual)     -- Succeeded to check, vitual sku({0}) Available(
	 Suggestions: [vital, visual, victual, virtual, ritual]
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:48:44     - Unknown word (vitual)     -- error("Failed to check, vitual sku({0}) Available(
	 Suggestions: [vital, visual, victual, virtual, ritual]
 98/190 ./tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py 276.68ms X
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:35:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:50:32     - Unknown word (unattach)   -- logger.info(">>>step4: unattach physical sku from host
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:51:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
 99/190 ./tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py 285.10ms X
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:35:21     - Unknown word (unattach)   -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
100/190 ./tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py 209.35ms X
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
101/190 ./tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py 261.04ms X
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:12:54     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:18:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:18:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:19:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:20:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:21:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:39:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:52:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:56:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:63:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
102/190 ./tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py 264.44ms X
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:13:54     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:19:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:19:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:20:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:21:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:22:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:23:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:39:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:44:29     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:55:29     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:58:32     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:64:29     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
103/190 ./tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py 269.40ms X
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:14:54     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:16:21     - Unknown word (rhev)       -- if "trigger-rhev" in trigger_type:
	 Suggestions: [rhea, rhee, rhel, rheo, rhet]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:22:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:22:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:23:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:24:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:25:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:26:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:41:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:46:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:57:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:60:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:69:29     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
104/190 ./tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py 165.30ms X
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:31:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:44:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:57:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
105/190 ./tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py 164.94ms X
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:16:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:17:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:18:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:19:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:31:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:44:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:57:25     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_guest())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
106/190 ./tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py 273.68ms X
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:17:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:17:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:18:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:19:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:20:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:21:38     - Unknown word (libvirtd)   -- conf = "/etc/libvirt/libvirtd.conf"
	 Suggestions: [libvirt, liberty, Liberty, livered, livid]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:29:67     - Unknown word (libvirtd)   -- config, and restart libvirtd service")
	 Suggestions: [libvirt, liberty, Liberty, livered, livid]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:34:58     - Unknown word (libvirtd)   -- service(self.ssh_host(), "libvirtd", "restart")
	 Suggestions: [libvirt, liberty, Liberty, livered, livid]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:35:58     - Unknown word (libvirtd)   -- service(self.ssh_host(), "libvirtd", "status")
	 Suggestions: [libvirt, liberty, Liberty, livered, livid]
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:57:58     - Unknown word (libvirtd)   -- service(self.ssh_host(), "libvirtd", "restart")
	 Suggestions: [libvirt, liberty, Liberty, livered, livid]
107/190 ./tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py 235.42ms X
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:20:26     - Unknown word (virt)       -- conf_etc = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:36:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:37:103    - Unknown word (looptime)   -- exp_interval=60, exp_looptime=60)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:38:42     - Unknown word (rhsm)       -- vw_msg_search(output=rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:46:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:46:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:47:103    - Unknown word (looptime)   -- exp_interval=60, exp_looptime=60)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:48:42     - Unknown word (rhsm)       -- vw_msg_search(output=rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
108/190 ./tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py 118.01ms X
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] < '0.24
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:19:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:20:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:21:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:22:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:23:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:41:33     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_proxy_hostname", proxy
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:42:33     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_proxy_port", proxy_port
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:43:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:46:37     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "Connection
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:48:37     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "Using proxy
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:88:58     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
109/190 ./tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py 309.86ms X
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:10:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] < '0.24
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:16:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:20:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:24:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:29:43     - Unknown word (virtwho)    -- option_enable("[global]", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:30:41     - Unknown word (virtwho)    -- option_enable("print_", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:31:56     - Unknown word (virtwho)    -- value("print_", 'false', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:36:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:42:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:44:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
110/190 ./tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py 113.40ms X
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:14:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:41:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
111/190 ./tmp/lint/tier1/tc_1108_check_hypervisor_facts.py 496.84ms X
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:12:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] < '0.24
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:15:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:24:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:30:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:32:40     - Unknown word (rhevm)      -- hypervisor_type in ('esx', 'rhevm', 'ahv'):
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:35:14     - Unknown word (kubevirt)   -- 'kubevirt': 'qemu',
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:37:14     - Unknown word (hyperv)     -- 'hyperv': 'hyperv',
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:37:24     - Unknown word (hyperv)     -- 'hyperv': 'hyperv',
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:40:14     - Unknown word (rhevm)      -- 'rhevm': 'qemu',
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:48:14     - Unknown word (rhevm)      -- 'rhevm': deploy.rhevm.cluster
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:48:29     - Unknown word (rhevm)      -- 'rhevm': deploy.rhevm.cluster,
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:54:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:84:32     - Unknown word (rhevm)      -- hypervisor_type == "rhevm":
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:85:18     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:85:47     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:86:24     - Unknown word (hwuuid)     -- dmi = host_hwuuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
112/190 ./tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py 428.66ms X
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:25:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:26:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:34:67     - Unknown word (rhsm)       -- guest association in rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:35:23     - Unknown word (rhsm)       -- res = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
113/190 ./tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py 194.21ms X
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:11:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] < '0.30
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:23:24     - Unknown word (SUBMAN)     -- cmd = ('export SUBMAN_DEBUG_PRINT_REQUEST
	 Suggestions: [TUBMAN, Tubman, SUMBA, Sumba, SUBMENU]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:24:24     - Unknown word (SUBMAN)     -- 'export SUBMAN_DEBUG_PRINT_REQUEST
	 Suggestions: [TUBMAN, Tubman, SUMBA, Sumba, SUBMENU]
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
114/190 ./tmp/lint/tier1/tc_1111_template_conf_validation.py 520.07ms X
/tmp/lint/tier1/tc_1111_template_conf_validation.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:28:19     - Unknown word (rhsm)       -- '#rhsm_hostname=',
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:29:19     - Unknown word (rhsm)       -- '#rhsm_port=',
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:30:19     - Unknown word (rhsm)       -- '#rhsm_username=',
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:31:19     - Unknown word (rhsm)       -- '#rhsm_password=',
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:32:19     - Unknown word (rhsm)       -- '#rhsm_encrypted_password=
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:34:19     - Unknown word (kubeconfig) -- '#kubeconfig=',
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:35:19     - Unknown word (kubeversion) -- '#kubeversion=',]
	 Suggestions: [subversion, subversions, submersion, ambiversion, anteversion]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:36:46     - Unknown word (virt)        -- uninstall(self.ssh_host(), 'virt-who')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1111_template_conf_validation.py:38:26     - Unknown word (runcmd)      -- _, output = self.runcmd('cat /etc/virt-who.d
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
115/190 ./tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py 111.85ms X
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:14:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:18:36     - Unknown word (virtwho)    -- vw_etc_d_mode_create('virtwho-config', '/etc/virt
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:18:70     - Unknown word (virtwho)    -- config', '/etc/virt-who.d/virtwho-config.conf')
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:27:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:42:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:44:37     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "Connection
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:45:37     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "Using proxy
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:52:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
116/190 ./tmp/lint/tier1/tc_1113_check_virtwho_status.py 502.11ms X
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:25:24     - Unknown word (virtwho)    -- config_name = 'virtwho-config'
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:26:30     - Unknown word (virt)       -- config_file = f'/etc/virt-who.d/{config_name}
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:57:15     - Unknown word (rhevm)      -- elif 'rhevm' in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:58:52     - Unknown word (ovirt)      -- hypervisor_server.split('ovirt-engine')[0].strip()
	 Suggestions: [overt, ovine, ovid, ovary, overs]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:59:15     - Unknown word (kubevirt)   -- elif 'kubevirt' in hypervisor_type
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:60:34     - Unknown word (kubevirt)   -- source_conn = deploy.kubevirt.endpoint
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:77:13     - Unknown word (kubevirt)   -- if 'kubevirt' in hypervisor_type
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier1/tc_1113_check_virtwho_status.py:78:23     - Unknown word (kubeconfig) -- option = 'kubeconfig'
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
117/190 ./tmp/lint/tier2/__init__.py 2.36ms
118/190 ./tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py 455.61ms X
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:26:24     - Unknown word (virt)       -- "virt-who can't be started
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:40:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:42:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list_2,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:46:81     - Unknown word (ascci)      -- cannot be set to no-ascci")
	 Suggestions: [ascii, asci, ASCII, asdic, aspic]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:50:29     - Unknown word (rhsm)       -- # data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:56:38     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:82:32     - Unknown word (kubevirt)   -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:83:40     - Unknown word (kubeconfig) -- append("(step1,2) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
119/190 ./tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py 60.86ms X
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:17:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:29:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:41:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:49:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:54:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
120/190 ./tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py 243.10ms X
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:13:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:39:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:41:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:49:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:57:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list_3,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:72:43     - Unknown word (virt)       -- ["server.* not set|virt-who can't be started
	 Suggestions: [virtu, vert, airt, dirt, girt]
121/190 ./tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py 271.05ms X
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:13:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:42:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:44:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:53:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:56:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:70:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, "
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:75:45     - Unknown word (virt)       -- "USERNAME.* not set|virt-who can't be started
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:87:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, "
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
122/190 ./tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py 270.05ms X
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:13:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:42:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:44:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, "
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:50:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:59:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, "
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:65:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:67:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, msg, exp_exist
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:77:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, "
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:82:45     - Unknown word (virt)       -- "PASSWORD.* not set|virt-who can't be started
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:94:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, "
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
123/190 ./tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py 322.48ms X
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:17:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:18:58     - Unknown word (virt)       -- global]", filename="/etc/virt-who.conf")
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:31:26     - Unknown word (virtwho)    -- config_name_1 = "virtwho-config-1"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:32:26     - Unknown word (virtwho)    -- config_name_2 = "virtwho-config-2"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:38:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:45:15     - Unknown word (rhsm)       -- num = rhsm_output.count('"guestId
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:54:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:65:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:70:15     - Unknown word (rhsm)       -- num = rhsm_output.count('"guestId
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
124/190 ./tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py 589.44ms X
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:29:36     - Unknown word (virt)       -- info(">>>step1: run virt-who by cli with all
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:34:57     - Unknown word (unconsistent) -- virt-who by cli with unconsistent parameters")
	 Suggestions: [inconsistent, consistent, inconsistently, inconsistency]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:38:27     - Unknown word (rhsm)         -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:47:32     - Unknown word (kubevirt)     -- hypervisor_type == 'kubevirt':
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:48:38     - Unknown word (kubeconfig)   -- notes.append("(step1) No kubeconfig option for cli")
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
125/190 ./tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py 517.13ms X
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:25:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:26:26     - Unknown word (VIRTWHO)    -- option_tested = "VIRTWHO_{0}_OWNER".format(hypervisor
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:40:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:46:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:49:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:72:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
126/190 ./tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py 546.87ms X
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:25:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:26:26     - Unknown word (VIRTWHO)    -- option_tested = "VIRTWHO_{0}_ENV".format(hypervisor
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:40:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:46:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:49:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:72:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
127/190 ./tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py 721.89ms X
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:11:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:25:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:26:26     - Unknown word (VIRTWHO)    -- option_tested = "VIRTWHO_{0}_SERVER".format(hypervisor
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:40:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:46:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:49:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:84:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
128/190 ./tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py 807.91ms X
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:11:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:25:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:26:26     - Unknown word (VIRTWHO)    -- option_tested = "VIRTWHO_{0}_USERNAME".format
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:40:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:46:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:49:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:57:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:71:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:82:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:88:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:103:52    - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
129/190 ./tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py 934.39ms X
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:11:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:25:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:26:26     - Unknown word (VIRTWHO)    -- option_tested = "VIRTWHO_{0}_PASSWORD".format
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:39:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, password
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:45:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:51:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:53:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, password
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:59:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:67:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:81:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:92:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:98:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:125:13    - Unknown word (rhevm)      -- if "rhevm" in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:125:43    - Unknown word (hyperv)     -- hypervisor_type or "hyperv" in hypervisor_type
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:126:48    - Unknown word (unsupport)  -- Bug(Step3): password unsupport unicode characters for
	 Suggestions: [unsupported, nonsupport, support, supports]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:126:81    - Unknown word (rhevm)      -- unicode characters for rhevm and hyperv")
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:126:91    - Unknown word (hyperv)     -- characters for rhevm and hyperv")
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
130/190 ./tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py 480.70ms X
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] < '0.25
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:15:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:26:38     - Unknown word (virtwho)    -- file = "/etc/virt-who.d/virtwho-config.conf"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:31:36     - Unknown word (virtwho)    -- vw_etc_d_mode_create('virtwho-config', conf_file)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:50:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:53:17     - Unknown word (rhsm)       -- rhsm_output, "Connection
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:55:17     - Unknown word (rhsm)       -- rhsm_output, "Using proxy
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:70:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:75:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, error_msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:98:12     - Unknown word (WONTFIX)    -- '''WONTFIX bz1739358 - [XEN] virt
	 Suggestions: [POSTFIX, HOTFIX, PONTIFF, PONTIFEX, WONTING]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:101:12    - Unknown word (WONTFIX)    -- '''WONTFIX bz1716337 - virt-who
	 Suggestions: [POSTFIX, HOTFIX, PONTIFF, PONTIFEX, WONTING]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:105:40    - Unknown word (hyperv)     -- ('libvirt-remote', 'hyperv', 'kubevirt')
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:105:50    - Unknown word (kubevirt)   -- remote', 'hyperv', 'kubevirt')
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:106:69    - Unknown word (rhevm)      -- libvirt-remote', 'xen', 'rhevm', 'kubevirt')
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:106:78    - Unknown word (kubevirt)   -- remote', 'xen', 'rhevm', 'kubevirt')
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:107:55    - Unknown word (hyperv)     -- ('libvirt-remote', 'hyperv', 'kubevirt')
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:107:65    - Unknown word (kubevirt)   -- remote', 'hyperv', 'kubevirt')
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
131/190 ./tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py 157.14ms X
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:32:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:38:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:41:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:45:29     - Unknown word (Sapce)      -- logger.warning("Sapce value[ ] is acceptable
	 Suggestions: [space, Space, Sauce, Space8, Spaced]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:52:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:58:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:83:27     - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
132/190 ./tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py 122.53ms X
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:36:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:38:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, ["virt-who can
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:42:44     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:49:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:58:27     - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
133/190 ./tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py 130.94ms X
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:38:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:42:81     - Unknown word (ascci)      -- cannot be set to no-ascci")
	 Suggestions: [ascii, asci, ASCII, asdic, aspic]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:45:29     - Unknown word (rhsm)       -- # data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:51:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:72:27     - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
134/190 ./tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py 119.90ms X
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:14:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:27:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:33:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:39:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:42:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:48:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:51:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:74:27     - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
135/190 ./tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py 310.53ms X
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:12:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:44:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:50:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:56:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, msg, exp_exist
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:106:27    - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:135:33    - Unknown word (rhevm)      -- hypervisor_type in ("rhevm", "xen", "hyperv"):
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:135:49    - Unknown word (hyperv)     -- in ("rhevm", "xen", "hyperv"):
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
136/190 ./tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py 333.68ms X
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:12:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:43:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:45:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, error_msg, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:51:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:58:44     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, error_msg, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:76:41     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:90:41     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:101:27    - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:108:41    - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:124:41    - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
137/190 ./tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py 343.03ms X
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:11:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:42:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:44:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, password
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:49:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:55:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:58:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, "
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:66:43     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, msg, exp_exist
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:77:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:90:52     - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:101:27    - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:107:52    - Unknown word (sshkey)     -- libvirt-remote can use sshkey to connect, username
	 Suggestions: [sslkey, ashley, Ashley, smokey, Smokey]
138/190 ./tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py 280.64ms X
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:13:58     - Unknown word (kubevirt)   -- libvirt-local', 'vdsm', 'kubevirt'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:35:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:43:35     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:47:35     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:49:43     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:51:31     - Unknown word (virtwho)    -- config_name_ok = "virtwho-config-ok"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:55:35     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
139/190 ./tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py 115.60ms X
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:31:50     - Unknown word (rhsm)       -- disable("hostname", "/etc/rhsm/rhsm.conf")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:31:55     - Unknown word (rhsm)       -- hostname", "/etc/rhsm/rhsm.conf")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:35:54     - Unknown word (rhsm)       -- : run virt-who with rhsm_hostname, rhsm_port
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:35:69     - Unknown word (rhsm)       -- with rhsm_hostname, rhsm_port, "
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:36:26     - Unknown word (rhsm)       -- "rhsm_prefix good value")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
140/190 ./tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py 112.93ms X
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:30:46     - Unknown word (rhsm)       -- disable("port", "/etc/rhsm/rhsm.conf")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:30:51     - Unknown word (rhsm)       -- disable("port", "/etc/rhsm/rhsm.conf")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:34:54     - Unknown word (rhsm)       -- : run virt-who with rhsm_hostname, rhsm_port
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:34:69     - Unknown word (rhsm)       -- with rhsm_hostname, rhsm_port, rhsm_prefix good
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:34:80     - Unknown word (rhsm)       -- hostname, rhsm_port, rhsm_prefix good value")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
141/190 ./tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py 112.76ms X
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:30:48     - Unknown word (rhsm)       -- disable("prefix", "/etc/rhsm/rhsm.conf")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:30:53     - Unknown word (rhsm)       -- prefix", "/etc/rhsm/rhsm.conf")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:35:54     - Unknown word (rhsm)       -- : run virt-who with rhsm_hostname, "
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:36:26     - Unknown word (rhsm)       -- "rhsm_port, rhsm_prefix good
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:36:37     - Unknown word (rhsm)       -- "rhsm_port, rhsm_prefix good value")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
142/190 ./tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py 118.69ms X
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:33:50     - Unknown word (rhsm)       -- : run virt-who with rhsm_hostname, rhsm_port
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:33:65     - Unknown word (rhsm)       -- with rhsm_hostname, rhsm_port, "
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:34:22     - Unknown word (rhsm)       -- "rhsm_prefix good value")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:35:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:36:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", "443", config
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
143/190 ./tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py 117.91ms X
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:19:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:33:50     - Unknown word (rhsm)       -- : run virt-who with rhsm_hostname, "
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:34:22     - Unknown word (rhsm)       -- "rhsm_port, rhsm_prefix good
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:34:33     - Unknown word (rhsm)       -- "rhsm_port, rhsm_prefix good value")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:35:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:36:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", "443", config
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
144/190 ./tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py 115.81ms X
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:32:50     - Unknown word (rhsm)       -- : run virt-who with rhsm_encrypted_password good
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:34:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:35:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", "443", config
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:36:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_prefix", register_prefix
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:37:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_username", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
145/190 ./tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py 281.28ms X
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:25:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:26:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:26:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:28:41     - Unknown word (rhevm)      -- hypervisor_type or "rhevm" in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:29:67     - Unknown word (hwuuid)     -- hostname', 'step3':'hwuuid'}
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:37:27     - Unknown word (hwuuid)     -- if option == "hwuuid":
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:38:37     - Unknown word (hwuuid)     -- hypervisorId = host_hwuuid
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:53:35     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
146/190 ./tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py 274.80ms X
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:21:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:24:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:29:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:30:14     - Unknown word (hwuuid)     -- host_hwuuid = self.get_hypervisor
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:30:43     - Unknown word (hwuuid)     -- self.get_hypervisor_hwuuid()
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:39:94     - Unknown word (hwuuid)     -- (.*?)'".format(host_hwuuid), rhsm_output)[-1]
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:39:103    - Unknown word (rhsm)       -- format(host_hwuuid), rhsm_output)[-1]
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:40:66     - Unknown word (hwuuid)     -- 1}:{0}".format(host_hwuuid, domain_id))
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:43:63     - Unknown word (hwuuid)     -- hostname', 'step4':'hwuuid'}
	 Suggestions: [humid, uuid, UUID, houris, houri]
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:63:35     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
147/190 ./tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py 227.39ms X
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:44:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:52:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:61:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
148/190 ./tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py 106.96ms X
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:27:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:29:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, 'Ignoring unknown
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
149/190 ./tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py 181.79ms X
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:27:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:34:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:35:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:37:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, ["Error in
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:38:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, "not have any
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
150/190 ./tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py 193.24ms X
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:32:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:33:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", register_port
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:34:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_prefix", register_prefix
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:35:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_username", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:36:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_password", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:38:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:45:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
151/190 ./tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py 394.08ms X
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:10:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:16:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:17:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:18:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:19:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:34:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_INTERVAL", '/etc/sysconfig
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:35:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_INTERVAL", '60', '/etc
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:36:71     - Unknown word (loopnum)    -- start(exp_send=1, exp_loopnum=1)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:37:102    - Unknown word (loopnum)    -- exp_interval=60, exp_loopnum=1, exp_looptime=60)
	 Suggestions: [toponym, looping, loopers, loopier, loop's]
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:37:117    - Unknown word (looptime)   -- exp_loopnum=1, exp_looptime=60)
	 Suggestions: [cooptive, longtime, noontime, optime, loopring]
152/190 ./tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py 103.08ms X
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:15:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:15:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:18:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:19:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:20:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:33:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:44:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
153/190 ./tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py 97.65ms X
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:16:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:22:40     - Unknown word (virtwho)    -- option_enable("debug", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:23:50     - Unknown word (virtwho)    -- update_value("debug", '', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:24:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:26:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
154/190 ./tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py 181.77ms X
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:14:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:14:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:15:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:16:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:17:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:23:40     - Unknown word (oneshot)    -- info(">>>step: run with oneshot value is null")
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:24:32     - Unknown word (oneshot)    -- self.vw_option_enable("oneshot", virtwho_conf)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:25:38     - Unknown word (oneshot)    -- option_update_value("oneshot", '', virtwho_conf)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:26:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:26:67     - Unknown word (oneshot)    -- vw_start(exp_send=1, oneshot=False)
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
155/190 ./tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py 309.81ms X
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:17:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:17:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:18:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:19:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:20:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:21:26     - Unknown word (virtwho)    -- config_name_1 = "virtwho-config-1"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:27:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:33:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:37:15     - Unknown word (rhsm)       -- num = rhsm_output.count('"guestId
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:44:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:48:15     - Unknown word (rhsm)       -- num = rhsm_output.count('"guestId
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:57:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
156/190 ./tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py 484.68ms X
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:18:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:18:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:19:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:20:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:21:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:22:45     - Unknown word (virtwho)    -- enable("[defaults]", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:26:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:38:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:45:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:49:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:53:81     - Unknown word (ascci)      -- cannot be set to no-ascci")
	 Suggestions: [ascii, asci, ASCII, asdic, aspic]
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:57:29     - Unknown word (rhsm)       -- # data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
157/190 ./tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py 544.20ms X
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:13:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:19:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:20:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:21:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:22:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:23:45     - Unknown word (virtwho)    -- enable("[defaults]", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:27:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:38:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, guest_uuid,
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:44:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:47:36     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, msg_list, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:53:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
158/190 ./tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py 439.24ms X
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:11:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:17:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:17:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:18:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:19:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:20:45     - Unknown word (virtwho)    -- enable("[defaults]", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:21:48     - Unknown word (virtwho)    -- enable("hypervisor_id", virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:26:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
159/190 ./tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py 495.05ms X
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:18:9      - Unknown word (virtwho)    -- virtwho_conf = "/etc/virt-who
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:18:30     - Unknown word (virt)       -- virtwho_conf = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:19:43     - Unknown word (virtwho)    -- option_enable('[global]', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:20:40     - Unknown word (virtwho)    -- option_enable('debug', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:21:54     - Unknown word (virtwho)    -- value('debug', 'True', virtwho_conf)
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:22:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:25:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:30:22     - Unknown word (Virtwho)    -- extra_org = 'Virtwho_Org'
	 Suggestions: [Vitro, Virtual, Virtues, Virtuoso, Virtue]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:36:60     - Unknown word (vdsm)       -- hypervisor_type and 'vdsm' not in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:44:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
160/190 ./tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py 494.42ms X
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:28:22     - Unknown word (Virtwho)    -- extra_org = 'Virtwho_Org'
	 Suggestions: [Vitro, Virtual, Virtues, Virtuoso, Virtue]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:29:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:32:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:35:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_hostname", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:36:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_port", "443", config
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:37:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_prefix", register_prefix
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:38:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_username", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:39:29     - Unknown word (rhsm)       -- self.vw_option_add("rhsm_password", register
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:40:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:64:26     - Unknown word (virtwho)    -- config_name_2 = "virtwho-config-2"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:67:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:79:67     - Unknown word (webui)      -- host/hypervisor from webui")
	 Suggestions: [webkit, web's, webby, weber, webb]
161/190 ./tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py 1074.40ms X
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:41:14     - Unknown word (hyperv)     -- 'hyperv': 'hyperv
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:41:34     - Unknown word (hyperv)     -- hyperv': 'hyperv_ak',
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:43:14     - Unknown word (vdsm)       -- 'vdsm': 'vdsm
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:43:34     - Unknown word (vdsm)       -- vdsm': 'vdsm_ak',
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:44:14     - Unknown word (rhevm)      -- 'rhevm': 'rhevm
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:44:34     - Unknown word (rhevm)      -- rhevm': 'rhevm_ak',
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:45:14     - Unknown word (kubevirt)   -- 'kubevirt': 'kubevirt
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:45:34     - Unknown word (kubevirt)   -- kubevirt': 'kubevirt_ak',
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:49:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:52:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:61:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:66:26     - Unknown word (withou)     -- "withou sku in the key, "
	 Suggestions: [without, withouts, withal, withed, wither]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:68:84     - Unknown word (skus)       -- pool from all available skus
	 Suggestions: [skua, skuas, skis, skys, sous]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:69:29     - Unknown word (unattach)   -- self.system_sku_unattach(self.ssh_host())
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:85:19     - Unknown word (katello)    -- limit_katello_id = self.satellite
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:85:47     - Unknown word (katello)    -- id = self.satellite_katello_id(
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:88:58     - Unknown word (katello)    -- config, ak_name, limit_katello_id, default_org_id)
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:98:57     - Unknown word (skus)       -- attached with both two skus
	 Suggestions: [skua, skuas, skis, skys, sous]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:99:17     - Unknown word (katello)    -- vdc_katello_id = self.satellite
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:99:45     - Unknown word (katello)    -- id = self.satellite_katello_id(
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:116:39    - Unknown word (unattach)   -- satellite_active_key_unattach_sku(
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:118:39    - Unknown word (unattach)   -- satellite_active_key_unattach_sku(
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
162/190 ./tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py 675.19ms X
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:24:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:47:9      - Unknown word (katello)    -- katello_id = self.satellite
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:47:37     - Unknown word (katello)    -- id = self.satellite_katello_id(self.ssh_host(),
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:51:51     - Unknown word (vdsm)       -- hypervisor_type or 'vdsm' in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:57:49     - Unknown word (katello)    -- s -k -u {0}:{1} {2}/katello/api/organizations/{
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:58:72     - Unknown word (katello)    -- api ,default_org_id, katello_id)
	 Suggestions: [katelyn, Katelyn, patella, karol, kate's]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:59:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:70:78     - Unknown word (Unlimitted) -- status is '0 out of Unlimitted'")
	 Suggestions: [Unlimited, Unremitted, Unlimbered, Unlighted, Unlamented]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:73:76     - Unknown word (Unlimitted) -- status is '0 out of Unlimitted'")
	 Suggestions: [Unlimited, Unremitted, Unlimbered, Unlighted, Unlamented]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:76:41     - Unknown word (subscritons) -- error("failed to get subscritons info")
	 Suggestions: [subscriptions, subscription's, subscription, subsections, subscripting]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:83:32     - Unknown word (runcmd)      -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:87:82     - Unknown word (Unlimitted)  -- status is '1 out of Unlimitted'")
	 Suggestions: [Unlimited, Unremitted, Unlimbered, Unlighted, Unlamented]
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:90:33     - Unknown word (webui)       -- logger.warning("webui has not been refreshed
	 Suggestions: [webkit, web's, webby, weber, webb]
163/190 ./tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py 449.29ms X
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:25:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:28:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:33:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:38:51     - Unknown word (vdsm)       -- hypervisor_type or 'vdsm' in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:62:38     - Unknown word (succeded)   -- logger.info("succeded to check registered
	 Suggestions: [succeeded*, succeed, succeeder, succeeds, succored]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:70:38     - Unknown word (succeded)   -- logger.info("succeded to check registered
	 Suggestions: [succeeded*, succeed, succeeder, succeeds, succored]
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:78:58     - Unknown word (vdsm)       -- hypervisor_type and "vdsm" not in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
164/190 ./tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py 247.99ms X
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:27:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:31:58     - Unknown word (webui)      -- delete virt-who host from webui")
	 Suggestions: [webkit, web's, webby, weber, webb]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:36:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:40:40     - Unknown word (rhsm)       -- self.msg_validation(rhsm_output, error_msg, exp
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:51:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:55:56     - Unknown word (vdsm)       -- hypervisor_type and "vdsm" not in hypervisor_type
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:56:59     - Unknown word (webui)      -- delete hypervisor from webui")
	 Suggestions: [webkit, web's, webby, weber, webb]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:57:45     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:60:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
165/190 ./tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py 759.55ms X
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:17:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:20:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:26:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:29:23     - Unknown word (Virtwho)    -- active_key = 'Virtwho_AK'
	 Suggestions: [Vitro, Virtual, Virtues, Virtuoso, Virtue]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:30:61     - Unknown word (activationkey) -- register --org="{0}" --activationkey="{1}"'.format(
	 Suggestions: [activation's, activations, activation]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:38:32     - Unknown word (runcmd)        -- ret, output = self.runcmd(cmd, system)
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:48:27     - Unknown word (rhsm)          -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:59:21     - Unknown word (unattach)      -- self.vw_web_unattach(host_name, host_uuid
	 Suggestions: [unattached, unteach, reattach, attach, unlatch]
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:62:28     - Unknown word (runcmd)        -- ret, output = self.runcmd(cmd, self.ssh_guest
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
166/190 ./tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py 298.86ms X
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:25:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:26:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:39:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
167/190 ./tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py 48.05ms X
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:15:36     - Unknown word (virt)       -- info(">>>step1: run virt-who-password")
	 Suggestions: [virtu, vert, airt, dirt, girt]
168/190 ./tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py 469.63ms X
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:11:50     - Unknown word (vdsm)       -- in ("libvirt-local", "vdsm", "xen"):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:18:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:27:57     - Unknown word (hyperivosr) -- who host can access hyperivosr by default")
	 Suggestions: [hypervisor, hypervisors, hyperion, Hyperion]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:40:66     - Unknown word (hyperivosr) -- disconnect virt-who host from hyperivosr")
	 Suggestions: [hypervisor, hypervisors, hyperion, Hyperion]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:50:22     - Unknown word (rhsm)       -- ret, rhsm_output = self.runcmd
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:50:41     - Unknown word (runcmd)     -- rhsm_output = self.runcmd("cat /var/log/rhsm/rhsm
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:50:62     - Unknown word (rhsm)       -- runcmd("cat /var/log/rhsm/rhsm.log", self.ssh
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:50:67     - Unknown word (rhsm)       -- runcmd("cat /var/log/rhsm/rhsm.log", self.ssh_host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:50:107    - Unknown word (rhsm)       -- host(), desc="check rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:55:53     - Unknown word (rhsm)       -- 0 or "timed out" in rhsm_output or "timeout"
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:56:64     - Unknown word (hyperivosr) -- is disconnected from hyperivosr by timeout")
	 Suggestions: [hypervisor, hypervisors, hyperion, Hyperion]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:67:63     - Unknown word (hyperivosr) -- connect virt-who host from hyperivosr again")
	 Suggestions: [hypervisor, hypervisors, hyperion, Hyperion]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:70:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("rm -rf /var/log/rhsm
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:72:37     - Unknown word (runcmd)     -- rhsm_output = self.runcmd("cat /var/log/rhsm/rhsm
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:77:55     - Unknown word (hyperivosr) -- who is connected to hyperivosr normally")
	 Suggestions: [hypervisor, hypervisors, hyperion, Hyperion]
169/190 ./tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py 706.13ms X
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:11:33     - Unknown word (kubevirt)   -- hypervisor_type in ('kubevirt', 'ahv'):
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:18:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:23:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:24:42     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid()
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:50:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:52:72     - Unknown word (hyperv)     -- , "libvirt-local", "hyperv", "esx"):
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:64:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:75:32     - Unknown word (runcmd)     -- ret, output = self.runcmd("sync;sync;sync", self
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:77:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:79:73     - Unknown word (hyperv)     -- "libvirt-local", "hyperv", "esx"):
	 Suggestions: [hyper, hyperon, hype's, hyped, hypes]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:91:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:106:54    - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:111:54    - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
170/190 ./tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py 272.15ms X
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:10:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '1.3
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:20:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_DEBUG",virt_config)
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:21:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_DEBUG", '1', virt_config
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:22:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_INTERVAL", virt_config
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:23:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:30:42     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_INTERVAL", '60', virt
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:31:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:39:42     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_INTERVAL", '120', filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:40:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
171/190 ./tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py 129.29ms X
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:11:13     - Unknown word (rhevm)      -- if "rhevm" not in hypervisor_type
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:18:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:27:49     - Unknown word (rhevm)      -- step1: run virt-who for rhevm with ovirt-engine")
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:27:60     - Unknown word (ovirt)      -- virt-who for rhevm with ovirt-engine")
	 Suggestions: [overt, ovine, ovid, ovary, overs]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:28:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:32:49     - Unknown word (rhevm)      -- step2: run virt-who for rhevm with ovirt-engine/"
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:32:60     - Unknown word (ovirt)      -- virt-who for rhevm with ovirt-engine/")
	 Suggestions: [overt, ovine, ovid, ovary, overs]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:38:49     - Unknown word (rhevm)      -- step3: run virt-who for rhevm without /ovirt-engine
	 Suggestions: [rheum, rehem, rheims, rheums, rheumy]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:38:64     - Unknown word (ovirt)      -- who for rhevm without /ovirt-engine")
	 Suggestions: [overt, ovine, ovid, ovary, overs]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:39:74     - Unknown word (ovirt)      -- hypervisor_server.rstrip('/ovirt-engine'), config_file
	 Suggestions: [overt, ovine, ovid, ovary, overs]
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:40:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
172/190 ./tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py 184.00ms X
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:11:54     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:17:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:18:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:29:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:31:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:34:28     - Unknown word (runcmd)     -- ret, output = self.runcmd("rpm -qa kernel", new
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
173/190 ./tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py 162.92ms X
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:14:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:15:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:37:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd1, self.ssh_host
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:39:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd2, self.ssh_host
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:59:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd1, self.ssh_host
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
174/190 ./tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py 140.92ms X
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:31:23     - Unknown word (putfile)    -- self.paramiko_putfile(self.ssh_host(), json
	 Suggestions: [potfile, outfile, puffily, putline, potfiles]
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:39:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:51:40     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
175/190 ./tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py 119.49ms X
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:12:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:18:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:38:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, war_msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:44:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:48:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, war_msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
176/190 ./tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py 191.68ms X
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:11:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] < '0.25
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:14:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:23:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:36:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:37:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:40:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:46:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:50:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:53:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
177/190 ./tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py 141.39ms X
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:15:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:16:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:27:50     - Unknown word (vdsm)       -- in ("libvirt-local", "vdsm"):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:36:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, error_msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:40:32     - Unknown word (disabel)    -- logger.info(">>>step3: disabel is_hypervisor option
	 Suggestions: [disable, isabel, Isabel, disabled, disabler]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:44:50     - Unknown word (vdsm)       -- in ("libvirt-local", "vdsm"):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:45:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:47:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, error_msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:48:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, war_msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
178/190 ./tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py 307.95ms X
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:13:50     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm'):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:28:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:29:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:44:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:50:26     - Unknown word (runcmd)     -- _, result = self.runcmd(cmd, ssh_register)
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:56:62     - Unknown word (rhts)       -- randint(1, 10000)) + ".rhts.eng.pek2.redhat.com
	 Suggestions: [rh's, rhos, rats, rets, Rh's]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:58:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:64:26     - Unknown word (runcmd)     -- _, result = self.runcmd(cmd, ssh_register)
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
179/190 ./tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py 410.72ms X
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:17:9      - Unknown word (sysconf)    -- sysconf_file = "/etc/sysconfig
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:17:40     - Unknown word (virt)       -- file = "/etc/sysconfig/virt-who"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:22:36     - Unknown word (virtwho)    -- vw_etc_d_mode_create('virtwho-config', '/etc/virt
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:22:70     - Unknown word (virtwho)    -- config', '/etc/virt-who.d/virtwho-config.conf')
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:26:31     - Unknown word (sysconf)    -- cmd = 'cat {}'.format(sysconf_file)
	 Suggestions: [sysconfig, sysco, Sysco, sysctl, systole]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:27:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd,self.ssh_host()
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:32:61     - Unknown word (rhsm)       -- the prompt in /var/log/rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:33:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:39:35     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, msg2)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:43:28     - Unknown word (runcmd)     -- ret, output = self.runcmd("man virt-who", self
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
180/190 ./tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py 493.79ms X
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:27:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:30:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:34:41     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid()
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:39:29     - Unknown word (virtwho)    -- new_cluster_name = "virtwho/test-" + ''.join(random
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:43:72     - Unknown word (virtwho)    -- vcenter cluster name to: virtwho/test")
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:47:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:49:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, '"hypervisor
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:53:46     - Unknown word (hyperivsor) -- >>>step3: check the hyperivsor facts")
	 Suggestions: [hypervisor, hypervisors, hypervisor's, supervisor, hyperion]
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:58:34     - Unknown word (runcmd)     -- _, result = self.runcmd(cmd, ssh_register)
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
181/190 ./tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py 186.83ms X
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:18:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:19:29     - Unknown word (virt)       -- config_file = "/etc/virt-who.d/{0}.conf".format
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:31:50     - Unknown word (vdsm)       -- in ("libvirt-local", "vdsm"):
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:35:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:36:31     - Unknown word (runcmd)     -- ret, fake_json = self.runcmd("cat {0}".format(json
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
182/190 ./tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py 625.47ms X
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:18:27     - Unknown word (virt)       -- conf_file = "/etc/virt-who.conf"
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:21:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:29:18     - Unknown word (runcmd)     -- self.runcmd('cp {0} {1}'.format
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:33:21     - Unknown word (VIRTWHO)    -- 'VIRTWHO_DEBUG = 1\n'
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:34:21     - Unknown word (VIRTWHO)    -- 'VIRTWHO_ONE_SHOT = 0\n'
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:35:21     - Unknown word (VIRTWHO)    -- 'VIRTWHO_INTERVAL = 120\n'
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:40:18     - Unknown word (runcmd)     -- self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:42:40     - Unknown word (migrateconfiguration) -- info(">>>step3: run migrateconfiguration.py script")
	 Suggestions: []
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:43:70     - Unknown word (virtwho)              -- python3.9/site-packages/virtwho/migrate/migrateconfiguration
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:43:86     - Unknown word (migrateconfiguration) -- packages/virtwho/migrate/migrateconfiguration.py"
	 Suggestions: []
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:44:18     - Unknown word (runcmd)               -- self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:48:32     - Unknown word (runcmd)               -- ret, output = self.runcmd("cat {0}".format(conf
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:55:21     - Unknown word (oneshot)              -- "oneshot=False"
	 Suggestions: [overshot, longshot, eyeshot, onset, oneself]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:65:31     - Unknown word (rhsm)                 -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:67:39     - Unknown word (rhsm)                 -- self.vw_msg_search(rhsm_output, msg="\[.*DEBUG
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:74:18     - Unknown word (runcmd)               -- self.runcmd('cp {0} {1} ; rm -f
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
183/190 ./tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py 560.10ms X
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:13:13     - Unknown word (kubevirt)   -- if "kubevirt" not in hypervisor_type
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:21:49     - Unknown word (virt)       -- enable('[global]', "/etc/virt-who.conf")
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:24:24     - Unknown word (virtwho)    -- config_name = "virtwho-config"
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:29:42     - Unknown word (kubeconfig) -- >>>step1: configure kubeconfig without cert and run
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:31:34     - Unknown word (kubevirt)   -- config_url = deploy.kubevirt.kube_config_url_no_cert
	 Suggestions: [subvert, subedit, hubert, Hubert, libvirt]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:33:14     - Unknown word (runcmd)     -- self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:34:38     - Unknown word (kubeconfig) -- option_update_value("kubeconfig", kube_config_file,
	 Suggestions: [fileconfig, paneconfig, fileConfig, rbconfig]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:42:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:45:39     - Unknown word (rhsm)       -- self.vw_msg_search(rhsm_output, error_msg)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:54:31     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:59:14     - Unknown word (runcmd)     -- self.runcmd("rm -rf {0}".format
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
184/190 ./tmp/lint/tier3/__init__.py 3.34ms
185/190 ./tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py 326.11ms X
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:14:42     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm') for key in (hypervisor
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:15:49     - Unknown word (vdsm)       -- skip("libvirt-local or vdsm")
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:16:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:23:32     - Unknown word (VIRTWHO)    -- self.vw_option_enable("VIRTWHO_DEBUG", filename=config
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:24:38     - Unknown word (VIRTWHO)    -- option_update_value("VIRTWHO_DEBUG", '1', filename
	 Suggestions: [VITRO, VIRTUAL, VIRTUES, VIRTUOSO, VIRTUE]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:30:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:34:56     - Unknown word (rhsm)       -- check how many modes in rhsm.log")
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:35:70     - Unknown word (rhsm)       -- *\("(.*?)" mode\)', rhsm_output)
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:37:63     - Unknown word (rhsm)       -- check, only one mode in rhsm.log: {0}".format(modes
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
186/190 ./tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py 494.84ms X
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:14:42     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm') for key in (hypervisor
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:15:49     - Unknown word (vdsm)       -- skip("libvirt-local or vdsm")
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:20:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:23:27     - Unknown word (virtwho)    -- config_01_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:25:27     - Unknown word (virtwho)    -- config_02_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:27:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='01')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:28:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='02')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:35:28     - Unknown word (runcmd)     -- ret, output = self.runcmd(cmd, self.ssh_host(
	 Suggestions: [runcode, runctx, rancid, putcmd, runcall]
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:36:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
187/190 ./tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py 381.49ms X
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:14:42     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm') for key in (hypervisor
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:15:49     - Unknown word (vdsm)       -- skip("libvirt-local or vdsm")
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:20:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:23:27     - Unknown word (virtwho)    -- config_01_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:25:27     - Unknown word (virtwho)    -- config_02_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:27:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='01')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:28:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='02')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
188/190 ./tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py 347.32ms X
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:14:42     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm') for key in (hypervisor
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:15:49     - Unknown word (vdsm)       -- skip("libvirt-local or vdsm")
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:16:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:25:27     - Unknown word (virtwho)    -- config_01_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:27:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='01')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:28:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='02')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:34:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
189/190 ./tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py 327.65ms X
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:14:42     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm') for key in (hypervisor
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:15:49     - Unknown word (vdsm)       -- skip("libvirt-local or vdsm")
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:16:45     - Unknown word (virt)       -- check(self.ssh_host(), 'virt-who')[9:15] >= '0.2
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:22:27     - Unknown word (virtwho)    -- config_01_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:24:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='01')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:25:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='02')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:31:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
190/190 ./tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py 419.33ms X
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:2:6       - Unknown word (virt)       -- from virt_who import *
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:3:6       - Unknown word (virt)       -- from virt_who.base import Base
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:4:6       - Unknown word (virt)       -- from virt_who.register import
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:5:6       - Unknown word (virt)       -- from virt_who.testing import Testing
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:14:42     - Unknown word (vdsm)       -- in ('libvirt-local', 'vdsm') for key in (hypervisor
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:15:49     - Unknown word (vdsm)       -- skip("libvirt-local or vdsm")
	 Suggestions: [vsdm, vssm, vsdx, vsd, vd's]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:20:49     - Unknown word (virt)       -- enable('[global]', '/etc/virt-who.conf')
	 Suggestions: [virtu, vert, airt, dirt, girt]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:23:27     - Unknown word (virtwho)    -- config_01_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:25:27     - Unknown word (virtwho)    -- config_02_name = "virtwho-config-{0}".format(hypervisor
	 Suggestions: [vitro, virtual, virtues, virtuoso, virtue]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:27:44     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid(uid='01')
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:28:44     - Unknown word (hostuuid)   -- self.get_hypervisor_hostuuid(uid='02')
	 Suggestions: [hosteled, hosted, costumed, postured, histoid]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:29:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='01')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:30:45     - Unknown word (guestuuid)  -- self.get_hypervisor_guestuuid(uid='02')
	 Suggestions: [guested, gestured, gen_uuid]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:43:27     - Unknown word (rhsm)       -- data, tty_output, rhsm_output = self.vw_start
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:45:24     - Unknown word (rhsm)       -- res2 = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:46:24     - Unknown word (rhsm)       -- res3 = self.vw_rhsm_associate(data, host
	 Suggestions: [rhs, hsm, RHS, hrs, rms]
CSpell: Files checked: 190, Issues found: 2582 in 183 files


[31m‚ùå Linted [PYTHON] files with [pyright]: Found 1822 error(s) - (176.54s)[0m
- Using [pyright v1.1.296] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/python_pyright
- MegaLinter key: [PYTHON_PYRIGHT]
- Rules config: identified by [pyright]
- Number of files analyzed: [189]
--Error detail:

added 1 package in 3m
No configuration file found.
No pyproject.toml file found.
stubPath /typings is not a valid directory.
Assuming Python platform Linux
Searching for source files
Found 189 source files
pyright 1.1.296
/tmp/lint/gating/test_virtwho_gating.py
  /tmp/lint/gating/test_virtwho_gating.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/gating/test_virtwho_gating.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/gating/test_virtwho_gating.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/gating/test_virtwho_gating.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/gating/test_virtwho_gating.py:39:53 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/gating/test_virtwho_gating.py:39:62 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/gating/test_virtwho_gating.py:43:53 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/gating/test_virtwho_gating.py:43:62 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
/tmp/lint/sca/test_virtwho_sca.py
  /tmp/lint/sca/test_virtwho_sca.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/sca/test_virtwho_sca.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/sca/test_virtwho_sca.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/sca/test_virtwho_sca.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/sca/test_virtwho_sca.py:45:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/smoke/test_virtwho_smoke.py
  /tmp/lint/smoke/test_virtwho_smoke.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/smoke/test_virtwho_smoke.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/smoke/test_virtwho_smoke.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/smoke/test_virtwho_smoke.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/smoke/test_virtwho_smoke.py:58:41 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:58:62 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:62:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:68:49 - error: "value" is possibly unbound (reportUnboundVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:96:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:101:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:108:20 - warning: Assert expression always evaluates to true (reportAssertAlwaysTrue)
  /tmp/lint/smoke/test_virtwho_smoke.py:119:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:132:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:141:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:154:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:157:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:166:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:174:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:177:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:184:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:186:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:194:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:202:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:210:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:221:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/smoke/test_virtwho_smoke.py:225:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:19:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:21:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:45:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1001_check_virtwho_is_shipped_by_different_arch.py:48:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:21:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:25:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:30:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:33:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1002_check_virtwho_can_be_installed_and_uninstalled.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1003_check_virtwho_package_info.py
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:16:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:20:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1003_check_virtwho_package_info.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:16:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1004_check_virtwho_virtwhoconfig_man_page_and_help_exist.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1005_check_virtwho_service_function.py
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:29:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:37:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1005_check_virtwho_service_function.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py
  /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1006_run_virtwho_with_default_config.py:24:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py
  /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1007_check_virtwho_fetch_and_send_function_by_sysconfig.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py
  /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1008_check_virtwho_fetch_and_send_function_by_virtwho_d.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py
  /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1009_check_virtwho_fetch_and_send_function_by_cli.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:30:59 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:30:68 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:37:59 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1010_check_virtwho_debug_function_by_cli.py:37:68 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
/tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:28:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:28:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:36:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:36:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:44:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1011_check_virtwho_debug_function_by_sysconfig.py:44:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
/tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py
  /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1012_check_virtwho_oneshot_function_by_cli.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1013_check_virtwho_oneshot_function_by_sysconfig.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1014_check_interval_function_by_cli.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1015_check_interval_function_by_etc_sysconfig.py:49:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1016_check_print_function_by_cli.py
  /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1016_check_print_function_by_cli.py:36:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1017_check_config_function_by_cli.py
  /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:22:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1017_check_config_function_by_cli.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:25:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:31:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:36:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:41:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:46:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:38:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:43:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:48:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:58:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:64:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1018_check_log_per_config_function_by_cli.py:70:25 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py
  /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:27:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1019_check_log_dir_function_by_cli.py:39:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py
  /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:26:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1020_check_log_file_function_by_cli.py:38:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:25:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:30:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1021_check_reporter_id_function_by_cli.py:34:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:20:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:22:14 - error: "threading" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:24:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:26:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:29:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:36:13 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:42:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:43:12 - error: "is_killed" is possibly unbound (reportUnboundVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:44:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1022_check_virtwho_can_be_killed_normally_in_terminal_side.py:47:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:19:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:24:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:31:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1023_run_virtwho_in_cli_when_it_is_running.py:34:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:17:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:22:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:27:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1024_check_virtwho_sysconfig_and_pid_files_permission.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:30:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:33:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1025_start_virtwho_service_by_ssh.py:43:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:24:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:44:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1026_check_virtwho_executabe_file_can_be_insteaded_or_not.py:47:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:22:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:41:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:44:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:53:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1028_check_guest_attr_by_curl.py:56:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:22:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1029_check_virtwho_status_after_restart_rhsmcertd_service.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1030_check_mapping_info_with_one_file_include_one_mode_in_etc_virtwho_d.py:25:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1034_check_mapping_info_with_dconf_and_sysconf_for_the_same_mode.py:43:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:35:17 - error: "re" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:37:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1036_check_ignore_swp_file_in_etc_virtwho_d.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py
  /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1037_check_sam_satellite_options_by_cli.py:24:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py
  /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1038_check_sam_satellite_options_by_etc_sysconfig.py:24:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:22:41 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:22:62 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:29:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:36:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:46:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:54:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:61:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:37:40 - error: "value" is possibly unbound (reportUnboundVariable)
  /tmp/lint/tier1/tc_1039_check_http_proxy_option_by_etc_sysconfig.py:47:49 - error: "bad_value" is possibly unbound (reportUnboundVariable)
/tmp/lint/tier1/tc_1040_check_virt_who_password_function.py
  /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1040_check_virt_who_password_function.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:1:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:8:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1041_check_encrypted_password_option_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1042_check_rhsm_username_and_rhsm_password_option_in_etc_virtwho_d.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1043_check_rhsm_username_and_rhsm_encrypted_password_option_in_etc_virtwho_d.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1044_check_rhsm_hostname_port_prefix_options_in_etc_virtwho_d.py:55:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:29:24 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:30:22 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:37:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:48:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:57:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:63:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:70:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:78:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:87:17 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:88:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:94:17 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:95:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1045_check_rhsm_proxy_function_in_rhsm_conf.py:102:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1046_check_filter_hosts_option_in_etc_virtwho_d.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1047_check_exclude_hosts_option_in_etc_virtwho_d.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:34:21 - error: "re" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1048_check_filter_host_parents_option_in_etc_virtwho_d.py:45:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:34:21 - error: "re" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1049_check_exclude_host_parents_option_in_etc_virtwho_d.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1050_check_filter_hosts_and_exclude_hosts_options_in_etc_virtwho_d.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1051_check_simplified_vim_option_in_etc_virtwho_d.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:36:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:51:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:54:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:66:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1052_check_hypervisor_id_option_in_etc_virtwho_d.py:69:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:36:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:50:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1053_check_hypervisor_id_and_filter_hosts_option_in_etc_virtwho_d.py:53:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1054_check_hypervisor_id_and_exclude_hosts_option_in_etc_virtwho_d.py:36:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:20:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:26:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1055_check_global_section_header_in_etc_virtwho_conf.py:26:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
/tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1056_check_global_interval_option_in_etc_virtwho_conf.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:27:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:35:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1057_check_global_reporter_id_option_in_etc_virtwho_conf.py:38:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:21:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:26:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:26:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:34:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:34:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:42:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1058_check_global_debug_option_in_etc_virtwho_conf.py:42:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
/tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1059_check_global_oneshot_option_in_etc_virtwho_conf.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:32:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:35:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:45:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:49:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:51:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:54:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:56:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:59:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:61:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:70:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:76:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1060_check_global_log_per_config_option_in_etc_virtwho_conf.py:82:21 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:34:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1061_check_global_log_dir_option_in_etc_virtwho_conf.py:41:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:36:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1062_check_global_log_file_option_in_etc_virtwho_conf.py:43:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1063_check_global_configs_option_in_etc_virtwho_conf.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1064_check_defaults_section_header_in_etc_virtwho_conf.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1065_check_defaults_owner_option_in_etc_virtwho_conf.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1066_check_defaults_env_option_in_etc_virtwho_conf.py:39:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:39:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:51:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1067_check_defaults_hypervisor_id_option_in_etc_virtwho_conf.py:54:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1068_check_fake_mode_with_one_hypervisor_in_etc_virtwho_d.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1069_check_fake_mode_subscribe_function_in_etc_virtwho_d.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1070_check_fake_mode_pool_revoked_function_in_etc_virtwho_d.py:55:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:25:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:28:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:39:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:40:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1072_check_rhsm_log_and_thread_after_reregister_host.py:52:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:35:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1073_check_mapping_info_point_to_specified_owner.py:39:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1074_check_mapping_info_for_hypervisor_facts.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py
  /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1075_check_rhsm_connection_info_in_rhsm_log.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:54:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1076_check_guest_facts_by_subscription_manager.py:57:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1077_check_associated_info_by_rhsmlog_and_webui.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:43:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1078_check_temporary_bonus_pool_can_be_attached_in_guest.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1079_check_unlimited_virtual_pool_created_in_guest.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:39:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:56:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:60:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1080_check_unlimited_virtual_pool_attached_by_poolId_in_guest.py:63:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1081_check_unlimited_virtual_pool_attached_by_auto_in_guest.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1082_check_unlimited_virtual_pool_revoked_in_guest_after_host_unattached.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1083_check_unlimited_virtual_pool_revoked_in_guest_after_host_unregister.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1084_check_vdc_virtual_pool_created_in_guest.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1085_check_vdc_virtual_pool_attached_by_poolId_in_guest.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1086_check_vdc_virtual_pool_attached_by_auto_in_guest.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1087_check_vdc_virtual_pool_revoked_in_guest_after_host_unattached.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1088_check_vdc_virtual_pool_revoked_in_guest_after_host_unregister.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1089_check_vdc_consumed_status_in_host_after_set_cpu_socket.py:51:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1090_check_vdc_consumed_status_in_guest_after_set_cpu_socket.py:55:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:39:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:55:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:57:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1091_check_vdc_repos_in_guest_and_host_after_subscribed.py:66:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1092_check_limited_virtual_pool_created_in_guest.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:45:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:48:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:51:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:60:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1093_check_limited_virtual_pool_attached_by_poolId_in_guest.py:77:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:45:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:48:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1094_check_limited_virtual_pool_attached_by_auto_in_guest.py:52:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1095_check_limited_virtual_pool_revoked_in_guest_after_host_unattached.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1096_check_limited_virtual_pool_revoked_in_guest_after_host_unregister.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:41:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1097_check_instance_no_virtual_pool_created_in_guest.py:44:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:51:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1098_check_instance_consumed_status_in_host_after_set_cpu_socket_1.py:62:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:33:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:38:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:43:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:54:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:63:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1099_check_instance_consumed_status_in_host_after_set_cpu_socket_8.py:75:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:45:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:56:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:65:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:81:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:83:13 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1100_check_instance_consumed_status_by_auto_in_host_after_set_cpu_socket_8.py:89:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1101_check_instance_consumed_status_in_guest_after_set_cpu_socket_1.py:56:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:56:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1102_check_instance_consumed_status_in_guest_after_set_cpu_socket_8.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:37:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:46:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:49:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:52:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:60:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1103_check_virtwho_threads_number_after_reconfig_libvirt.py:63:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:25:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:38:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:38:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:45:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:48:60 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier1/tc_1104_check_virtwho_config_exist_after_reboot_system.py:48:69 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
/tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:32:24 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:33:22 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:51:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:60:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:66:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:73:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:81:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:89:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:95:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1105_check_rhsm_proxy_function_in_etc_virtwho_d.py:102:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:58:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1106_check_global_print_option_in_etc_virtwho_conf.py:66:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1107_temporary_sku_can_be_changed_to_stable_by_auto.py:45:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1108_check_hypervisor_facts.py
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:43:41 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:47:20 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:48:22 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:49:20 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:59:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:62:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:64:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:67:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:71:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:74:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:77:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:80:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:83:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:90:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:93:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:97:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:100:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1108_check_hypervisor_facts.py:104:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py
  /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1109_connect_to_hypervisor_by_read_only_account.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py
  /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:22:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1110_send_virt-who_version_in_the_User-Agent_header.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1111_template_conf_validation.py
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:40:20 - error: "re" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:41:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1111_template_conf_validation.py:44:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:19:41 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:19:62 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:25:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:32:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:39:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:50:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:58:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:41:49 - error: "value" is possibly unbound (reportUnboundVariable)
  /tmp/lint/tier1/tc_1112_check_http_proxy_option_by_etc_conf.py:51:49 - error: "bad_value" is possibly unbound (reportUnboundVariable)
/tmp/lint/tier1/tc_1113_check_virtwho_status.py
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:49:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:60:27 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:75:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier1/tc_1113_check_virtwho_status.py:89:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:60:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2001_validate_owner_option_by_cli.py:70:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:45:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:58:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2002_validate_env_option_by_cli.py:70:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:45:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:61:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:67:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:78:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2003_validate_server_option_by_cli.py:84:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:64:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:70:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:81:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2004_validate_username_option_by_cli.py:87:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:44:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:54:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:59:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:71:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:77:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:88:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2005_validate_password_option_by_cli.py:94:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:40:59 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:40:68 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:60:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:71:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:74:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2006_validate_config_function_by_cli.py:77:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2007_validate_parameters_consistency_by_cli.py:35:15 - error: "re" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:62:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:71:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2008_validate_owner_option_in_etc_sysconfig.py:83:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:62:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:71:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2009_validate_env_option_in_etc_sysconfig.py:83:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:57:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:68:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:72:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:83:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2010_validate_server_option_in_etc_sysconfig.py:95:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:57:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:67:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:71:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:81:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:88:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:98:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2011_validate_username_option_in_etc_sysconfig.py:103:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:39:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:49:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:53:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:63:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:67:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:77:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:81:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:91:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:98:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:108:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2012_validate_password_option_in_etc_sysconfig.py:113:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:36:46 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:36:67 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:44:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:61:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:63:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:64:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:79:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2013_validate_unreachable_proxy_by_config.py:69:40 - error: "value" is possibly unbound (reportUnboundVariable)
/tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:45:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:49:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:56:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:62:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:75:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:82:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2014_validate_header_option_in_etc_virtwho_d.py:94:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:34:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:56:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:57:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2015_validate_type_option_in_etc_virtwho_d.py:70:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:49:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:61:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:70:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2016_validate_owner_option_in_etc_virtwho_d.py:85:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:55:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:64:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:73:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2017_validate_env_option_in_etc_virtwho_d.py:85:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:73:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:87:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:91:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:105:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2018_validate_server_option_in_etc_virtwho_d.py:117:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:49:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:71:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:75:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:85:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:89:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:100:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:107:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:118:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2019_validate_username_option_in_etc_virtwho_d.py:123:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:44:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:58:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:73:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:77:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:86:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:90:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:100:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:107:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:117:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2020_validate_password_option_in_etc_virtwho_d.py:122:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2021_validate_encryped_password_option_by_virtwho_d.py:50:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:35:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:46:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:57:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2022_validate_rhsm_hostname_option_in_etc_virtwho_d.py:67:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:34:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:44:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:54:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2023_validate_rhsm_port_option_in_etc_virtwho_d.py:60:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:35:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:46:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:52:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2024_validate_rhsm_prefix_option_in_etc_virtwho_d.py:65:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:77:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2025_validate_rhsm_username_option_in_etc_virtwho_d.py:89:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2026_validate_rhsm_password_option_in_etc_virtwho_d.py:81:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:52:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2027_validate_rhsm_encrypted_password_option_in_etc_virtwho_d.py:61:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:35:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:47:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2028_validate_wildcard_for_filter_and_exclude_hosts_options_in_etc_virtwho_d.py:51:21 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:39:21 - error: "re" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:45:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:57:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2029_validate_wildcard_for_filter_and_exclude_host_parents_options_in_etc_virtwho_d.py:61:21 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:59:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:67:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:75:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2030_validate_quotes_for_filter_and_exclude_hosts_option_in_etc_virtwho_d.py:83:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2031_validate_unsupported_options_in_etc_virtwho_d.py:25:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2032_validate_file_extension_name_in_etc_virtwho_d.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2033_validate_options_quoted_in_etc_virtwho_d.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:25:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2034_validate_global_interval_by_virtwho_conf.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:51:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2035_validate_global_report_id_by_virtwho_conf.py:55:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:21:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:26:53 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier2/tc_2036_validate_global_debug_by_virtwho_conf.py:26:62 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
/tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2037_validate_global_oneshot_by_virtwho_conf.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:39:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:49:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2038_validate_global_configs_by_virtwho_conf.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:61:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:74:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2039_validate_defaults_owner_option_by_virtwho_conf.py:92:5 - error: "unittest" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:51:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:60:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2040_validate_defaults_env_option_by_virtwho_conf.py:69:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2041_validate_default_hypervisor_id_by_virtwho_conf.py:43:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py
  /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:34:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2042_check_virtwho_send_mapping_to_multi_org.py:56:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:45:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:62:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2043_check_virtwho_send_mapping_to_multi_org_with_rhsm_parameters.py:79:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:56:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:65:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:78:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:96:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:112:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2044_subscribe_guest_with_activation_key.py:126:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:36:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:64:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:67:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:70:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:73:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:76:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:79:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:81:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:87:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:90:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:91:17 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2045_check_content_subscriptions_in_satellite_webui.py:93:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:49:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:50:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:62:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:65:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:70:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2046_check_registered_by_item_in_satellite_webui.py:73:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:48:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2047_check_rhsm_log_after_delete_host_hypervisor_from_server_webui.py:56:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:47:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:55:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2048_register_system_with_activaiton_key.py:66:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:35:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:50:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:59:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2049_validate_hostname_without_domain.py:62:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py
  /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2051_validate_virt_who_password_commandline.py:15:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:30:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:42:21 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:44:17 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:45:23 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:49:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:52:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:56:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:60:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:67:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:69:13 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:71:13 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:75:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2052_validate_hypervisors_connection.py:77:17 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:48:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:116:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:119:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:62:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:74:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2053_validate_guest_state_when_suspend_resume_stop_start.py:89:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py
  /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:29:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2054_validate_trigger_event_with_different_interval.py:38:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2055_validate_rhevm_url_without_ovirt_engine.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:27:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:36:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:39:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:46:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2056_validate_non_root_to_run_virtwho.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:24:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:27:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:38:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:40:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:46:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:50:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:53:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:57:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:60:9 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2057_validate_subscription_register_clean_together.py:63:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:30:13 - error: "json" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:33:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:41:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:44:23 - error: "re" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:45:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:49:23 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:52:21 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:53:25 - error: "time" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:56:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:57:21 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:60:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:63:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:64:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:65:25 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:69:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2058_post_large_json_to_rhsm.py:70:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py
  /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2059_check_redundant_options_in_etc_virtwho_d.py:41:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2060_check_commented_out_line_with_tab_space.py:44:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:23:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2061_check_fake_mode_is_hypervisor_option.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:37:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:43:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:48:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:51:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:55:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:56:32 - error: "random" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:62:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2063_check_hypervisors_fqdn.py:65:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:25:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:32:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2065_deprecation_warning_for_etc_sysconfig.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:38:24 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:39:54 - error: "random" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:39:68 - error: "string" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:43:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:46:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:53:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2066_validate_cluster_name_with_special_char.py:67:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py
  /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:26:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2067_validate_uniform_mapping_format.py:30:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:27:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:31:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:39:45 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:39:66 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:42:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:46:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:64:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:67:57 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:67:66 - warning: Unsupported escape sequence in string literal (reportInvalidStringEscapeSequence)
  /tmp/lint/tier2/tc_2068_validate_options_migration_during_virt_who_upgrade.py:73:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:10:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:31:27 - error: "deploy" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:38:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:41:17 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:50:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier2/tc_2069_valide_insecure_option_for_kubevirt.py:52:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:13:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:29:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:34:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:35:17 - error: "re" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:37:13 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1027_check_two_modes_enabled_in_etc_sysconfig.py:40:13 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:13:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1031_check_mapping_info_with_one_file_include_two_modes_in_etc_virtwho_d.py:40:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:13:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1032_check_mapping_info_with_two_files_for_two_modes_in_etc_virtwho_d.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:13:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:31:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1033_check_mapping_info_with_dconf_and_sysconf_for_two_modes.py:38:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:13:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:28:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1035_check_mapping_info_with_dconf_and_cli_for_two_modes.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
/tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:2:6 - error: Import "virt_who" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:3:6 - error: Import "virt_who.base" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:4:6 - error: Import "virt_who.register" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:5:6 - error: Import "virt_who.testing" could not be resolved (reportMissingImports)
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:9:27 - error: "os" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:13:19 - error: "FailException" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:35:9 - error: "logger" is not defined (reportUndefinedVariable)
  /tmp/lint/tier3/tc_1071_check_fake_mode_with_two_hypervisors_in_etc_virtwho_d.py:42:9 - error: "logger" is not defined (reportUndefinedVariable)
1822 errors, 33 warnings, 0 informations 
Completed in 4.574sec


[32m‚úÖ Linted [REPOSITORY] files with [trivy] successfully - (290.89s)[0m
- Using [trivy v0.38.1] https://megalinter.io/0d699a348a2c104040efd78f2d2970e6ae8e5769/descriptors/repository_trivy
- MegaLinter key: [REPOSITORY_TRIVY]
- Rules config: identified by [trivy]


+----SUMMARY----+------------+---------------+-------+-------+--------+--------------+
| Descriptor    | Linter     | Mode          | Files | Fixed | Errors | Elapsed time |
+---------------+------------+---------------+-------+-------+--------+--------------+
| ‚ùå COPYPASTE  | jscpd      | project       |   n/a |       |    560 |        4.06s |
| ‚ùå PYTHON     | bandit     | list_of_files |   189 |       |     86 |        3.73s |
| ‚ó¨ PYTHON      | black      | list_of_files |   189 |       |      1 |        6.81s |
| ‚ùå PYTHON     | flake8     | list_of_files |   189 |       |   2452 |        2.44s |
| ‚ó¨ PYTHON      | isort      | list_of_files |   189 |       |    130 |        0.56s |
| ‚ùå PYTHON     | mypy       | list_of_files |   189 |       |      2 |        2.49s |
| ‚ùå PYTHON     | pylint     | list_of_files |   189 |       |   1815 |       13.08s |
| ‚ùå PYTHON     | pyright    | list_of_files |   189 |       |   1822 |      176.54s |
| ‚úÖ REPOSITORY | checkov    | project       |   n/a |       |      0 |       14.04s |
| ‚ùå REPOSITORY | devskim    | project       |   n/a |       |      8 |        0.82s |
